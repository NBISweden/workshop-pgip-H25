[
  {
    "objectID": "recipes/index.html",
    "href": "recipes/index.html",
    "title": "Code recipes",
    "section": "",
    "text": "Important\n\n\n\nDisclaimer: although the code posted here has at some point been used to generate figures and data, in some cases it may be out of date and not work out of the box. Please report any bugs or inconsistencies by posting an issue at https://github.com/NBISweden/workshop-pgip/issues.\n\n\n\n\nCollection of recipes to generate data and figures for lecture notes. For full listing, see slides/index.html.\n\n\n\nCollection of SLiM recipes (Haller, Ben, 2016) used to generate figures and examples. See slim/index.html for full listing.",
    "crumbs": [
      "Slides",
      "Code recipes",
      "Code recipes"
    ]
  },
  {
    "objectID": "recipes/index.html#slides",
    "href": "recipes/index.html#slides",
    "title": "Code recipes",
    "section": "",
    "text": "Collection of recipes to generate data and figures for lecture notes. For full listing, see slides/index.html.",
    "crumbs": [
      "Slides",
      "Code recipes",
      "Code recipes"
    ]
  },
  {
    "objectID": "recipes/index.html#slim-recipes",
    "href": "recipes/index.html#slim-recipes",
    "title": "Code recipes",
    "section": "",
    "text": "Collection of SLiM recipes (Haller, Ben, 2016) used to generate figures and examples. See slim/index.html for full listing.",
    "crumbs": [
      "Slides",
      "Code recipes",
      "Code recipes"
    ]
  },
  {
    "objectID": "exercises/genetic_diversity/index.html#listing",
    "href": "exercises/genetic_diversity/index.html#listing",
    "title": "Genetic diversity index",
    "section": "Listing",
    "text": "Listing\n\n\n   \n    \n    \n      Order By\n      Default\n      \n        Title\n      \n    \n  \n    \n      \n      \n    \n\n\n\n\n\n\nTitle\n\n\n\nDescription\n\n\n\n\n\n\n\n\nGenetic diversity landscapes\n\n\n\n\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "Slides",
      "Exercises",
      "Genetic diversity",
      "Genetic diversity index"
    ]
  },
  {
    "objectID": "exercises/recombination_linkage/index.html#listing",
    "href": "exercises/recombination_linkage/index.html#listing",
    "title": "Recombination and linkage index",
    "section": "Listing",
    "text": "Listing\n\n\n   \n    \n    \n      Order By\n      Default\n      \n        Title\n      \n    \n  \n    \n      \n      \n    \n\n\n\n\n\n\nTitle\n\n\n\nDescription\n\n\n\n\n\n\n\n\nLinkage disequilibrium decay\n\n\nCalculate linkage disequilibrium decay from an input VCF with plink2\n\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "Slides",
      "Exercises",
      "Recombination and linkage",
      "Recombination and linkage index"
    ]
  },
  {
    "objectID": "exercises/variant_filtering/basic_filtering.html",
    "href": "exercises/variant_filtering/basic_filtering.html",
    "title": "Basic variant filtering",
    "section": "",
    "text": "In this exercise we will look at ways of filtering variant data. We will begin by applying filters to the variant file containing variant sites only, followed by an approach that filters on sequencing depth in a variant file containing both variant and invariant sites. The latter methodology can then be generalized to generate depth-based filters from BAM files.\n\n\n\n\n\n\n\nCommands have been run on a subset of the data\n\n\n\n\n\nThe commands of this document have been run on a subset (a subregion) of the data. Therefore, although you will use the same commands, your results will differ from those presented here.\n\n\n\n\n\n\n\n\n\n\nLearning objectives\n\n\n\n\n\n\nfilter variants by quality, read depth, and other metrics\napply filters to a VCF file\n\n\n\n\n\n\n\n\n\n\n\nTools\n\n\n\n\n\n\n\nListing\n PDC\n pixi\n\n\n\n\n\nbcftools (Danecek et al., 2021)\n\n\nbedtools (Quinlan & Hall, 2010)\n\ncsvtk\n\nseqkit (Shen et al., 2016)\n\n\nvcflib (Garrison et al., 2022)\n\n\nvcftools (Danecek et al., 2011)\n\n\n\n\nChoose one of Modules and Virtual environment to access relevant tools.\n\nExecute the following command to load modules:\n\n# NB: the following tools are not available as modules:\n# - csvtk\nmodule load bioinfo-tools \\ \n    bcftools/1.20 bedtools/2.31.0 SeqKit/2.4.0 \\ \n    vcflib/2017-04-04 vcftools/0.1.16\n\n\n\nRun the pgip initialization script and activate the pgip default environment:\nsource /cfs/klemming/projects/supr/pgip_2025/init.sh\npgip_activate\nThen activate the e-variant-filtering environment:\n# pgip_shell calls pixi shell -e e-variant-filtering --as-is\npgip_shell e-variant-filtering\n\n\n\nCopy the contents to a file pixi.toml in directory variant-filtering, cd to directory and activate environment with pixi shell:\n\n[workspace]\nchannels = [\"conda-forge\", \"bioconda\"]\nname = \"variant-filtering\"\nplatforms = [\"linux-64\", \"osx-64\"]\n\n[dependencies]\nbcftools = \"&gt;=1.22,&lt;2\"\nbedtools = \"&gt;=2.31.1,&lt;3\"\ncsvtk = \"&gt;=0.34.0,&lt;0.35\"\nseqkit = \"&gt;=2.10.1,&lt;3\"\nvcflib = \"&gt;=1.0.12,&lt;2\"\nvcftools = \"&gt;=0.1.17,&lt;0.2\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nData setup\n\n\n\n\n\n\n\n PDC\n Local\n\n\n\nMake an analysis directory variant-filtering and cd to it:\nmkdir -p variant-filtering && cd variant-filtering\n\nUse rsync to sync data to your analysis directory (hint: first use options -anv to run the command without actually copying data):\n# Run rsync -anv first time\nrsync -av /cfs/klemming/projects/supr/pgip_2025/data/monkeyflower/variant-filtering/ .\n\npgip exercises setup e-variant-filtering\n\n\n\nMake an analysis directory variant-filtering and cd to it:\nmkdir -p variant-filtering && cd variant-filtering\nThen use wget to retrieve data to analysis directory.\nwget -r -np -nH -N --cut-dirs=5 \\\n     https://export.uppmax.uu.se/uppstore2017171/pgip/data/monkeyflower/variant-filtering/",
    "crumbs": [
      "Slides",
      "Exercises",
      "Variant filtering",
      "Basic variant filtering"
    ]
  },
  {
    "objectID": "exercises/variant_filtering/basic_filtering.html#about",
    "href": "exercises/variant_filtering/basic_filtering.html#about",
    "title": "Basic variant filtering",
    "section": "",
    "text": "In this exercise we will look at ways of filtering variant data. We will begin by applying filters to the variant file containing variant sites only, followed by an approach that filters on sequencing depth in a variant file containing both variant and invariant sites. The latter methodology can then be generalized to generate depth-based filters from BAM files.\n\n\n\n\n\n\n\nCommands have been run on a subset of the data\n\n\n\n\n\nThe commands of this document have been run on a subset (a subregion) of the data. Therefore, although you will use the same commands, your results will differ from those presented here.\n\n\n\n\n\n\n\n\n\n\nLearning objectives\n\n\n\n\n\n\nfilter variants by quality, read depth, and other metrics\napply filters to a VCF file\n\n\n\n\n\n\n\n\n\n\n\nTools\n\n\n\n\n\n\n\nListing\n PDC\n pixi\n\n\n\n\n\nbcftools (Danecek et al., 2021)\n\n\nbedtools (Quinlan & Hall, 2010)\n\ncsvtk\n\nseqkit (Shen et al., 2016)\n\n\nvcflib (Garrison et al., 2022)\n\n\nvcftools (Danecek et al., 2011)\n\n\n\n\nChoose one of Modules and Virtual environment to access relevant tools.\n\nExecute the following command to load modules:\n\n# NB: the following tools are not available as modules:\n# - csvtk\nmodule load bioinfo-tools \\ \n    bcftools/1.20 bedtools/2.31.0 SeqKit/2.4.0 \\ \n    vcflib/2017-04-04 vcftools/0.1.16\n\n\n\nRun the pgip initialization script and activate the pgip default environment:\nsource /cfs/klemming/projects/supr/pgip_2025/init.sh\npgip_activate\nThen activate the e-variant-filtering environment:\n# pgip_shell calls pixi shell -e e-variant-filtering --as-is\npgip_shell e-variant-filtering\n\n\n\nCopy the contents to a file pixi.toml in directory variant-filtering, cd to directory and activate environment with pixi shell:\n\n[workspace]\nchannels = [\"conda-forge\", \"bioconda\"]\nname = \"variant-filtering\"\nplatforms = [\"linux-64\", \"osx-64\"]\n\n[dependencies]\nbcftools = \"&gt;=1.22,&lt;2\"\nbedtools = \"&gt;=2.31.1,&lt;3\"\ncsvtk = \"&gt;=0.34.0,&lt;0.35\"\nseqkit = \"&gt;=2.10.1,&lt;3\"\nvcflib = \"&gt;=1.0.12,&lt;2\"\nvcftools = \"&gt;=0.1.17,&lt;0.2\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nData setup\n\n\n\n\n\n\n\n PDC\n Local\n\n\n\nMake an analysis directory variant-filtering and cd to it:\nmkdir -p variant-filtering && cd variant-filtering\n\nUse rsync to sync data to your analysis directory (hint: first use options -anv to run the command without actually copying data):\n# Run rsync -anv first time\nrsync -av /cfs/klemming/projects/supr/pgip_2025/data/monkeyflower/variant-filtering/ .\n\npgip exercises setup e-variant-filtering\n\n\n\nMake an analysis directory variant-filtering and cd to it:\nmkdir -p variant-filtering && cd variant-filtering\nThen use wget to retrieve data to analysis directory.\nwget -r -np -nH -N --cut-dirs=5 \\\n     https://export.uppmax.uu.se/uppstore2017171/pgip/data/monkeyflower/variant-filtering/",
    "crumbs": [
      "Slides",
      "Exercises",
      "Variant filtering",
      "Basic variant filtering"
    ]
  },
  {
    "objectID": "exercises/variant_filtering/basic_filtering.html#background",
    "href": "exercises/variant_filtering/basic_filtering.html#background",
    "title": "Basic variant filtering",
    "section": "Background",
    "text": "Background\nRegardless of how a raw variant call set has been produced, the calls will be of varying quality for a number of reasons. For high-coverage sequencing, the two most common are incompleteness of the reference sequence and misalignments in repetitive regions (Li, 2014). Low-coverage sequencing comes with its own biases and issues, with the most important being the difficulty to accurately call genotypes (Maruki & Lynch, 2017).\nIn order to improve the accuracy of downstream inference, a number of analysis-dependent quality control filters should be applied to the raw variant call set (for a concise summary, see Lou et al. (2021)). In this exercise, we will begin by applying filters to the variant file containing variant sites only, followed by a more general approach based on depth filtering of a variant file consisting of all sites, variant as well as invariant.\nIt is worthwhile to spend time thinking about filtering. As we will see, there are numerous metrics to filter on, and different applications require different filters. This is not as straightforward as it first may seem, and even experts struggle to get filtering settings right.\nSome recommended data filters\nThere are many ways to filter data. Choosing the right set of filters is not easy, and choosing appropriate thresholds depends on application, among other things. Below we list some recommended data filters and thresholds that have general applicability and recently have been reviewed (Lou et al., 2021, Table 3); but see also (Hemstrom et al., 2024):\n\n\ndepth: Given the difficulty of accurately genotyping low-coverage sites, it is recommended to set a minimum read depth cutoff to remove false positive calls. It is also recommended to set a maximum depth cutoff as excessive coverage is often due to mappings to repetitive regions. The thresholds will depend on the depth profile over all sites, but is usually chosen as a range around the mean or median depth (e.g. lower threshold 0.8X mean, upper threshold median + 2 standard deviations).\n\nminimum number of individuals: To avoid sites with too much missing data across individuals, a common requirement is that a minimum number (fraction) of individuals, say 75%, have sequence coverage (depth-based filter) or genotype calls.\n\nquality (p-value): Most variant calling software provide a Phred-scaled probability score that a genotype is a true genotype. Quality values below 20 (i.e., 1%) should not be trusted, but could be set much higher (i.e., lower p-value) depending on application. Note that if a VCF file includes invariant sites, they have quality values set to 0, which renders quality based filtering inappropriate.\n\nMAF: Filter sites based on a minimum minor allele frequency (MAF) threshold. The appropriate choice depends on application. For instance, for PCA or admixture analyses, low-frequency SNPs are uninformative, and a reasonably large cutoff (say, 0.05-0.10) could be set. If an analysis depends on invariant sites, this filter should not be applied.\n\n\n\n\n\n\n\nImportant\n\n\n\nFor applications where invariant sites should be included, such as genetic diversity calculations, neither quality nor MAF filtering should be applied.",
    "crumbs": [
      "Slides",
      "Exercises",
      "Variant filtering",
      "Basic variant filtering"
    ]
  },
  {
    "objectID": "exercises/variant_filtering/basic_filtering.html#sec-basic-filtering",
    "href": "exercises/variant_filtering/basic_filtering.html#sec-basic-filtering",
    "title": "Basic variant filtering",
    "section": "Basic filtering of a VCF file1\n",
    "text": "Basic filtering of a VCF file1\n\nWe will begin by creating filters for a VCF file consisting of variant sites only for red and yellow ecotypes. Before we start, let’s review some statistics for the entire (unfiltered) call set:\n\nbcftools stats variantsites.vcf.gz | grep ^SN\n\nSN  0   number of samples:  10\nSN  0   number of records:  127663\nSN  0   number of no-ALTs:  0\nSN  0   number of SNPs: 104774\nSN  0   number of MNPs: 0\nSN  0   number of indels:   23067\nSN  0   number of others:   0\nSN  0   number of multiallelic sites:   10333\nSN  0   number of multiallelic SNP sites:   2066\n\n\nKeep track of these numbers as we will use them to evaluate the effects of filtering.\nWhen to remove complex variants?\nAs you can see, the raw variant data set contains indels as well as multiallelic SNPs. Often we are mainly concerned with SNPs, in particular bi-allelic SNPs, which begs the question: when should we remove indels and multiallelic sites; prior to or after quality filtering? This will depend on the research question, but a general recommendation is to filter on quality measures first, and then remove more complex variants. This is the approach we opt for here.\nGenerate random subset of variants\nDepending on the size of a study, both in terms of reference sequence and number of samples, the VCF output can become large; a VCF file may in fact contain millions of variants and be several hundred GB! We want to create filters by examining distributions of VCF quality metrics and setting reasonable cutoffs. In order to decrease run time, we will look at a random sample of sites. We use the vcflib program vcfrandomsample to randomly sample approximately 100,000 sites from our VCF file2:\n\n# Set parameter r = 100000 / total number of variants\nbcftools view variantsites.vcf.gz | vcfrandomsample -r 0.9 |\\\n    bgzip -c &gt; variantsites.subset.vcf.gz\nbcftools index variantsites.subset.vcf.gz\nbcftools stats variantsites.subset.vcf.gz |\\\n    grep \"number of records:\"\n\nSN  0   number of records:  114957\n\n\nThe -r parameter sets the rate of sampling which is why we get approximately 100,000 sites. You will need to adjust this parameter accordingly.\nWe will now use vcftools to compile statistics. By default, vcftools outputs results to files with a prefix out. in the current directory. You can read up on settings and options by consulting the man pages with man vcftools3. Therefore, we define a variable OUT where we will output our quality metrics, along with a variable referencing our variant subset:\n\nmkdir -p vcftools\nOUT=vcftools/variantsites.subset\nVCF=variantsites.subset.vcf.gz\n\nGenerate statistics for filters\nvcftools can compile many different kinds of statistics. Below we will focus on the ones relevant to our data filters. We will generate metrics and plot results as we go along, with the goal of generating a set of filtering thresholds to apply to the data.\nTotal depth per site\nTo get a general overview of depth of coverage, we first generate the average depth per sample4:\n\nvcftools --gzvcf $VCF --depth --out $OUT 2&gt;/dev/null\ncat ${OUT}.idepth\ncsvtk summary -t -f MEAN_DEPTH:mean ${OUT}.idepth\n\nINDV    N_SITES MEAN_DEPTH\nPUN-R-ELF   110937  8.87862\nPUN-R-JMC   111227  9.83666\nPUN-R-LH    111758  9.72573\nPUN-R-MT    111401  9.77112\nPUN-R-UCSD  111562  9.21385\nPUN-Y-BCRD  110026  10.302\nPUN-Y-INJ   109427  8.70856\nPUN-Y-LO    108345  8.3459\nPUN-Y-PCT   109868  9.51694\nPUN-Y-POTR  110144  8.87137\nMEAN_DEPTH:mean\n9.32\n\n\nThe average coverage over all samples is 9.3X. This actually is in the low range for a protocol based on explicitly calling genotypes. At 5X coverage, there may be a high probability that only one of the alleles has been sampled (Nielsen et al., 2011), whereby sequencing errors may be mistaken for true variation.\nThen we calculate depth per site to see if we can identify reasonable depth cutoffs:\n\nvcftools --gzvcf $VCF --site-depth --out $OUT 2&gt;/dev/null\nhead -n 3 ${OUT}.ldepth\n\nCHROM   POS SUM_DEPTH   SUMSQ_DEPTH\nLG4 2105    9   23\nLG4 2130    11  21\n\n\nSo, for each position, we have a value (column SUM_DEPTH) for the total depth across all samples.\nWe plot the distribution of total depths by counting how many times each depth is observed. This can be done with csvtk summary where we count positions and group (-g) by the SUM_DEPTH value:5\n\ncsvtk summary -t -g SUM_DEPTH -f POS:count -w 0 ${OUT}.ldepth |\\\n csvtk sort -t -k 1:n |\\\n csvtk plot line -t - -x SUM_DEPTH -y POS:count \\\n    --point-size 0.01 --xlab \"Depth of coverage (X)\" \\\n    --ylab \"Genome coverage (bp)\" \\\n    --width 9.0 --height 3.5 &gt; $OUT.ldepth.png\n\n\n\n\n\n\nFigure 1: Distribution of the total depth per site for all samples.\n\n\n\n\n\n\n\n\nOn csvtk as plotting software\n\n\n\n\n\nYou are of course perfectly welcome to use R or some other software to make these plots. We choose to generate the plots using csvtk to avoid too much context switching, and also because it emulates much of the functionality in R, albeit much less powerful when it comes to plotting.\n\n\n\nAs Figure 1 shows, most sites fall within a peak, but also that there are sites with very high coverage, up to ten times as high as the depth at the peak maximum. We calculate some range statistics to get an idea of the spread. The following csvtk command will calculate the minimum, first quartile, median, mean, third quartile, and maximum of the third column (SUM_DEPTH):\n\ncsvtk summary -t -f 3:min,3:q1,3:median,3:mean,3:q3,3:max,3:stdev vcftools/variantsites.subset.ldepth\n\nSUM_DEPTH:min   SUM_DEPTH:q1    SUM_DEPTH:median    SUM_DEPTH:mean  SUM_DEPTH:q3    SUM_DEPTH:max   SUM_DEPTH:stdev\n1.00    55.00   72.00   89.56   88.00   34131.00    251.20\n\n\nThe range from the first quartile (q1) to the third (q3) is 55-88, showing most sites have a depth between 50-100X. We redraw the plot to zoom in on the peak:\n\n\n\n\n\nFigure 2: Zoomed in version of Figure 1 which was achieved by adding the options --x-min 0 --x-max 140 --y-max 2500 to the plotting call.\n\n\nWe could choose a filter based on the quantile statistics above, or by eye-balling the graph. In this example, we could have chosen the range 50-150X, which equates to 5-15X depth per sample; note that your values will probably be different.\nAs an aside, we mention that there is a command to directly get the per-site mean depth, --site-mean-depth:\n\nvcftools --gzvcf $VCF --site-mean-depth --out $OUT 2&gt;/dev/null\nhead -n 3 ${OUT}.ldepth.mean\n\nCHROM   POS MEAN_DEPTH  VAR_DEPTH\nLG4 2105    2.25    0.916667\nLG4 2130    1.57143 0.619048\n\n\nVariant quality distribution\nAnother quantity of interest is the variant quality. Recall, variant quality scores are Phred-scaled scores, meaning a value of 10 has a 10% chance of being wrong, 20 a 1% chance, and so on; you typically want to at least filter on 20 or even higher. We extract and plot the quality values below:\n\nvcftools --gzvcf $VCF --site-quality --out $OUT\n\n\n# To improve histogram, filter out extreme quality scores. You\n# may have to fiddle with the exact values\ncsvtk filter -t -f \"QUAL&gt;0\" -f \"QUAL&lt;1000\" ${OUT}.lqual  | \\\n csvtk summary -t -g QUAL -f POS:count -w 0 - |\\\n csvtk sort -t -k 1:n |\\\n csvtk plot hist -t --bins 100 - \\\n          --xlab \"Quality value\" \\\n    --ylab \"Count\" \\\n    --width 9.0 --height 3.5 &gt; $OUT.lqual.png\n\n\n\n\n\n\nFigure 3: Distribution of variant quality scores.\n\n\nClearly most quality scores are above 20-30. For many applications, we recommend setting 30 as the cutoff.\nMinor allele frequency distribution\nSince we are going to calculate nucleotide diversities, we will not filter on the minor allele frequency (MAF) here. Nevertheless, we generate the distribution and plot for discussion purposes. The --freq2 will output the frequencies only, adding the option --max-alleles 2 to focus only on bi-allelic sites:\n\nvcftools --gzvcf $VCF --freq2 --out $OUT --max-alleles 2 2&gt;/dev/null\nhead -n 3 ${OUT}.frq\n\nCHROM   POS N_ALLELES   N_CHR   {FREQ}\nLG4 2105    2   4   0   1\nLG4 2130    2   14  0.857143    0.142857\n\n\nThe last two columns are frequencies ordered according to the reference allele. Therefore, we need to pick the minimum value to get the MAF. We can use csvtk mutate to create a new column\n\ncsvtk fix -t ${OUT}.frq 2&gt;/dev/null |\\\n csvtk mutate2 -t -n maf -e '${5} &gt; ${6} ? \"${6}\" : \"${5}\" ' - |\\\n csvtk plot hist -t --bins 20 -f maf - \\\n       --xlab \"Minor allele frequency\" \\\n       --ylab \"Count\" \\\n       --width 9.0 --height 3.5 &gt; $OUT.frq.png\n\n\n\n\n\n\nFigure 4: Distribution of minor allele frequencies.\n\n\nSince our variant file consists of 10 individuals, that is, 20 chromosomes, there are only so many frequencies that we can observe, which is why the histogram looks a bit disconnected6. In fact, given 20 chromosomes, MAF=0.05 corresponds to one alternative allele among all individuals (singleton), MAF=0.1 to two, and so on. The maximum value is 0.5, which is to be expected, as it is a minor allele frequency. We note that there are more sites with a low minor allele frequency, which in practice means there are many singleton variants.\nThis is where filtering on MAF can get tricky. Singletons may correspond to sequencing error, but if too hard a filter is applied, the resulting site frequency spectrum (SFS) will be skewed. For statistics that are based on the SFS, this may lead biased estimates. Since we will be applying such a statistic, we do not filter on the MAF here. Note, however, that for other applications, such as population structure, it may be warranted to more stringently (say, MAF&gt;0.1) filter out low-frequency variants.\nMissing data for individuals and sites\nThe proportion missing data per individual can indicate whether the input DNA was of poor quality, and that the individual should be excluded from analysis. Note that in this case, missing data refers to a missing genotype call and not sequencing depth!\nWe can calculate the proportion of missing data\n\nvcftools --gzvcf $VCF --missing-indv --out $OUT 2&gt;/dev/null\nhead -n 3 ${OUT}.imiss\n\nINDV    N_DATA  N_GENOTYPES_FILTERED    N_MISS  F_MISS\nPUN-R-ELF   114957  0   16729   0.145524\nPUN-R-JMC   114957  0   14742   0.128239\n\n\nand look at the results, focusing on the F_MISS column (proportion missing sites):\n\ncsvtk plot hist -t --x-min 0 -f F_MISS ${OUT}.imiss &gt; ${OUT}.imiss.png\n\n\n\n\n\n\nFigure 5: Distribution of missingness per sample.\n\n\nHere, the proportion lies in the range 0.06-0.10 for all samples, which indicates good coverage of all samples and we refrain from taking any action.\nSimilarly, we can look at missingness per site. This is related to the filter based on minimum number of individuals suggested by Lou et al. (2021). We calculate\n\nvcftools --gzvcf $VCF --missing-site --out $OUT 2&gt;/dev/null\nhead -n 3 ${OUT}.lmiss\n\nCHR POS N_DATA  N_GENOTYPE_FILTERED N_MISS  F_MISS\nLG4 2105    20  0   16  0.8\nLG4 2130    20  0   6   0.3\n\n\nand plot to get an idea of if there are sites that lack data.\n\ncsvtk plot hist --bins 20 -t -f F_MISS ${OUT}.lmiss &gt; ${OUT}.lmiss.png\n\n\n\n\n\n\nFigure 6: Distribution of missingness among sites.\n\n\nAs Figure 6 shows, many sites have no or little missing data, but given the low coverage, there is a non-negligible number of sites with higher missingness. We calculate range statistics to get a feeling for a good cutoff:\n\ncsvtk summary -t -f 6:min,6:q1,6:median,6:mean,6:q3,6:max vcftools/variantsites.subset.lmiss\n\nF_MISS:min  F_MISS:q1   F_MISS:median   F_MISS:mean F_MISS:q3   F_MISS:max\n0.00    0.00    0.10    0.14    0.20    0.90\n\n\nThe mean missingness is 8%, so we can safely use 25% missingness as threshold. Typical values of tolerated missingness lie in the range 5-25%. Note that vcftools interprets this value as 1 - missingness, so it has to be inverted to 75% when filtering!\nHeterozygosity\nvcftools can calculate the heterozygosity per individual. More specifically, it estimates the inbreeding coefficient F for each individual.\n\nvcftools --gzvcf $VCF --het --out $OUT 2&gt;/dev/null\ncat ${OUT}.het\n\nINDV    O(HOM)  E(HOM)  N_SITES F\nPUN-R-ELF   72485   65901.2 89065   0.28423\nPUN-R-JMC   68990   67087.4 90716   0.08052\nPUN-R-LH    71213   66575.5 89929   0.19858\nPUN-R-MT    70401   66522.3 89902   0.16590\nPUN-R-UCSD  75240   66221.5 89678   0.38448\nPUN-Y-BCRD  71239   66729.7 90163   0.19243\nPUN-Y-INJ   72368   65064.2 87675   0.32302\nPUN-Y-LO    74464   64524.6 87454   0.43348\nPUN-Y-PCT   76192   65692.9 89040   0.44970\nPUN-Y-POTR  72009   64917.9 87768   0.31033\n\n\nHere, F is a measure of how much the observed homozygotes O(HOM) differ from the expected (E(HOM); expected by chance under Hardy-Weinberg equilibrium), and may be negative. vcftools calculates F from the expression \\(F=(O-E)/(N-E)\\)7, which you can verify by substituting the variables in the output.\nIf F is positive (\\(O(HOM) &gt; E(HOM)\\)), i.e., there are more observed homozygotes than expected, then there is a deficit of heterozygotes, which could be a sign of inbreeding or signs of allelic dropout in case of low sequencing coverage.\nIf F is negative, there are fewer observed homozygotes than expected, or conversely, an excess of heterozygotes. This could be indicative of poor sequence quality (bad mappings) or contamination (Purcell et al., 2007).\nThe underlying assumption is HWE, which holds for F=0.\nIn this case, we know that the samples are from two different populations, red and yellow. In such cases, we actually expect a deficit of heterozygotes (and consequently, positive F) simply due to something called the Wahlund effect.\n\n\n\n\n\n\nWarning\n\n\n\nThe inbreeding coefficient is a population-level statistic and is not reliable for small sample sizes (\\(n&lt;10\\), say). Therefore, our sample size is in the lower range and the results should be taken with a grain of salt.\n\n\n\n\n\n\n\n\nExercise\n\n\n\n\n\n\n\nUse bcftools view -s SAMPLENAMES | vcftools --vcf - --het --stdout to calculate the heterozygosity for red and yellow samples. Substitute SAMPLENAMES for a comma-separated list of samples.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nbcftools view -s PUN-R-ELF,PUN-R-JMC,PUN-R-LH,PUN-R-MT,PUN-R-UCSD $VCF |\\\n vcftools --vcf - --het --stdout 2&gt;/dev/null\n\nINDV    O(HOM)  E(HOM)  N_SITES F\nPUN-R-ELF   41544   37855.6 58124   0.18198\nPUN-R-JMC   37612   38594.6 59338   -0.04737\nPUN-R-LH    39682   38057.9 58398   0.07985\nPUN-R-MT    38895   38056.4 58396   0.04123\nPUN-R-UCSD  43385   37656.1 57823   0.28408\n\n\n\n\n\n\n\n\n\n\n\n\nFiltering the VCF\nNow that we have decided on filters we can apply them to the VCF. We first set the filters as variables:\n\nMISS=0.75\nQUAL=30\nMIN_DEPTH=5\nMAX_DEPTH=15\n\nand run vcftools as follows:\n\nOUTVCF=${VCF%.subset.vcf.gz}.filtered.vcf.gz\nvcftools --gzvcf $VCF \\\n   --remove-indels --max-missing $MISS \\\n   --min-meanDP $MIN_DEPTH --max-meanDP $MAX_DEPTH \\\n   --minDP $MIN_DEPTH --maxDP $MAX_DEPTH --recode \\\n   --stdout 2&gt;/dev/null |\n gzip -c &gt; $OUTVCF\n\nCompare the results with the original input:\n\nbcftools stats $OUTVCF | grep \"^SN\"\n\nSN  0   number of samples:  10\nSN  0   number of records:  31784\nSN  0   number of no-ALTs:  0\nSN  0   number of SNPs: 31665\nSN  0   number of MNPs: 0\nSN  0   number of indels:   0\nSN  0   number of others:   0\nSN  0   number of multiallelic sites:   1350\nSN  0   number of multiallelic SNP sites:   582\n\n\nQuite a substantial portion variants have in fact been removed, which here can most likely be attributed to the low average sequencing coverage.",
    "crumbs": [
      "Slides",
      "Exercises",
      "Variant filtering",
      "Basic variant filtering"
    ]
  },
  {
    "objectID": "exercises/variant_filtering/basic_filtering.html#conclusion",
    "href": "exercises/variant_filtering/basic_filtering.html#conclusion",
    "title": "Basic variant filtering",
    "section": "Conclusion",
    "text": "Conclusion\nCongratulations! You have now gone through a set of tedious and complex steps to generate output files that determine what regions in a reference DNA sequence are amenable to analysis. In the next exercise we will use these files as inputs to different programs that calculate diversity statistics from population genomic data.",
    "crumbs": [
      "Slides",
      "Exercises",
      "Variant filtering",
      "Basic variant filtering"
    ]
  },
  {
    "objectID": "exercises/variant_filtering/basic_filtering.html#footnotes",
    "href": "exercises/variant_filtering/basic_filtering.html#footnotes",
    "title": "Basic variant filtering",
    "section": "Footnotes",
    "text": "Footnotes\n\nThis exercise is inspired by and based on https://speciationgenomics.github.io/filtering_vcfs/]↩︎\nWe select a fix number that should contain enough information to generate reliable statistics. This number should not change significantly even when files contain vastly different numbers of sites, which is why we need adjust the parameter r to the number of sites in the file.↩︎\nvcftools does not have a -h or --help option.↩︎\nThe 2&gt;/dev/null outputs messages from vcftools to a special file /dev/null which is a kind of electronic dustbin.↩︎\nOn viewing csvtk plots: either you can redirect (&gt;) the results from csvtk to a png output file, or you can pipe (|) it to the command display (replace &gt; $OUT.ldepth.png by | display, which should fire up a window with your plot.↩︎\nYou can try different values of the --bins option↩︎\nPurcell et al. (2007), p. 565 gives a coherent derivation of this estimator↩︎",
    "crumbs": [
      "Slides",
      "Exercises",
      "Variant filtering",
      "Basic variant filtering"
    ]
  },
  {
    "objectID": "exercises/variant_calling/variant_calling_workflow.html",
    "href": "exercises/variant_calling/variant_calling_workflow.html",
    "title": "Variant calling workflow",
    "section": "",
    "text": "Intended learning outcomes\n\n\n\n\n\n\nLearn how workflow managers can automate complex tasks\nGet familiar with the Snakemake manager",
    "crumbs": [
      "Slides",
      "Exercises",
      "Variant calling",
      "Variant calling workflow"
    ]
  },
  {
    "objectID": "exercises/variant_calling/variant_calling_workflow.html#workflow-managers",
    "href": "exercises/variant_calling/variant_calling_workflow.html#workflow-managers",
    "title": "Variant calling workflow",
    "section": "Workflow managers",
    "text": "Workflow managers\nThe advent of next-generation sequencing and other high-throughput technologies have contributed to increasing data complexity and data volumes, leading to scalability and reproducibility issues (Wratten et al., 2021). A number of workflow managers have beed developed to meet these needs, including Snakemake (Mölder et al., 2021) and Nextflow (Di Tommaso et al., 2017).\nIn this exercise, we will use Snakemake to run a variant calling workflow from start to end. We urge the reader to briefly skim the Snakefile1, the Snakemake command file. We will briefly describe how Snakemake works in the next section, but going into any details is out of the scope of this exercise. See the Snakemake documentation for more information, and if you want to learn more, there are NBIS courses on reproducible research and Snakemake.\nA very brief overview of a Snakefile\nA Snakemake workflow consists of rules that determine how inputs are connected to outputs. Rules are defined in a so-called Snakefile. Below is an example of a bare minimum rule:\nrule samtools_index:\n    output:\n        \"ref/M_aurantiacus_v1.fasta.fai\"\n    input:\n        \"ref/M_aurantiacus_v1.fasta\"\n    shell:\n        \"samtools faidx {input} -o {output}\"\nThe rule consists of a name (samtools_faidx) and keywords (output, input, shell). The shell keyword defines a shell command to be run (samtools faidx), which will take the input (ref/M_aurantiacus_v1.fasta) and produce an output (ref/M_aurantiacus_v1.fasta.fai). Note here the curly brackets; these are Snakemake wildcards which makes it possible to generalize rules to match file name patterns.\nProvided the input file exists, running snakemake would produce the output, unless the output already exists. This is one neat feature of workflow managers - they are designed to detect whether input files are newer than output files, and only then will they forcefully regenerate the output2.\n\n\n\n\n\n\nExercise\n\n\n\n\n\n\n\nCopy the samtools_index rule to a file called Snakefile and run snakemake --dry-run --printshellcmds --force (alternatively snakemake -n -p). What happens?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\nSnakemake will output what jobs it will run, the reason, and which shell command.\n\n\n\n\n\n\n\n\n\n\nA workflow is built by connecting outputs from one rule to inputs of another. A rule can depend on multiple inputs, as well as produce multiple outputs.\n\n\n\n\n\n\nExercise\n\n\n\n\n\n\n\nIn the above Snakefile, add a rule count_lines that uses the input ref/M_aurantiacus_v1.fasta.fai to generate the output file wc.txt, and where the shell command is uses wc -l to count lines in the input and redirect (&gt;) to output. Then run the command snakemake wc.txt and look at the contents of the file.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\nrule samtools_index:\n    output:\n        \"ref/M_aurantiacus_v1.fasta.fai\"\n    input:\n        \"ref/M_aurantiacus_v1.fasta\"\n    shell:\n        \"samtools faidx {input} -o {output}\"\n\nrule count_lines:\n    output: \"wc.txt\"\n    input: \"ref/M_aurantiacus_v1.fasta.fai\"\n    shell: \"wc -l {input} &gt; {output}\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nMake sure to remove the Snakefile before proceeding as it otherwise will take precedence over the workflow/Snakefile.\n\n\nA look into the variant calling Snakefile\nOpen workflow/Snakefile and look briefly at the contents. The top portion contains code to read the sampleinfo file and defines a variable REFERENCE that can be used throughout3:\n\nimport pandas as pd\n\n# Read sampleinfo and subset to\nsampleinfo = pd.read_csv(\"sampleinfo.csv\")\nsampleinfo = sampleinfo.loc[sampleinfo.SampleAlias.str.startswith(\"PUN\")]\\\n                       .set_index(\"SampleAlias\")\nsamples = sampleinfo.index.values\n\nREFERENCE = \"ref/M_aurantiacus_v1.fasta\"\n\nBy default, Snakemake runs the argument if no filename is provided when running. By convention, the first rule is called all:\n\nrule all:\n    input: \"multiqc_report.html\",\n\nThis is a so-called pseudo-rule which are used to list the final desired output file. The workflow will figure out how to generate necessary inputs.\nThe remainder of the file contain the “regular” rule definitions. They have been kept as simple as possible, but you will notice that we have made use of some additional code constructs not mentioned above. Skim the file, and look at the multiqc rule at the bottom. Notice how it is used to “collect” necessary inputs which all have to be generated before the report is written.\nIt can be difficult to get an overview of the workflow by simply looking at the Snakefile. Therefore, we end by showing a rulegraph of the workflow, which shows how rules are connected:\n\nsnakemake --rulegraph | dot -Tpng | display\n\n\n\nsnakemake_dag\n\n\n0\n\nall\n1\n\nmultiqc\n1-&gt;0\n\n\n2\n\nfastqc\n2-&gt;1\n\n\n3\n\nbcftools_stats\n3-&gt;1\n\n\n4\n\ngatk_genotype_gvcfs\n4-&gt;3\n\n\n5\n\ngatk_combine_gvcfs\n5-&gt;4\n\n\n6\n\ngatk_haplotypecaller_bqsr\n6-&gt;5\n\n\n7\n\ngatk_apply_bqsr\n7-&gt;6\n\n\n8\n\npicard_mark_duplicates\n8-&gt;1\n\n\n8-&gt;7\n\n\n11\n\ngatk_base_recalibrator\n8-&gt;11\n\n\n12\n\ngatk_haplotypecaller_raw\n8-&gt;12\n\n\n9\n\nbwa_mem\n9-&gt;8\n\n\n15\n\nqualimap_bamqc\n9-&gt;15\n\n\n10\n\nbwa_index\n10-&gt;9\n\n\n11-&gt;7\n\n\n12-&gt;11\n\n\n13\n\npicard_create_sequence_dictionary\n13-&gt;4\n\n\n13-&gt;6\n\n\n13-&gt;12\n\n\n14\n\nsamtools_faidx\n14-&gt;4\n\n\n14-&gt;6\n\n\n14-&gt;12\n\n\n15-&gt;1\n\n:::\nRunning the workflow\nNow we turn to actually running the workflow. First use the options snakemake -n -p to check what the actual command flow looks like4. If everything looks ok, launch Snakemake, adding the --cores option to run jobs in parallel:\nsnakemake --cores 10\nThat’s all there is to it! Now you can take a break / listen to the next lecture while the workflow (hopefully) runs to completion without interruptions.\n\n\n\n\n\n\nExercise\n\n\n\n\n\n\n\nOnce the workflow has finished, open and have a look at multiqc_report.html. Also check the output variant files in directory gatk-genotype-gvcfs.",
    "crumbs": [
      "Slides",
      "Exercises",
      "Variant calling",
      "Variant calling workflow"
    ]
  },
  {
    "objectID": "exercises/variant_calling/variant_calling_workflow.html#running-the-workflow",
    "href": "exercises/variant_calling/variant_calling_workflow.html#running-the-workflow",
    "title": "Variant calling workflow",
    "section": "Running the workflow",
    "text": "Running the workflow\nNow we turn to actually running the workflow. First use the options snakemake -n -p to check what the actual command flow looks like4. If everything looks ok, launch Snakemake, adding the --cores option to run jobs in parallel:\nsnakemake --cores 10\nThat’s all there is to it! Now you can take a break / listen to the next lecture while the workflow (hopefully) runs to completion without interruptions.\n\n\n\n\n\n\nExercise\n\n\n\n\n\n\n\nOnce the workflow has finished, open and have a look at multiqc_report.html. Also check the output variant files in directory gatk-genotype-gvcfs.",
    "crumbs": [
      "Slides",
      "Exercises",
      "Variant calling",
      "Variant calling workflow"
    ]
  },
  {
    "objectID": "exercises/variant_calling/variant_calling_workflow.html#footnotes",
    "href": "exercises/variant_calling/variant_calling_workflow.html#footnotes",
    "title": "Variant calling workflow",
    "section": "Footnotes",
    "text": "Footnotes\n\nSnakemake borrows much of its terminology and philosophy from Make, which was originally designed to automate software builds.↩︎\nYou can also provide the --force flag to regenerate an output, regardless of whether the input file is younger or not.↩︎\nSnakemake is written in Python. If you’re familiar with Python, you will recognize much of the syntax.↩︎\nYou can also add the flag --forceall/-F to trigger a rerun of all outputs.↩︎",
    "crumbs": [
      "Slides",
      "Exercises",
      "Variant calling",
      "Variant calling workflow"
    ]
  },
  {
    "objectID": "exercises/variant_calling/data_qc.html",
    "href": "exercises/variant_calling/data_qc.html",
    "title": "Data quality control",
    "section": "",
    "text": "In this exercise we will familiarize ourselves with the command line and compile some basic quality statistics from raw sequence data files.",
    "crumbs": [
      "Slides",
      "Exercises",
      "Variant calling",
      "Data quality control"
    ]
  },
  {
    "objectID": "exercises/variant_calling/data_qc.html#preparation-reference-sequence-index-and-read-qc",
    "href": "exercises/variant_calling/data_qc.html#preparation-reference-sequence-index-and-read-qc",
    "title": "Data quality control",
    "section": "Preparation: reference sequence index and read QC",
    "text": "Preparation: reference sequence index and read QC\nPrior to mapping we need to create a database index. We also generate a fasta index and a sequence dictionary for use with the picard toolkit.\n\nsamtools faidx ref/M_aurantiacus_v1.fasta\npicard CreateSequenceDictionary --REFERENCE ref/M_aurantiacus_v1.fasta\nbwa index ref/M_aurantiacus_v1.fasta\n\nWith the program fastqc we can generate quality control reports for all input FASTQ files simultaneously, setting the output directory with the -o flag:\n\n# Make fastqc output directory; --parents makes parent directories as\n# needed\nmkdir --parents fastqc\nfastqc --outdir fastqc fastq/*fastq.gz\n\n\n\n\n\n\n\nExercise\n\n\n\n\n\n\n\ncd to the output directory and look at the html reports. Do you notice any difference between read 1 (R1) and read 2 (R2)?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\ncd fastqc\nopen PUN-Y-INJ_R1_fastqc.html\nopen PUN-Y-INJ_R2_fastqc.html\n\nThe traffic light summary indicates whether a given quality metric has passed or not. Typically, read 2 has slightly lower quality and more quality metrics with warnings. Since these reads have been deposited in the Sequence Read Archive (SRA), it is likely they were filtered prior to upload, and we will not take any further action here.\n\n\n\n\n\n\n\n\n\n\nWe will use MultiQC later on to combine the results from several output reports.",
    "crumbs": [
      "Slides",
      "Exercises",
      "Variant calling",
      "Data quality control"
    ]
  },
  {
    "objectID": "exercises/variant_calling/index.html",
    "href": "exercises/variant_calling/index.html",
    "title": "Variant calling index",
    "section": "",
    "text": "A generic variant calling workflow consists of the following basic steps:\n\nread quality control and filtering\nread mapping\nremoval / marking of duplicate reads\njoint / sample-based variant calling and genotyping\n\nThere are different tweaks and additions to each of these steps, depending on application and method. The variant calling exercises here present the basic steps to go from raw data to variant calls.\nThe exercises are based on the Monkeyflowers dataset. Make sure to read the dataset document before running any commands as it will give you the biological background and general information about where to find and how to setup the data. We will focus on the red and yellow ecotypes in what follows.",
    "crumbs": [
      "Slides",
      "Exercises",
      "Variant calling",
      "Variant calling index"
    ]
  },
  {
    "objectID": "exercises/variant_calling/index.html#about",
    "href": "exercises/variant_calling/index.html#about",
    "title": "Variant calling index",
    "section": "",
    "text": "A generic variant calling workflow consists of the following basic steps:\n\nread quality control and filtering\nread mapping\nremoval / marking of duplicate reads\njoint / sample-based variant calling and genotyping\n\nThere are different tweaks and additions to each of these steps, depending on application and method. The variant calling exercises here present the basic steps to go from raw data to variant calls.\nThe exercises are based on the Monkeyflowers dataset. Make sure to read the dataset document before running any commands as it will give you the biological background and general information about where to find and how to setup the data. We will focus on the red and yellow ecotypes in what follows.",
    "crumbs": [
      "Slides",
      "Exercises",
      "Variant calling",
      "Variant calling index"
    ]
  },
  {
    "objectID": "exercises/variant_calling/index.html#intended-learning-outcomes",
    "href": "exercises/variant_calling/index.html#intended-learning-outcomes",
    "title": "Variant calling index",
    "section": "Intended learning outcomes",
    "text": "Intended learning outcomes\n\nPerform qc on sequencing reads and interpret results\nPrepare reference for read mapping\nMap reads to reference\nMark duplicates\nPerform raw variant calling to generate a set of sites to exclude from recalibration\nPerform base quality score recalibration\nPerform variant calling on base recalibrated data\nDo genotyping on all samples and combine results to a raw variant call set",
    "crumbs": [
      "Slides",
      "Exercises",
      "Variant calling",
      "Variant calling index"
    ]
  },
  {
    "objectID": "exercises/variant_calling/index.html#listing",
    "href": "exercises/variant_calling/index.html#listing",
    "title": "Variant calling index",
    "section": "Listing",
    "text": "Listing\n\n\n   \n    \n    \n      Order By\n      Default\n      \n        Title\n      \n    \n  \n    \n      \n      \n    \n\n\n\n\n\n\nTitle\n\n\n\nDescription\n\n\n\n\n\n\n\n\nVariant calling introduction\n\n\nIntroduction to variant calling and the command line interface.\n\n\n\n\n\n\nData quality control\n\n\nIntroduction to the command line interface. Preparation of data, raw data quality control and filtering for downstream analyses.\n\n\n\n\n\n\nRead mapping and duplicate removal\n\n\nRead mapping to reference sequence and removal of duplicate reads.\n\n\n\n\n\n\nVariant calling workflow\n\n\nPerform variant calling and genotyping. Introduction to workflow manager systems.\n\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "Slides",
      "Exercises",
      "Variant calling",
      "Variant calling index"
    ]
  },
  {
    "objectID": "exercises/variant_calling/index.html#additional-material",
    "href": "exercises/variant_calling/index.html#additional-material",
    "title": "Variant calling index",
    "section": "Additional material",
    "text": "Additional material\n\nVariant calling, long description\n\nDescribes all steps of a standard variant calling workflow from data preparation to final summary QC. All commands are run manually without the aid of a workflow manager. From earlier course round.",
    "crumbs": [
      "Slides",
      "Exercises",
      "Variant calling",
      "Variant calling index"
    ]
  },
  {
    "objectID": "exercises/compute_environment/index.html",
    "href": "exercises/compute_environment/index.html",
    "title": "Compute environment",
    "section": "",
    "text": "This page briefly describes different compute environments that may be used for exercises. We use the following symbols to icons that indicate the type of environment ( HPC resource;  local compute environment;  online browser-based resource). Make sure to read these instructions before proceeding with the exercises.",
    "crumbs": [
      "Slides",
      "Exercises",
      "Data",
      "Compute environment"
    ]
  },
  {
    "objectID": "exercises/compute_environment/index.html#dardel-pdc",
    "href": "exercises/compute_environment/index.html#dardel-pdc",
    "title": "Compute environment",
    "section": "\n Dardel @ PDC",
    "text": "Dardel @ PDC\n\n\n\n\n\n\nPrerequisite: SUPR account\n\n\n\n\n\nIf you want to run the exercises on the Dardel HPC you need an account. Follow the instructions at the precourse page.\n\n\n\nWe will primarily be using KTH’s high-performance computing (HPC) center Dardel to run exercises. Course material will be hosted in a dedicated course project directory /cfs/klemming/projects/supr/pgip_2025.\nWorking directory setup\nWe recommend you setup a working directory based on your username in /cfs/klemming/projects/supr/pgip_2025/users in which to run your exercises:\nmkdir -p /cfs/klemming/projects/supr/pgip_2025/users/YOURUSERNAME\ncd /cfs/klemming/projects/supr/pgip_2025/users/YOURUSERNAME\npixi environments and pgip CLI\n\n\n\n\n\n\nEXPERIMENTAL\n\n\n\nThis feature is experimental and may not work as intended.\n\n\nIn order to improve reproducibility and facilitate package setup, we have grouped exercise tools in pixi virtual environments1 Exercise environments are named e-EXERCISE-NAME and can be activated with a custom command line (CLI) tool called pgip. To activate the CLI, do the following steps:\nsource /cfs/klemming/projects/supr/pgip_2025/init.sh\npgip_activate\nNow you should have access to pgip, which among other things lets you setup exercise data and launch notebooks. In addition, there are two commands pgip_elist and pgip_shell. pgip_elist lists available environments and pgip_shell ENVIRONMENT_NAME starts a shell with the environment activated.\n\n\n\n\n\n\nRun pgip_activate before pgip_shell\n\n\n\nIt is important that you run pgip_activate first as exiting would terminate your session. Exiting from the shell will pop you back to the activated default environment.\n\n\nThinLinc\nKTH provides a remote desktop program called ThinLinc which lets you connect to a remote server and access programs via a virtual desktop. To use, you first need to download the ThinLinc client (tlclient). To connect, launch tlclient and authenticate with either Kerberos or SSH. See the PDC documentation for more documentation.\nLaunching graphical applications\nThe is a launcher located in the menu bar that should let you start graphical applications. If that doesn’t work, you can always\nInteractive jobs\n\n\n\n\n\n\nPlease do not book more than 10 cores\n\n\n\n\n\nWe have priviliged access to a limited number of nodes. Please do not book more than 10 cores or else your fellow students will experience long waiting times.\n\n\n\n\n\n\n\n\n\nMake sure to login to a compute node before running any compute-intensive commands\n\n\n\n\n\n\nAll computations should be run on a compute node. You can request an interactive session with the salloc command. For example, to request an eight hour job on 10 cores, run\nsalloc -A naiss2025-22-825 -n 10 \\\n   --time 08:00:00 \\\n   --reservation=&lt;name of reservation&gt; \\\n   --no-shell\nwhere &lt;name of reservation&gt; needs to be replaced by the node reservations, which will typically be unique for every day.\nThe --no-shell option will immediately exit the allocated node but keep the Slurm job active. Make a note of the allocated node ID and use ssh to access it.\nssh node_id\nAccessing notebooks on compute nodes\nSee ThinLinc for a potentially easier way to access compute nodes and resources.\nNotebooks are run in browser sessions, but if run on compute nodes they are not directly accessible from the client. The trick is to set up double port forwarding, in which a port is forwarded from the compute node to the login node and on to your client. If you use the pgip CLI to launch a notebook, it will look as follows:\npgip notebook jupyter --port 9999\nINFO:pgip_cli.commands.notebook:notebook\nINFO:pgip_cli.commands.notebook:Running jupyter lab  --no-browser --port=9999\nINFO:pgip_cli.commands.notebook:Jupyter lab running at http://localhost:9999\nINFO:pgip_cli.commands.notebook:To stop Jupyter Notebook, press Ctrl+C\nINFO:pgip_cli.commands.notebook:\nINFO:pgip_cli.commands.notebook:For port forwarding to login node, on login node run:\nINFO:pgip_cli.commands.notebook:ssh -L 9999:localhost:9999 nid002581 -N -f\nINFO:pgip_cli.commands.notebook:\nINFO:pgip_cli.commands.notebook:For port forwarding to client localhost, on client run:\nINFO:pgip_cli.commands.notebook:ssh -L 9999:localhost:9999 dardel.pdc.kth.se -N -f\nINFO:pgip_cli.commands.notebook:\nDo you want to continue? [Y/n]:\nHere, NODEID is the compute node id. To enable port forwarding, you need to run the to ssh -L ... commands, and voilà, you should be able to access the notebook at localhost:9999.\n\n\n\n\n\n\nThe port id must be unique and in the recommended range 1024-49151\n\n\n\n\n\n\nTutorials\nPDC hosts tutorials and user guides at https://support.pdc.kth.se/doc. In particular, https://support.pdc.kth.se/doc/basics/quickstart has information on how to connect to and work on Dardel.",
    "crumbs": [
      "Slides",
      "Exercises",
      "Data",
      "Compute environment"
    ]
  },
  {
    "objectID": "exercises/compute_environment/index.html#jupyter-notebooks",
    "href": "exercises/compute_environment/index.html#jupyter-notebooks",
    "title": "Compute environment",
    "section": "\n Jupyter Notebooks",
    "text": "Jupyter Notebooks\nJupyter Notebook exercises will be run in local compute environments on your laptop. See the section below on setting up a pgip environment with pixi, which by default installs jupyter and its dependencies.\n\n JupyterLite\nThere are some Jupyter Notebook exercises that are hosted online and run using JupyterLite which is a JupyterLab distribution that runs entirely in the browser. Apart from having a browser, no preparations are necessary. Note that some users have reported issues with Firefox and that Google Chrome may be a better solution.",
    "crumbs": [
      "Slides",
      "Exercises",
      "Data",
      "Compute environment"
    ]
  },
  {
    "objectID": "exercises/compute_environment/index.html#sec-compute-environment-pixi",
    "href": "exercises/compute_environment/index.html#sec-compute-environment-pixi",
    "title": "Compute environment",
    "section": "\n Pixi",
    "text": "Pixi\nExercises that require local software installation will make use of the pixi package manager to install necessary conda requirements from the package repositories bioconda and conda-forge. This is also the fallback solution in case there are issues with the HPC.\nTo start using pixi, follow the install instructions to install. You can choose to run all exercises on a local computer if you have pixi setup. You would then need to download relevant data, as detailed for each exercise. We have tried to make the exercise data sets small such that you can run the exercises locally.",
    "crumbs": [
      "Slides",
      "Exercises",
      "Data",
      "Compute environment"
    ]
  },
  {
    "objectID": "exercises/compute_environment/index.html#tools",
    "href": "exercises/compute_environment/index.html#tools",
    "title": "Compute environment",
    "section": "Tools",
    "text": "Tools\nComputer exercise requirements are listed in Tools callout blocks in each exercise. The Tools callout block contains listings of programs, along with package dependencies and specifications for Dardel and pixi, whenever relevant. An example block is shown below.\n\n\n\n\n\n\nTools - example\n\n\n\n\n\nExample Tools block.\n\n\nListing\n PDC\n pixi\n\n\n\nProvides list of packages linked to repository, and citation when available.\n\nfastqc\n\nbwa (Li, 2013)\n\n\n\n\nChoose one of Modules and Virtual environment to access relevant tools.\nModules\nExecute the following command to load modules:\n\nmodule load bwa/0.7.18 fastqc/0.12.1\n\nVirtual environment\nRun the pgip initialization script and activate the pgip default environment:\nsource /cfs/klemming/projects/supr/pgip_2025/init.sh\npgip_activate\nThen activate the &lt;exercise environment&gt; environment:\n# pgip_shell calls pixi shell -e &lt;exercise environment&gt; --as-is\npgip_shell &lt;exercise environment&gt;\n\n\n\nProvides a pixi manifest file that lists dependencies and where to retrieve them.\nCopy the contents to a file pixi.toml in directory exercise-name, cd to directory and activate environment with pixi shell:\n[workspace]\nchannels = [\"conda-forge\", \"bioconda\"]\nname = \"exercise-name\"\nplatforms = [\"linux-64\"]\n\n[dependencies]\nbwa = \"&gt;=0.7.19,&lt;0.8\"\nfastqc = \"&gt;=0.12.1,&lt;0.13\"",
    "crumbs": [
      "Slides",
      "Exercises",
      "Data",
      "Compute environment"
    ]
  },
  {
    "objectID": "exercises/compute_environment/index.html#footnotes",
    "href": "exercises/compute_environment/index.html#footnotes",
    "title": "Compute environment",
    "section": "Footnotes",
    "text": "Footnotes\n\npixi is a fast package management tool, similar to conda.↩︎",
    "crumbs": [
      "Slides",
      "Exercises",
      "Data",
      "Compute environment"
    ]
  },
  {
    "objectID": "slides/genetic_diversity/diversity.html#what-determines-diversity-levels",
    "href": "slides/genetic_diversity/diversity.html#what-determines-diversity-levels",
    "title": "Genetic diversity",
    "section": "What determines diversity levels?",
    "text": "What determines diversity levels?\n\n\n\n\n\n\n\n\nThe usual questions:\n\nWhat evolutionary forces maintain genetic diversity in natural populations? How do diversity levels relate to census population sizes…? Do low levels of diversity limit adaptation to selective pressures?\n\n\nLeffler et al. (2012)\n\n\n\nAfter allozyme era, the study of genetic diversity was largely neglected due to lack of genome-wide data, but with advent of population genomics becoming a hot topic again.\n\nEllegren & Galtier (2016)\n\n\n\n\nLewontin’s paradox: genetic diversity range smaller than variation among species in population size\n\n\n\nRiddle: why is genetic diversity range so narrow? Possibly there are lower and upper limits.\nLower limit: censoring effect, i.e., when diversity passes a lower limit, population is driven to extinction due to inability to adapt\nUpper limit: functional/structural constraints, e.g., impaired chromosome pairing or reproductive incompatibilities\nLinked selection, that is, variation-reducing selection. Larger populations have higher influx of new mutations, so if more draft, higher reduction in diversity. Would require strong frequent levels of selection; little support for this in literature.\nPurifying selection. Nearly neutral model could explain narrow range.\n(Ellegren & Galtier, 2016) Upper limit could in part be explained by linked selection (Corbett-Detig et al., 2015)",
    "crumbs": [
      "Slides",
      "Genetic diversity",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/genetic_diversity/diversity.html#factors-that-influence-genetic-diversity",
    "href": "slides/genetic_diversity/diversity.html#factors-that-influence-genetic-diversity",
    "title": "Genetic diversity",
    "section": "Factors that influence genetic diversity",
    "text": "Factors that influence genetic diversity\n\n\n\n\n\n\n\n\n\n\nFigure 1: Overview of determinants of genetic diversity (Ellegren & Galtier, 2016, Fig 2)\n\n\n\n\n\n\nGenetic drift\nReduces diversity at loss \\propto \\frac{1}{N}\nSelection\nAdaptive selection decreases variation, more so if acting on new mutations compared to standing variation.\nBalancing selection may increase variation.\nRecombination\nLow recombination rates lead to less “reshuffling” of variation and hence lower diversity.\n\n\nNote: lower recombination lowers diversity presumably because more neutral variants linked to selected sites. There are intriguing differences between taxa (Leffler et al., 2012)\nEllegren & Galtier (2016) point out that with advent of population genomic data, we are at the brink of understanding Lewontin’s paradox, namely (Charlesworth & Jensen, 2022)\n\nthe observation that the range of levels of genetic diversity in natural populations appears to be far smaller than the extent of variation among species in population size",
    "crumbs": [
      "Slides",
      "Genetic diversity",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/genetic_diversity/diversity.html#why-we-measure-patterns-of-genetic-variation",
    "href": "slides/genetic_diversity/diversity.html#why-we-measure-patterns-of-genetic-variation",
    "title": "Genetic diversity",
    "section": "Why we measure patterns of genetic variation",
    "text": "Why we measure patterns of genetic variation\nGenetic variation patterns are informative of evolutionary and demographic processes. We often use summary statistics to describe the patterns, and to estimate parameters such as effective population size and mutation rate from genetic variation data (\\theta = 4N_e\\mu)\n\n\nOften critical first step of analysis, such as\n\nexploratory study\ntest of an evolutionary hypothesis\ntraining of machine-learning models\n\n\n\n(Korunes & Samuk, 2021)",
    "crumbs": [
      "Slides",
      "Genetic diversity",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/genetic_diversity/diversity.html#genetic-diversity-in-conservation-biology",
    "href": "slides/genetic_diversity/diversity.html#genetic-diversity-in-conservation-biology",
    "title": "Genetic diversity",
    "section": "Genetic diversity in conservation biology",
    "text": "Genetic diversity in conservation biology\n\n\n\n\n\n\n\n\nFigure 2: Kuderna et al. (2023), Fig 2\n\n\n\n\n…no global relationship between numerically coded IUCN extinction risk categories and estimated heterozygosity…\n\n\n\nLow genetic diversity symptom of past genetic drift inbreeding (higher levels of homozygosity), caused by low N_e\n\nGarcía-Dorado & Caballero (2021)\n\n\n\n\nHowever: if population decline is rapid, may be too little time for inbreeding to occur \\Rightarrow genetic diversity within species not necessarily aligned to extinction risk\n\nLewis (2023)\n\n\n\n\nTake home (Lewis, 2023): genetic diversity within a species does not necessarily align with its extinction risk. Possible explanation: population decline has been so rapid that there hasn’t been time for inbreeding to occur. Other factors (e.g., habitat destruction) greater threat.\nCaption:\n\nRuns of homozygosity and impact of extinction risk on diversity (A) Relationship between IUCN extinction risk categories and heterozygosity. Solid black circles and bars denote median and IQR. (B) Partition into threatened (T: VU, EN, CR) and nonthreatened (N: LC, NT) categories for all families with more than one species in either partition. Significant differences (p &lt; 0.05, one-sided rank-sum test) are marked with an asterisk. (C) Median number of tracts of homozygosity versus median proportion of the genome in runs of homozygosity per species. Species with a fraction over 1/3 are highlighted. Solid black dots within highlights denote threatened species (VU, EN, CR).\n\nOn Figure 2A:\n\nWe investigated whether genetic diversity estimates are correlated with extinction risk in primates, a subject of previous debate (17, 33, 34). Despite our broad sampling, we find no global relationship between numerically coded IUCN extinction risk categories and estimated heterozygosity [p &gt; 0.05, phylogenetic generalized least squares (PGLS)] (Fig. 2A) (16).",
    "crumbs": [
      "Slides",
      "Genetic diversity",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/genetic_diversity/diversity.html#nucleotide-diversity",
    "href": "slides/genetic_diversity/diversity.html#nucleotide-diversity",
    "title": "Genetic diversity",
    "section": "Nucleotide diversity",
    "text": "Nucleotide diversity\n\n\n\n\nsample 0:   00100\nsample 1:   00001\nsample 2:   01010\nsample 3:   10010\n\n\n\nDiversity: for each site, count and sum differences between all (unique) pairs of samples, and divide by unique pairs. For n samples, there are n \\choose 2 such pairs.\n\n\nExample: for site 0, start comparing samples 0-1 (0 diffs), samples 0-2 (0), samples 0-3 (1), samples 1-2 (0) and so on. Call these differences k_{ij}. Then\n\n\n\n\\pi = \\frac{\\sum_{i&lt;j}k_{ij}}{n \\choose 2}\n\n\n\n\n\nTree plot with mutations and sequences \n\n\n\n\n20: 0010041: 0000112: 0101003: 100103",
    "crumbs": [
      "Slides",
      "Genetic diversity",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/genetic_diversity/diversity.html#wattersons-theta_w",
    "href": "slides/genetic_diversity/diversity.html#wattersons-theta_w",
    "title": "Genetic diversity",
    "section": "Watterson’s \\theta_W",
    "text": "Watterson’s \\theta_W\n\n\n\n\nsample 0:   00100\nsample 1:   00001\nsample 2:   01010\nsample 3:   10010\n\n\n\nAlternative measure of diversity: simply count the number of segregating sites (S). However, must correct for the number of samples n as we expect that more samples \\Rightarrow more sites\n\n\n\n\\theta_W = \\frac{S}{a} = \\frac{S}{\\sum_{i=1}^{n-1}\\frac{1}{i}}\n\n\n\nImportant: under neutrality, \\theta = E(\\pi) = E(\\theta_W). Difference between two the basis for Tajima’s D that is a test for selection\n\n\n\n\nTree plot with mutations and sequences \n\n\n\n\n20: 0010041: 0000112: 0101003: 100103\n\n\n\n\nIntuitive example to understand of Tajimas: balancing selection has long internal branches -&gt; long haplotype. This will elevate pi since many samples will be different for many sites.",
    "crumbs": [
      "Slides",
      "Genetic diversity",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/genetic_diversity/diversity.html#calculating-diversity-measures---pi-and-theta_w",
    "href": "slides/genetic_diversity/diversity.html#calculating-diversity-measures---pi-and-theta_w",
    "title": "Genetic diversity",
    "section": "Calculating diversity measures - \\pi and \\theta_W",
    "text": "Calculating diversity measures - \\pi and \\theta_W\n\n\n\n\nsample 0:   00100\nsample 1:   00001\nsample 2:   01010\nsample 3:   10010\n\n\n\n\nfrom trees import ts_small_mut as ts\n\n# Calculate correction factor a for Watterson's\n# theta: the larger the sample size, the more\n# segregating sites we expect to see\na = sum([1/i for i in range(1, ts.num_samples)])\n\npi = ts.diversity()\nthetaW = ts.num_sites / a / ts.sequence_length\n\nprint(f\"Diversity:           {pi:.6f}\",\n      f\"Watterson's theta:   {thetaW:.6f}\",\n      f\"Sequence length:     {ts.sequence_length:.0f}\",\n      sep=\"\\n\")\n\nDiversity:           0.000267\nWatterson's theta:   0.000273\nSequence length:     10000\n\n\n\n\n\nTree plot with mutations and sequences \n\n\n\n\n\nGenome position01000020: 0010041: 0000112: 0101003: 100103",
    "crumbs": [
      "Slides",
      "Genetic diversity",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/genetic_diversity/diversity.html#divergence---dxy",
    "href": "slides/genetic_diversity/diversity.html#divergence---dxy",
    "title": "Genetic diversity",
    "section": "Divergence - dXY",
    "text": "Divergence - dXY\n\n\n\n\nSample 0:   00100\nSample 1:   00001\n\nSample 2:   01010\nSample 3:   10010\n\n\nDivergence: for each site, count and sum differences between all pairs of samples between two populations\n\nExample: for site 0, compare samples 0-2 (0 diffs), samples 0-3 (1 diff), samples 1-2 (0 diffs), samples 1-3 (1 diff), and so on. Call differences k_ij, let n_X, n_Y be sample size in populations X, Y. Then\n\n\n\nd_{XY} = \\frac{1}{n_Xn_Y}\\sum_{i=1}^{n_X}\\sum_{i=1}^{n_Y}k_{ij}\n\n\n\n\nTree plot with mutations and sequences \n\n\n\n\n20: 0010041: 0000112: 0101003: 100103",
    "crumbs": [
      "Slides",
      "Genetic diversity",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/genetic_diversity/diversity.html#divergence---dxy-1",
    "href": "slides/genetic_diversity/diversity.html#divergence---dxy-1",
    "title": "Genetic diversity",
    "section": "Divergence - dXY",
    "text": "Divergence - dXY\n\n\n\n\nSample 0:   00100\nSample 1:   00001\n\nSample 2:   01010\nSample 3:   10010\n\n\n\nfrom trees import ts_small_mut as ts\n\nsample_sets = [[0, 1], [2, 3]]\n\ndxy = ts.divergence(sample_sets=sample_sets)\n\nprint(f\"Divergence:   {dxy:.6f}\")\n\nDivergence:   0.000300\n\n\n\n\nTree plot with mutations and sequences \n\n\n\n\n20: 0010041: 0000112: 0101003: 100103\n\n\n\nF_ST (later) and related statistics are strongly affected by within-subpopulation genetic variance. Nei (1973) proposed dXY as an alternative that does not depend on the levels of diversity within subpopulations.",
    "crumbs": [
      "Slides",
      "Genetic diversity",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/genetic_diversity/diversity.html#differentiation---afd-allele-frequency-difference",
    "href": "slides/genetic_diversity/diversity.html#differentiation---afd-allele-frequency-difference",
    "title": "Genetic diversity",
    "section": "Differentiation - AFD (allele frequency difference)",
    "text": "Differentiation - AFD (allele frequency difference)\n\n\n\n\nSample 0:   00100\nSample 1:   00001\n\nSample 2:   01010\nSample 3:   10010\n\n\nAllele Frequency Difference (AFD) proposed as intuitive alternative to F_{\\mathrm{ST}}. For each site, count the difference in allele frequency between two populations.\n\nExample: site 0, frequency in blue is 0, in black 1/2, so difference=1/2, site 1, frequency in blue 0, in black 1/2, and so on\n\n\n\nAFD = \\frac{1}{2}\\sum_{i=1}^n| (f_{i1} - f_{i2})|\n\nwhere n is the number of different alleles (n=2 for biallelic SNPs), f_{ij} is the frequency of allele i in population j\n\nBerner (2019)\n\n\n\n\nTree plot with mutations and sequences \n\n\n\n\n20: 0010041: 0000112: 0101003: 100103\n\n\n\nAFD proposed as a more intuitive and easier to understand statistic than Fst",
    "crumbs": [
      "Slides",
      "Genetic diversity",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/genetic_diversity/diversity.html#differentiation--",
    "href": "slides/genetic_diversity/diversity.html#differentiation--",
    "title": "Genetic diversity",
    "section": "Differentiation - F_{\\mathrm{ST}}",
    "text": "Differentiation - F_{\\mathrm{ST}}\n\n\n\n\nSample 0:   00100\nSample 1:   00001\n\nSample 2:   01010\nSample 3:   10010\n\n\nF_{\\mathrm{ST}} is another measure of differention among subpopulations (Wright, 1931). It ranges between 0 and 1 and has the interpretation 0: no differentiation, 1: complete fixation of alternate alleles in subpopulations\n\nExample: site 3 has F_{\\mathrm{ST}}=1 as it is fixed in black, not present in blue\n\n\nThere are many ways to express and calculate F_{\\mathrm{ST}}. Example:\n\nF_{\\mathrm{ST}} = \\frac{h_{\\mathrm{T}} - h_{\\mathrm{S}}}{h_{\\mathrm{T}}}\n\nwhere h_{\\mathrm{T}} is the expected heterozygosity in the total population, h_{\\mathrm{S}} the average of expected heterozygosities across subpopulations. For site 3, h_{\\mathrm{S}}=0, h_{\\mathrm{T}}=2/3.\n\n\nCaveats: strongly influenced by within subpopulation levels of variation. Therefore considered relative measure (cf d_{\\mathrm{XY}}, which is an absolute measure).\n\n\n\nTree plot with mutations and sequences \n\n\n\n\n20: 0010041: 0000112: 0101003: 100103\n\n\n\nWright’s fst measures differentiation among subpopulations. Interpretation: 0 no differentiation, 1 complete fixation of alternate alleles. Has therefore become a popular statistic for quantifying differentiation from molecular data.",
    "crumbs": [
      "Slides",
      "Genetic diversity",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/genetic_diversity/diversity.html#differentiation---1",
    "href": "slides/genetic_diversity/diversity.html#differentiation---1",
    "title": "Genetic diversity",
    "section": "Differentiation - F_{\\mathrm{ST}}",
    "text": "Differentiation - F_{\\mathrm{ST}}\n\n\n\n\nSample 0:   00100\nSample 1:   00001\n\nSample 2:   01010\nSample 3:   10010\n\n\n\n\nfrom trees import ts_small_mut as ts\n\nsample_sets = [[0, 1], [2, 3]]\nwin = [0] + [int(x.position)+1 for x in ts.sites()]\n_ = win.pop()\nwin = win + [ts.sequence_length]\n\nfst = ts.Fst(sample_sets=sample_sets)\nfst_sites = ts.Fst(sample_sets=sample_sets,\n                   windows=win)\n\nprint(f\"Site id:       {list(range(5))}\",\n      f\"Fst per site:  {fst_sites}\",\n      f\"Overall Fst:   {fst:.6f}\",\n      sep=\"\\n\")\n\nSite id:       [0, 1, 2, 3, 4]\nFst per site:  [0. 0. 0. 1. 0.]\nOverall Fst:   0.200000\n\n\n\n\n\nTree plot with mutations and sequences \n\n\n\n\nGenome position01000020: 0010041: 0000112: 0101003: 100103",
    "crumbs": [
      "Slides",
      "Genetic diversity",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/genetic_diversity/diversity.html#many-programs-treat-missing-data-as-invariant",
    "href": "slides/genetic_diversity/diversity.html#many-programs-treat-missing-data-as-invariant",
    "title": "Genetic diversity",
    "section": "Many programs treat missing data as invariant",
    "text": "Many programs treat missing data as invariant\n\n\n\n\n\n\n\n\n\n\nKorunes & Samuk (2021), Fig 1\n\n\n\n\nDiversity:\n\n\\pi = \\frac{\\sum_{i&lt;j}k_{ij}}{n \\choose 2}\n\nDivergence:\n\nd_{XY} = \\frac{1}{n_Xn_Y}\\sum_{i=1}^{n_X}\\sum_{j=1}^{n_Y}k_{ij}\n\nHere, n is the number of samples, k_{ij} tally of allelic differences between two haplotypes within (\\pi) a population or between (d_{XY}) populations\n\n\nPaper caption:\n\nThe logic and input/ouput of pixy demonstrated with a simple haploid example. (a) Comparison of two methods for computing π (or dXY) in the face of missing data. These methods follow the first expression of Equation 1 but differ in how they calculate the numerator and denominator. In Case 1, all missing data is assumed to be present but invariant. This results in a deflated estimate of π. In Case 2, missing data are simply omitted from the calculation, both in terms of the number of sites (the final denominator) and the component denominators for each site (the n choose two terms). This results in an unbiased estimate of π. (b) The adjusted π method (Case 2) as implemented for VCFs in pixy. The example VCF (input) contains the same four haplotypes as (a). Invariant sites are represented as sites with no ALT allele, and greyed-out sites are those that failed to pass a genotype filter requiring a minimum number of reads covering the genotype (Depth ≥ 10 in this case)",
    "crumbs": [
      "Slides",
      "Genetic diversity",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/genetic_diversity/diversity.html#missing-data-may-bias-diversity-measures-downwards",
    "href": "slides/genetic_diversity/diversity.html#missing-data-may-bias-diversity-measures-downwards",
    "title": "Genetic diversity",
    "section": "Missing data may bias diversity measures downwards",
    "text": "Missing data may bias diversity measures downwards\n\n\n\n\n\n\n\n\n\nKorunes & Samuk (2021), Fig 4\n\n\n\n\n\nReal data: strong tendency of commonly adopted tools to underestimate pi, dxy (even for 30X data sets)\nCaption:\n\nComparisons of estimates of π from whole genome data derived from 18 Anopheles gambiae individuals from the Ag1000G Burkina Faso (BFS) population. Each panel (a–d) depicts the estimates of π for the X chromosome performed using pixy (y-axis) and four other methods (x-axis, a–d). Points are coloured according to the proportion of missing data (of any type) calculated by pixy. The 1:1 line is shown in red",
    "crumbs": [
      "Slides",
      "Genetic diversity",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/genetic_diversity/diversity.html#nucleotide-diversity-landscapes",
    "href": "slides/genetic_diversity/diversity.html#nucleotide-diversity-landscapes",
    "title": "Genetic diversity",
    "section": "Nucleotide diversity landscapes",
    "text": "Nucleotide diversity landscapes\n\nvcftools --gzvcf vcf/allsites.vcf.gz --window-pi 1000 --out results/out\ncsvtk plot line --tabs results/out.windowed.pi -x BIN_START -y PI \\\n   --point-size 0.01 --xlab \"Position (bp)\" \\\n   --ylab \"Diversity\" --title LG4 --width 9.0 --height 3.5 \\\n   &gt; results/out.windowed.pi.png\n\n\n\n\n\nWindow-based plot is seque into genome scans",
    "crumbs": [
      "Slides",
      "Genetic diversity",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/genetic_diversity/diversity.html#genetic-basis-of-adaptation-and-genome-scans",
    "href": "slides/genetic_diversity/diversity.html#genetic-basis-of-adaptation-and-genome-scans",
    "title": "Genetic diversity",
    "section": "Genetic basis of adaptation and genome scans",
    "text": "Genetic basis of adaptation and genome scans\n\n\n\n\n\n\n\n\nFundamental questions:\n\nHow many genes are involved in the evolution of adaptive traits?\nWhat is the distribution of phenotypic effects among successive allelic substitutions?\nIs adaptation typically based on standing variation or new mutations?\nWhat is the relative importance of additive vs. nonadditive effects on adaptive trait variation?\nAnd what is the relative importance of structural vs. regulatory changes in phenotypic evolution?\n\n\nStorz (2005), Fig 1\n\n\n\nStorz (2005) lays out genomic scans as an alternative approach to GWAS and QTL mapping for finding genetic determinants of adaptation. The reason is GWAS/QTL requires a phenotype whereas genome scans are data-driven.\nCaption (fig 1):\n\nFig. 1 (a) Effects of genetic hitch-hiking along a recombining chromosome. Hori- zontal lines depict a population sample of homologous chromosomes, and filled symbols depict neutral mutations. In this example an advantageous mutation (open symbol) arises and is rapidly driven to fixation by positive selection. Although the mutation is recombined against new genetic backgrounds during the course of the selective sweep, a sizable fraction of the ancestral haplotype (shown in red) also becomes fixed. Consequently, neutral variants that were initially linked to the advantageous mutation undergo a dramatic increase in frequency as a result of hitchhiking. (b) In this example, locus 3 has been rendered monomorphic by a selective sweep. Sampled gene copies (denoted by tips of the gene tree) share a very recent common ancestor, and π = 0 (where π = nucleotide diversity; Nei & Li 1979). comparison, unlinked, neutrally evolving regions of the genome (loci 1, 2, and 4) are characterized by deeper genealogies, and higher levels of nucleotide diversity (π = 0.019–0.020). Note that the gene trees depict the true genealogies of the samples, not the genealogies inferred from observed variation.",
    "crumbs": [
      "Slides",
      "Genetic diversity",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/genetic_diversity/diversity.html#example",
    "href": "slides/genetic_diversity/diversity.html#example",
    "title": "Genetic diversity",
    "section": "Example",
    "text": "Example\n\nvcftools --gzvcf vcf/allsites.vcf.gz --weir-fst-pop PUN-Y.txt \\\n   --weir-fst-pop PUN-R.txt \\\n   --fst-window-size 1000 \\\n   --out results/out\ncsvtk plot line --tabs results/out.windowed.weir.fst \\\n   -x BIN_START -y MEAN_FST \\\n   --point-size 2 --xlab \"Position (bp)\" \\\n   --ylab \"Fst\" --title \"LG4: PUN-Y vs PUN-R\" \\\n   --width 9.0 --height 3.5 --scatter \\\n   &gt; results/out.windowed.weir.fst.mean.png",
    "crumbs": [
      "Slides",
      "Genetic diversity",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/genetic_diversity/diversity.html#z-scores-can-help-identifying-outliers",
    "href": "slides/genetic_diversity/diversity.html#z-scores-can-help-identifying-outliers",
    "title": "Genetic diversity",
    "section": "Z-scores can help identifying outliers",
    "text": "Z-scores can help identifying outliers\n\n\n\ndata &lt;- read.table(\"results/out.windowed.weir.fst\", header = TRUE)\nx &lt;- data$MEAN_FST\nz &lt;- (x - mean(x))/sd(x)\nplot(x = data$BIN_START, y = z, xlab = \"Position (bp)\")\n\n\n\n\n\n\n\n\n\nRaw data can be converted to Z-scores to highlight outliers. A Z-score is a measure of how far a data point is from the mean in terms of the number of standard deviations:\n\nZ = \\frac{X - \\mu}{\\sigma}\n\nThreshold of a couple of standard deviations common.",
    "crumbs": [
      "Slides",
      "Genetic diversity",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/genetic_diversity/diversity.html#ld-decay-and-choice-of-window-size",
    "href": "slides/genetic_diversity/diversity.html#ld-decay-and-choice-of-window-size",
    "title": "Genetic diversity",
    "section": "LD decay and choice of window size",
    "text": "LD decay and choice of window size\n\n\n\n\n\n\n\n\n\n\nProperties of genetic variation and inferred demographic history in sampled A. millepora. Fuller et al. (2020), Figure 2. Upper left plot illustrates LD as a function of physical distance. Here, choosing a window size 20-30kb would ensure that most windows are independent.",
    "crumbs": [
      "Slides",
      "Genetic diversity",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/genetic_diversity/diversity.html#annotations",
    "href": "slides/genetic_diversity/diversity.html#annotations",
    "title": "Genetic diversity",
    "section": "Annotations",
    "text": "Annotations\n\ncsvtk filter2 --tabs gff/annotation.gff --filter ' $3 == \"CDS\" ' |\\\n csvtk mutate2 --tabs -H -e '$4 - 12000000' -w 0 |\\\n csvtk mutate2 --tabs -H -e '$5 - 12000000' -w 0 |\\\n csvtk cut --tabs --fields 1,10,11 | bedtools sort | bedtools merge \\\n    &gt; bed/CDS.bed 2&gt;/dev/null\nhead -n 3 bed/CDS.bed\n\nLG4 12032   12121\nLG4 12214   12658\nLG4 12774   12830\n\n\n\npixy --vcf vcf/allsites.vcf.gz --stats pi \\\n --populations populations.txt --output_prefix cds \\\n --output_folder results --bed_file bed/CDS.bed\npixy --vcf vcf/allsites.vcf.gz --stats pi \\\n --populations populations.txt --window_size 1000 \\\n --output_prefix all --output_folder results\n\n\n\n\ncsvtk summary --tabs -i -g pop \\\n   -f avg_pi:mean results/cds_pi.txt -w 5\n\npop avg_pi:mean\nPUN-R   0.00247\nPUN-Y   0.00462\n\n\n\n\ncsvtk summary --tabs -i -g pop \\\n   -f avg_pi:mean results/all_pi.txt -w 5\n\npop avg_pi:mean\nPUN-R   0.00893\nPUN-Y   0.00805",
    "crumbs": [
      "Slides",
      "Genetic diversity",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/genetic_diversity/diversity.html#dissecting-differentiation-landscapes",
    "href": "slides/genetic_diversity/diversity.html#dissecting-differentiation-landscapes",
    "title": "Genetic diversity",
    "section": "Dissecting differentiation landscapes",
    "text": "Dissecting differentiation landscapes\n\n\n\n\n\n\n\nFigure 3: Burri (2017) Fig. 1",
    "crumbs": [
      "Slides",
      "Genetic diversity",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/genetic_diversity/diversity.html#monkeyflower-genomic-landscape",
    "href": "slides/genetic_diversity/diversity.html#monkeyflower-genomic-landscape",
    "title": "Genetic diversity",
    "section": "Monkeyflower genomic landscape",
    "text": "Monkeyflower genomic landscape\n\n\n\n\n\n\n\n\nFigure 4: Stankowski et al. (2019) Fig. 1",
    "crumbs": [
      "Slides",
      "Genetic diversity",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/genetic_diversity/diversity.html#exercise",
    "href": "slides/genetic_diversity/diversity.html#exercise",
    "title": "Genetic diversity",
    "section": "Exercise",
    "text": "Exercise",
    "crumbs": [
      "Slides",
      "Genetic diversity",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/genetic_diversity/diversity.html#bibliography",
    "href": "slides/genetic_diversity/diversity.html#bibliography",
    "title": "Genetic diversity",
    "section": "Bibliography",
    "text": "Bibliography\n\n\nBerner, D. (2019). Allele Frequency Difference AFD to FST for Quantifying Genetic Population Differentiation. Genes, 10(4), 308. https://doi.org/10.3390/genes10040308\n\n\nBurri, R. (2017). Dissecting differentiation landscapes: A linked selection’s perspective. Journal of Evolutionary Biology, 30(8), 1501–1505. https://doi.org/10.1111/jeb.13108\n\n\nCharlesworth, B., & Jensen, J. D. (2022). How Can We Resolve Lewontin’s Paradox? Genome Biology and Evolution, 14(7), evac096. https://doi.org/10.1093/gbe/evac096\n\n\nCorbett-Detig, R. B., Hartl, D. L., & Sackton, T. B. (2015). Natural Selection Constrains Neutral Diversity across A Wide Range of Species. PLOS Biology, 13(4), e1002112. https://doi.org/10.1371/journal.pbio.1002112\n\n\nEllegren, H., & Galtier, N. (2016). Determinants of genetic diversity. Nature Reviews Genetics, 17(7), 422–433. https://doi.org/10.1038/nrg.2016.58\n\n\nFuller, Z. L., Mocellin, V. J. L., Morris, L. A., Cantin, N., Shepherd, J., Sarre, L., Peng, J., Liao, Y., Pickrell, J., Andolfatto, P., Matz, M., Bay, L. K., & Przeworski, M. (2020). Population genetics of the coral Acropora millepora: Toward genomic prediction of bleaching. Science, 369(6501), eaba4674. https://doi.org/10.1126/science.aba4674\n\n\nGarcía-Dorado, A., & Caballero, A. (2021). Neutral genetic diversity as a useful tool for conservation biology. Conservation Genetics, 22(4), 541–545. https://doi.org/10.1007/s10592-021-01384-9\n\n\nKorunes, K. L., & Samuk, K. (2021). Pixy: Unbiased estimation of nucleotide diversity and divergence in the presence of missing data. Molecular Ecology Resources, 21(4), 1359–1368. https://doi.org/10.1111/1755-0998.13326\n\n\nKuderna, L. F. K., Gao, H., Janiak, M. C., Kuhlwilm, M., Orkin, J. D., Bataillon, T., Manu, S., Valenzuela, A., Bergman, J., Rousselle, M., Silva, F. E., Agueda, L., Blanc, J., Gut, M., de Vries, D., Goodhead, I., Harris, R. A., Raveendran, M., Jensen, A., … Marques Bonet, T. (2023). A global catalog of whole-genome diversity from 233 primate species. Science, 380(6648), 906–913. https://doi.org/10.1126/science.abn7829\n\n\nLeffler, E. M., Bullaughey, K., Matute, D. R., Meyer, W. K., Ségurel, L., Venkat, A., Andolfatto, P., & Przeworski, M. (2012). Revisiting an Old Riddle: What Determines Genetic Diversity Levels within Species? PLOS Biology, 10(9), e1001388. https://doi.org/10.1371/journal.pbio.1001388\n\n\nLewis, D. (2023). Biggest ever study of primate genomes has surprises for humanity. Nature. https://doi.org/10.1038/d41586-023-01776-6\n\n\nNei, M. (1973). Analysis of Gene Diversity in Subdivided Populations. Proceedings of the National Academy of Sciences, 70(12), 3321–3323. https://doi.org/10.1073/pnas.70.12.3321\n\n\nStankowski, S., Chase, M. A., Fuiten, A. M., Rodrigues, M. F., Ralph, P. L., & Streisfeld, M. A. (2019). Widespread selection and gene flow shape the genomic landscape during a radiation of monkeyflowers. PLOS Biology, 17(7), e3000391. https://doi.org/10.1371/journal.pbio.3000391\n\n\nStorz, J. F. (2005). INVITED REVIEW: Using genome scans of DNA polymorphism to infer adaptive population divergence. Molecular Ecology, 14(3), 671–688. https://doi.org/10.1111/j.1365-294X.2005.02437.x\n\n\nWright, S. (1931). Evolution in Mendelian Populations. Genetics, 16(2), 97–159. https://www.ncbi.nlm.nih.gov/pmc/articles/PMC1201091/",
    "crumbs": [
      "Slides",
      "Genetic diversity",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/recombination/index.html",
    "href": "slides/recombination/index.html",
    "title": "Recombination and linkage",
    "section": "",
    "text": "Slides for recombination and linkage module."
  },
  {
    "objectID": "slides/recombination/index.html#about",
    "href": "slides/recombination/index.html#about",
    "title": "Recombination and linkage",
    "section": "",
    "text": "Slides for recombination and linkage module."
  },
  {
    "objectID": "slides/recombination/index.html#listing",
    "href": "slides/recombination/index.html#listing",
    "title": "Recombination and linkage",
    "section": "Listing",
    "text": "Listing\n\n\n    \n      \n      \n    \n\n\n\n\nTitle\nDescription\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "slides/variant_filtering/variant_filtering.html#why-we-need-to-filter-variants",
    "href": "slides/variant_filtering/variant_filtering.html#why-we-need-to-filter-variants",
    "title": "Variant filtering",
    "section": "Why we need to filter variants",
    "text": "Why we need to filter variants\n\n\n\n\n\n\n\n\nFigure 1: Overlap in raw variant calls for different combinations of read mappers and variant callers.\n\n\n\nError rate of variant calls (SNPs and INDELs) largely unknown. Two major sources of error are\n\nerroneous realignment in low-complexity regions\nincomplete reference sequence\n\n\n\n\n\n\n\n\nFigure 2: Overlap in filtered variant calls for different combinations of read mappers and variant callers\n\n\n\n\nLi (2014)\n\n\n\nError rate of variant calls (SNPs and INDELs) and leading causal artifacts remain unclear and largely unknown (Li, 2014). This study compared several read mappers and variant callers on a haploid data set. For comparison, the following variant filters were applied:\n\nlow-complexity (LC) filter\nmaximum depth (MD)\nallele balance (AD) - filter sites where non-reference (ALT) too low\ndouble strand (DS) - filter if ALT too low on one strand\nFisher strand (FS) - filter if strong REF/ALT correlation with +/- strand\nquality filter (QU) - variant quality threshold\n\nHere, AB, DS and FS filters are caller dependent!",
    "crumbs": [
      "Slides",
      "Variant filtering",
      "Variant filtering"
    ]
  },
  {
    "objectID": "slides/variant_filtering/variant_filtering.html#manual-filtering-sets-thresholds-on-context-statistics",
    "href": "slides/variant_filtering/variant_filtering.html#manual-filtering-sets-thresholds-on-context-statistics",
    "title": "Variant filtering",
    "section": "Manual filtering sets thresholds on context statistics",
    "text": "Manual filtering sets thresholds on context statistics\n\n\n\n\n\nTable 1: Key data filters (Table 3 Lou et al., 2021, p. 5974)\n\n\n\n\n\n\n\n\n\n\nCategory\nFilter\nRecommendation (examples)\n\n\n\n\nGeneral filters\nBase quality\nRecalibrate / &lt;Q20\n\n\n\nMapping quality\nMAQ &lt; 20 / improper pairs\n\n\n\nMinimum depth and/ or number of individuals\nVaries; e.g. &lt;50% individuals, &lt;0.8X average depth\n\n\n\nMaximum depth\n1-2 sd above median depth\n\n\n\nDuplicate reads\nRemove\n\n\n\nIndels\nRealign reads / haplotype-based caller / exclude bases flanking indels\n\n\n\nOverlapping sections of paired-­end reads\nSoft-clip to avoid double-counting\n\n\nFilters on polymorphic sites\np-value\n10^{-6}\n\n\n\nSNPs with more than two alleles\nFilter; methods often assume bi-allelic sites\n\n\n\nMinimum minor allele frequency (MAF)\n1%-10% for some analyses (PCA/admixture/LD/\\mathsf{F_{ST}})\n\n\nRestricting analysis to a predefined site list\nList of global SNPs\nUse global call set for analyses requiring shared sites\n\n\n\n\n\n\n\n\nProcedure\nLook at annotations (context statistics) and set thresholds.\nExample: filter all sites with MAF&lt;1%\n\nNB: bypassing recommendations often means doing custom analyses. For instance, Talla et al. (2019) include GATK tri-allelic sites due to different bi-allelic pairs segregating in different subpopulations (e.g. A/G in pop 1, A/T in pop 2)\nVerbose explanations of filters\nSource: (Lou et al., 2021)\n\nBase quality scores are factored into the calculation of genotype likelihoods, so if they accurately reflect the probability of sequencing error, bases with low scores also carry useful information. However, base quality scores are sometimes miscalibrated, so noise may be reduced if bases with scores below a threshold (e.g., 20) are either trimmed off prior to analysis or ignored. Alternatively, all base quality scores can be recalibrated based on estimated error profiles in the data (see Section 3.1).\nMapping quality is not considered in genotype likelihood estimation in currently available tools, so it is often advisable to remove low-­confidence and/or nonuniquely mapped reads prior to analysis (e.g., reads with mapping quality &lt;20). Filtering out reads that do not map in proper pairs should also further increase confidence in reads being mapped to the correct location, but could cause biases in regions with structural variation.\nTo avoid sites with low or confounding data support in downstream analysis, minimum depth and/or minimum number of individual filters can be used to exclude sites with much reduced sequencing coverage compared to the rest of the genome (e.g., regions with low unique mapping rates, such as repetitive sequences). Appropriate thresholds will vary between data sets, but could, for example, exclude sites with read data for &lt;50% of individuals (globally or within each population), or with &lt;0.8× average depth across individuals (after filtering on mapping quality)\nMaximum depth filters are used to exclude sites with exceptionally high coverage (e.g., regions that are susceptible to dubious mapping, such as copy number variants). Common maximum depth thresholds could be one or two standard deviations above the median genome-­wide depth.\nPCR and optical duplicates can give inflated impressions of how many unique molecules have been sequenced, which—­particularly in the presence of preferential amplification of one allele—­ could bias genotype likelihood estimation. We therefore recommend removing duplicate reads prior to any analysis.\nReads mapped across indels are frequently misaligned, especially if the ends of reads span an indel. To avoid false SNP calls, we recommend either using dedicated tools to realign reads covering indels, using a haplotype-­based variant caller (e.g., freebayes or gatk) to estimate genotype likelihoods, or excluding bases flanking indels.\nIf the DNA insert in a library fragment is shorter than the combined length of paired reads, there will be a section of overlap between the forward and reverse reads. While some variant callers (e.g., gatk) account for the pseudoreplication in overlapping ends of read pairs, the current implementation of angsd treats each end of a read pair as independent (this may change in a future release (T. Korneliussen, personal communication)). When treated as independent, read support for overlapping sections will be “double counted,” which may bias genotype likelihoods. A conservative approach is to soft-­clip one of the overlapping read ends.\nThe significance threshold (often in the form of maximum p-­value) can be adjusted to fine-­tune the sensitivity of polymorphism detection, with lower p-­values leading to fewer, but higher confidence, SNP calls. A commonly used cut-­off is 10 −6.\nMost software programs for downstream analyses assume that all SNPs are biallelic, so SNPs with more than two alleles can be filtered out in the SNP identification step to avoid violation of such assumptions.\nFor many types of analysis, such as PCA, admixture analysis, detection of FST outliers and estimation of LD, low-­frequency SNPs are uninformative and can even bias results (e.g. Linck & Battey, 2019; Roesti et al., 2012). For those types of analysis, imposing a minimum MAF filter of 1%–­10% can substantially speed up computation time. Appropriate thresholds depend on coverage, sample size (how many copies does an MAF threshold correspond to) and the type of downstream analysis.\nFor comparison of parameter estimates for multiple populations, it is important to ensure that data are obtained for a shared set of sites and that SNP polarization (which allele we track the frequency of) is consistent. For programs such as angsd where population-­specific estimates are obtained by analysing the data from each population separately, a good strategy is to first conduct a global SNP calling with all samples and then restrict population-­specific analysis to those SNPs with consistent major and minor allele designations (-­doMajorMinor 3 in angsd) no MAF or SNP p-­value filter (because that would incorrectly generate “missing data” if a site is fixed in a particular population).",
    "crumbs": [
      "Slides",
      "Variant filtering",
      "Variant filtering"
    ]
  },
  {
    "objectID": "slides/variant_filtering/variant_filtering.html#guidelines-what-guidelines",
    "href": "slides/variant_filtering/variant_filtering.html#guidelines-what-guidelines",
    "title": "Variant filtering",
    "section": "Guidelines? What guidelines?",
    "text": "Guidelines? What guidelines?\nGATK hard filters\n\nHowever, because we want to help, we have formulated some generic recommendations that should at least provide a starting point for people to experiment with their data.\n\n\n\n\nSNPs\nQualByDepth (QD) &lt; 2.0\nRMSMappingQuality (MQ) &lt; 40.0\nFisherStrand (FS) &gt; 60.0\nStrandOddsRatio (SOR) &gt; 3.0\nMappingQualityRankSumTest (MQRankSum) &lt; -12.5\nReadPosRankSumTest (ReadPosRankSum) &lt; -8.0\n\nIndels\nQualByDepth (QD) &lt; 2.0\nReadPosRankSum (ReadPosRankSumTest) &lt; -20.0\nInbreedingCoeff &lt; -0.8\nFisherStrand (FS) &gt; 200.0\nStrandOddsRatio (SOR) &gt; 10.0\n\n\n\n\nThat said, you ABSOLUTELY SHOULD NOT expect to run these commands and be done with your analyses.\n\n\nhttps://gatk.broadinstitute.org/hc/en-us/articles/360037499012\n\n\n\nOn RAD-seq filtering\n\n… the effects of SNP filtering practices on population genetic inference have received much less attention\n\n\nThere Is No ‘Rule of Thumb’: Genomic Filter Settings for a Small Plant Population to Obtain Unbiased Gene Flow Estimates (Nazareno & Knowles, 2021)\n\n\n\nGeneral guidelines on manual filters are not discussed much in the literature, simply due to the fact that there is no set of rule of thumbs. Every problem requires its own settings, as the GATK developers maintain.\nGATK guidelines explained (see https://gatk.broadinstitute.org/hc/en-us/articles/360035890471):\n\nQualByDepth (QFD): variant confidence (QUAL) divided by unfiltered depth\nFisherStrand (FS): checks for strand bias (i.e., if minor allele occurs more often on one strand)\nStrandOddsRatio (SOR): alternative strand bias test\nRMSMappingQuality (MQ): root mean square mapping quality over all reads\nMappingQualytRankSumTest (MQRankSum): compares mapping qualities of ref and alt alleles\nReadPosRankSumTest (ReadPosRankSum): looks at site position within reads\nInbreedingCoeff: population-level statistics that requires at least 10 individuals",
    "crumbs": [
      "Slides",
      "Variant filtering",
      "Variant filtering"
    ]
  },
  {
    "objectID": "slides/variant_filtering/variant_filtering.html#what-about-machine-learning",
    "href": "slides/variant_filtering/variant_filtering.html#what-about-machine-learning",
    "title": "Variant filtering",
    "section": "What about machine learning?",
    "text": "What about machine learning?\n\n\n\n\nDePristo et al. (2011)\n\n\n\nVariant Quality Score Recalibration\n\nMotivation: look at context statistics and integrate over multiple dimensions\n\ntraining data: subset of known variants (from validated resources, e.g. 1000 Genomes)\ncompile multiple statistics (allele depth, read count, quality, …)\nfit Gaussian mixture model\nreassign quality scores to variant call set\n\n\nCaveat: database of known variants often not known for non-model organisms.\n\n\n\nKey take home: thresholds that previously were binary yes/no filters now depend on context; for instance, an AD (allele depth) cutoff of 4 will in VQSR sometimes pass, sometimes not, depending on other information\nFigure legend:\n\nRelationship in the HiSeq call set between strand bias and quality by depth for genomic locations in HapMap3 (red) and dbSNP (orange) used for training the variant quality score recalibrator (left), (b) and the same annotations applied to differentiate likely true positive (green) from false positive (purple) new SNPs. (c–e) Quality tranches in the recalibrated HiSeq (c), exome (d) and low-pass CEU (e) calls beginning with (top) the highest quality but smallest call set with an estimated false positive rate among new SNP calls of &lt;1/1000 to a more comprehensive call set (bottom) that includes effectively all true positives in the raw call set along with more false positive calls for a cumulative false positive rate of 10%. Each successive call set contains within it the previous tranche’s true- and false-positive calls (shaded bars) as well as tranche-specific calls of both classes (solid bars). The tranche selected for further analyses here is indicated.",
    "crumbs": [
      "Slides",
      "Variant filtering",
      "Variant filtering"
    ]
  },
  {
    "objectID": "slides/variant_filtering/variant_filtering.html#monkeyflower-call-set-with-variant-sites-only",
    "href": "slides/variant_filtering/variant_filtering.html#monkeyflower-call-set-with-variant-sites-only",
    "title": "Variant filtering",
    "section": "Monkeyflower call set with variant sites only",
    "text": "Monkeyflower call set with variant sites only\n\nVariant statistics for a variant only file from 10 Monkeyflower individuals.\n\n\nbcftools stats variantsites.vcf.gz | grep \"^SN\"\n\nSN  0   number of samples:  10\nSN  0   number of records:  12726\nSN  0   number of no-ALTs:  0\nSN  0   number of SNPs: 10459\nSN  0   number of MNPs: 0\nSN  0   number of indels:   2296\nSN  0   number of others:   0\nSN  0   number of multiallelic sites:   1038\nSN  0   number of multiallelic SNP sites:   217\n\n\n\nUse vcftools to compile data to generate summary statistics\nPlot and select thresholds",
    "crumbs": [
      "Slides",
      "Variant filtering",
      "Variant filtering"
    ]
  },
  {
    "objectID": "slides/variant_filtering/variant_filtering.html#mean-depth-and-variant-quality-distribution",
    "href": "slides/variant_filtering/variant_filtering.html#mean-depth-and-variant-quality-distribution",
    "title": "Variant filtering",
    "section": "Mean depth and variant quality distribution",
    "text": "Mean depth and variant quality distribution\n\n\n\n\nCode\nvcf &lt;- \"variantsites.vcf.gz\"\nsystem(paste(\"vcftools --gzvcf\", vcf, \"--site-depth 2&gt;/dev/null\"))\ndata &lt;- read.table(\"out.ldepth\", header = TRUE)\nx &lt;- as.data.frame(table(data$SUM_DEPTH))\nlower &lt;- 0.8 * median(data$SUM_DEPTH)\nupper &lt;- median(data$SUM_DEPTH) + 1 * sd(data$SUM_DEPTH)\nxupper &lt;- ceiling(upper/100) * 100\nggplot(x, aes(x = as.numeric(as.character(Var1)), y = Freq)) + geom_line() + xlab(\"Depth\") +\n    ylab(\"bp\") + xlim(0, xupper) + geom_vline(xintercept = lower, color = \"red\",\n    size = 1.3) + geom_vline(xintercept = upper, color = \"red\", size = 1.3) + ggtitle(\"Example threshold: 0.8X median depth, median depth + 2sd\")\n\n\n\n\n\n\n\n\nFigure 3: Depth uneven. High coverage often repetitive sequence. Too low coverage will bias SNP calling due to undersampling of alleles.\n\n\n\n\n\n\n\n\nCode\nsystem(paste(\"vcftools --gzvcf\", vcf, \"--site-quality 2&gt;/dev/null\"))\ndata &lt;- read.table(\"out.lqual\", header = TRUE)\nggplot(subset(data, QUAL &lt; 1000), aes(x = QUAL)) + geom_histogram(fill = \"white\",\n    color = \"black\", bins = 50) + xlab(\"Quality value\") + ylab(\"Count\") + geom_vline(xintercept = 30,\n    color = \"red\", size = 1.3) + ggtitle(\"Example threshold: Q30\")\n\n\n\n\n\n\n\n\nFigure 4: Filter variants with too low quality (Q30=0.001% chance of being wrong)",
    "crumbs": [
      "Slides",
      "Variant filtering",
      "Variant filtering"
    ]
  },
  {
    "objectID": "slides/variant_filtering/variant_filtering.html#missing-data-per-individual-and-site",
    "href": "slides/variant_filtering/variant_filtering.html#missing-data-per-individual-and-site",
    "title": "Variant filtering",
    "section": "Missing data per individual and site",
    "text": "Missing data per individual and site\n\n\n\n\nCode\nsystem(paste(\"vcftools --gzvcf\", vcf, \"--missing-indv 2&gt;/dev/null\"))\ndata &lt;- read.table(\"out.imiss\", header = TRUE)\nggplot(data, aes(x = F_MISS, y = INDV)) + geom_point(size = 3) + ggtitle(\"Missing data per individual\")\n\n\n\n\n\n\n\n\nFigure 5: Missing number of sites per individual. Too many would indicate poor sample quality.\n\n\n\n\n\n\n\n\nCode\nsystem(paste(\"vcftools --gzvcf\", vcf, \"--missing-site 2&gt;/dev/null\"))\ndata &lt;- read.table(\"out.lmiss\", header = TRUE)\nggplot(data, aes(x = F_MISS)) + geom_histogram(fill = \"white\", color = \"black\", bins = 10) +\n    xlab(\"F_MISS\") + ylab(\"Count\") + geom_vline(xintercept = 0.25, color = \"red\",\n    size = 1.3) + ggtitle(\"Missing data per site: example threshold F_MISS=0.25\")\n\n\n\n\n\n\n\n\nFigure 6: Fraction missing calls per site. Could warrant separate filters when comparing populations (e.g., total missing 0.2, but population A has 0.1 missing, population B 0.4).",
    "crumbs": [
      "Slides",
      "Variant filtering",
      "Variant filtering"
    ]
  },
  {
    "objectID": "slides/variant_filtering/variant_filtering.html#minor-allele-frequency-and-heterozygosity",
    "href": "slides/variant_filtering/variant_filtering.html#minor-allele-frequency-and-heterozygosity",
    "title": "Variant filtering",
    "section": "Minor allele frequency and heterozygosity",
    "text": "Minor allele frequency and heterozygosity\n\n\n\n\n\n\nCode\nsystem(paste(\"vcftools --gzvcf\", vcf, \"--freq2 --max-alleles 2 2&gt;/dev/null\"))\ndata &lt;- read.table(\"out.frq\", skip = 1)\ncolnames(data) &lt;- c(\"CHROM\", \"POS\", \"N_ALLELES\", \"N_CHR\", \"FREQ1\", \"FREQ2\")\ndata$MAF &lt;- apply(data, 1, function(x) as.numeric(min(x[5], x[6])))\nggplot(data, aes(x = MAF)) + geom_histogram(fill = \"white\", color = \"black\", bins = 10) +\n    xlab(\"MAF\") + ylab(\"Count\") + geom_vline(xintercept = 0.1, color = \"red\", size = 1.3) +\n    ggtitle(\"Minor allele frequency: example threshold MAF=0.1\")\n\n\n\n\n\n\n\n\nFigure 7: Minor allele frequency distribution\n\n\n\n\n\n\n\n\n\n56320471\n\nn=12; mutations 0, 4, 5 (red) are singletons and would fail MAF&lt;=0.1\n\nReasonable cutoff 0.05-0.1 for PCA, population structure.\nBut! Statistics based on diversity or the SFS should not be filtered on MAF\n\n\n\nCode\nsystem(paste(\"vcftools --gzvcf\", vcf, \"--het 2&gt;/dev/null\"))\ndata &lt;- read.table(\"out.het\", header = TRUE)\nggplot(data, aes(x = F, y = INDV)) + geom_point(size = 3) + ggtitle(\"Inbreeding coefficient\")\n\n\n\n\n\n\n\n\nFigure 8: Genome-wide inbreeding coefficient by individual\n\n\n\n\n\n\nF=0: Hardy-Weinberg Equilibrium\nF&gt;0: deficit of heterozygotes; inbreeding, Wahlund effect (population substructure), allele dropout\nF&lt;0: surplus of heterozygotes; could be sample contamination, poor sequence quality (mismapping)",
    "crumbs": [
      "Slides",
      "Variant filtering",
      "Variant filtering"
    ]
  },
  {
    "objectID": "slides/variant_filtering/variant_filtering.html#monkeyflower-call-set-with-invariant-sites",
    "href": "slides/variant_filtering/variant_filtering.html#monkeyflower-call-set-with-invariant-sites",
    "title": "Variant filtering",
    "section": "Monkeyflower call set with invariant sites",
    "text": "Monkeyflower call set with invariant sites\n\nVariant statistics for an all sites file from 10 Monkeyflower individuals.\n\n\nbcftools stats allsites.vcf.gz | grep \"^SN\"\n\nSN  0   number of samples:  10\nSN  0   number of records:  10103\nSN  0   number of no-ALTs:  9323\nSN  0   number of SNPs: 400\nSN  0   number of MNPs: 0\nSN  0   number of indels:   132\nSN  0   number of others:   0\nSN  0   number of multiallelic sites:   43\nSN  0   number of multiallelic SNP sites:   4\n\n\nFiltering as before but excluding MAF, variant quality filters",
    "crumbs": [
      "Slides",
      "Variant filtering",
      "Variant filtering"
    ]
  },
  {
    "objectID": "slides/variant_filtering/variant_filtering.html#next-generation-data-filtering-in-the-genomics-era",
    "href": "slides/variant_filtering/variant_filtering.html#next-generation-data-filtering-in-the-genomics-era",
    "title": "Variant filtering",
    "section": "Next-generation data filtering in the genomics era",
    "text": "Next-generation data filtering in the genomics era\n\n\n\n\n\n\nFigure 9: Post-variant filtering challenges. a) joint filtering of missing data can obscure population quality differences b) SNP number varies threefold if MAF within sample-group filtering is applied; would be missed if genome-wide filtering c) population structure inflates HWP which may inflate study-wide filtering on HWP d) LD thinning may obscure inversions\n\n\n\n\nHemstrom et al. (2024), Fig. 2\n\n\nFigure legend:\n\na, Missing data, which can occur across loci and individuals. Data from monarch butterflies114 are used to show that the percentage of missing data can be high (21–100% per locus) when missing data filtering occurs within sample-groups, but is much lower if performed jointly across all samples (19–56%), the latter of which can obscure the differences in data quality among populations. b, Data from a study on yellow perch102 showing that the number of single-nucleotide polymorphisms (SNPs) varies threefold among populations if a minor allele frequency (MAF) filter of 0.01 is applied within sample-groups, which would be missed if the same filter was applied study-wide. c, Loci can deviate from Hardy–Weinberg proportions (HWP) due to homozygote or heterozygote excesses owing to biological causes, which filtering may obscure. For example, unintentionally combining two divergent sample-groups will result in higher FIS (fixation index, individuals versus subpopulation) and many more loci out of HWP (owing to Wahlund effects)39. Filtering study-wide would cause the erroneous removal of loci in such cases. d, Linkage disequilibrium (LD) thinning (that is, filtering out loci with high LD; red points) can obscure an inversion (blue points) in three-spined stickleback haplotypes141. FST, fixation index, subpopulation versus total; MAC, minor allele count.",
    "crumbs": [
      "Slides",
      "Variant filtering",
      "Variant filtering"
    ]
  },
  {
    "objectID": "slides/variant_filtering/variant_filtering.html#bibliography",
    "href": "slides/variant_filtering/variant_filtering.html#bibliography",
    "title": "Variant filtering",
    "section": "Bibliography",
    "text": "Bibliography\n\n\nDePristo, M. A., Banks, E., Poplin, R., Garimella, K. V., Maguire, J. R., Hartl, C., Philippakis, A. A., del Angel, G., Rivas, M. A., Hanna, M., McKenna, A., Fennell, T. J., Kernytsky, A. M., Sivachenko, A. Y., Cibulskis, K., Gabriel, S. B., Altshuler, D., & Daly, M. J. (2011). A framework for variation discovery and genotyping using next-generation DNA sequencing data. Nature Genetics, 43(5), 491–498. https://doi.org/10.1038/ng.806\n\n\nHemstrom, W., Grummer, J. A., Luikart, G., & Christie, M. R. (2024). Next-generation data filtering in the genomics era. Nature Reviews Genetics, 1–18. https://doi.org/10.1038/s41576-024-00738-6\n\n\nLi, H. (2014). Toward better understanding of artifacts in variant calling from high-coverage samples. Bioinformatics, 30(20), 2843–2851. https://doi.org/10.1093/bioinformatics/btu356\n\n\nLou, R. N., Jacobs, A., Wilder, A. P., & Therkildsen, N. O. (2021). A beginner’s guide to low-coverage whole genome sequencing for population genomics. Molecular Ecology, 30(23), 5966–5993. https://doi.org/10.1111/mec.16077\n\n\nNazareno, A. G., & Knowles, L. L. (2021). There Is No “Rule of Thumb”: Genomic Filter Settings for a Small Plant Population to Obtain Unbiased Gene Flow Estimates. Frontiers in Plant Science, 12. https://www.frontiersin.org/articles/10.3389/fpls.2021.677009\n\n\nTalla, V., Soler, L., Kawakami, T., Dincă, V., Vila, R., Friberg, M., Wiklund, C., & Backström, N. (2019). Dissecting the Effects of Selection and Mutation on Genetic Diversity in Three Wood White (Leptidea) Butterfly Species. Genome Biology and Evolution, 11(10), 2875–2886. https://doi.org/10.1093/gbe/evz212",
    "crumbs": [
      "Slides",
      "Variant filtering",
      "Variant filtering"
    ]
  },
  {
    "objectID": "slides/variant_calling/reproducibility.html#motivation",
    "href": "slides/variant_calling/reproducibility.html#motivation",
    "title": "Variant calling workflows",
    "section": "Motivation",
    "text": "Motivation\nManual variant calling\n\nbwa index ref/M_aurantiacus_v1.fasta\n\n\nsamtools faidx ref/M_aurantiacus_v1.fasta\n\n\nbwa mem -R \"@RG\\tID:SRR9309790\\tSM:PUN-Y-INJ\\tPL:ILLUMINA\" -t 4 -M \\\n    ref/M_aurantiacus_v1.fasta \\\n    fastq/PUN-Y-INJ_R1.fastq.gz \\\n    fastq/PUN-Y-INJ_R2.fastq.gz | \\\n    samtools sort - | \\\n    samtools view --with-header --output bam/PUN-Y-INJ.bam\n\n\nThis quickly becomes complex - not to mention tedious and boring. With larger sample sizes it becomes difficult to keep track which commands need updating should input data change.\n\n\nSolution\nWorkflow managers!",
    "crumbs": [
      "Slides",
      "Variant calling",
      "Variant calling workflows"
    ]
  },
  {
    "objectID": "slides/variant_calling/reproducibility.html#of-inputs-and-outputs",
    "href": "slides/variant_calling/reproducibility.html#of-inputs-and-outputs",
    "title": "Variant calling workflows",
    "section": "Of inputs and outputs",
    "text": "Of inputs and outputs\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInputs are connected to outputs\nArrows correspond to dependencies and transformation/generation of new data\nWorkflow managers define rules that link inputs to outputs with an action\n\n\n\nrule markdup:\n    input: map/PUN-Y-INJ.bam\n    output: markdup/PUN-Y-INJ.bam\n    action: run picard MarkDuplicates",
    "crumbs": [
      "Slides",
      "Variant calling",
      "Variant calling workflows"
    ]
  },
  {
    "objectID": "slides/variant_calling/reproducibility.html#workflow-managers",
    "href": "slides/variant_calling/reproducibility.html#workflow-managers",
    "title": "Variant calling workflows",
    "section": "Workflow managers",
    "text": "Workflow managers\n\n\n\n\nprocess GATK4_MARKDUPLICATES {\n\n    input:\n    path  bam\n    path  fasta\n    path  fasta_fai\n\n    output:\n    tuple val(meta), path(\"*bam\"),      emit: bam\n    tuple val(meta), path(\"*.bai\"),     emit: bai\n    tuple val(meta), path(\"*.metrics\"), emit: metrics\n\n    script:\n    -- snip --\n\n    gatk MarkDuplicates $input_list ...\n\n\nGroovy syntax\nbecoming a standard in production settings\n\n\n\n Snakemake\nrule mark_duplicates:\n    input:\n        bam = \"map/{prefix}.bam\",\n        bai = \"map/{prefix}.bai\",\n        fasta = \"ref/M_aurantiacus_v1.fasta\"\n    output:\n        bam = \"markdup/{prefix}.bam\",\n    shell:\n        \"gatk MarkDuplicates...\"\n\n\nPython-like syntax",
    "crumbs": [
      "Slides",
      "Variant calling",
      "Variant calling workflows"
    ]
  },
  {
    "objectID": "slides/variant_calling/reproducibility.html#nf-core-and-sarek",
    "href": "slides/variant_calling/reproducibility.html#nf-core-and-sarek",
    "title": "Variant calling workflows",
    "section": "nf-core and Sarek",
    "text": "nf-core and Sarek\n\n\n\n\n\nhttps://nf-co.re/\n\n\nA global community effort to collect a curated set of open‑source analysis pipelines built using Nextflow.\n\n\n\nhuge community base\nlots of curated workflows\n\n\n\n\n\n\nhttps://nf-co.re/sarek/3.5.1/\n\n\nAnalysis pipeline to detect germline or somatic variants (pre-processing, variant calling and annotation) from WGS / targeted sequencing\n\n\n\nfocusses on variant calling in human\ndoes not produce all-sites variant file!",
    "crumbs": [
      "Slides",
      "Variant calling",
      "Variant calling workflows"
    ]
  },
  {
    "objectID": "slides/variant_calling/reproducibility.html#snparcher---a-snakemake-workflow-for-nonmodel-organisms",
    "href": "slides/variant_calling/reproducibility.html#snparcher---a-snakemake-workflow-for-nonmodel-organisms",
    "title": "Variant calling workflows",
    "section": "snpArcher - a Snakemake workflow for nonmodel organisms",
    "text": "snpArcher - a Snakemake workflow for nonmodel organisms\n\n\n\n\n\nhttps://github.com/harvardinformatics/snpArcher\n\n\n\nsnpArcher is a reproducible workflow optimized for nonmodel organisms and comparisons across datasets, built on the Snakemake workflow management system. It provides a streamlined approach to dataset acquisition, variant calling, quality control, and downstream analysis.",
    "crumbs": [
      "Slides",
      "Variant calling",
      "Variant calling workflows"
    ]
  },
  {
    "objectID": "slides/variant_calling/reproducibility.html#our-snakemake-workflow",
    "href": "slides/variant_calling/reproducibility.html#our-snakemake-workflow",
    "title": "Variant calling workflows",
    "section": "Our Snakemake workflow",
    "text": "Our Snakemake workflow\n\n\n\nraw read QC\nread mapping\n\nmapping QC\n\nduplicate marking\nraw variant calling\nbase quality score recalibration (bqsr)\nbqsr variant calling\ngenotyping\n\nvariant statistics\n\nQC report generation\n\n\n\n\n\n\n\n\n\nsnakemake_dag\n\n  \n\n0\n\n all   \n\n1\n\n multiqc   \n\n1-&gt;0\n\n    \n\n2\n\n fastqc   \n\n2-&gt;1\n\n    \n\n3\n\n bcftools_stats   \n\n3-&gt;1\n\n    \n\n4\n\n gatk_genotype_gvcfs   \n\n4-&gt;3\n\n    \n\n5\n\n gatk_combine_gvcfs   \n\n5-&gt;4\n\n    \n\n6\n\n gatk_haplotypecaller_bqsr   \n\n6-&gt;5\n\n    \n\n7\n\n gatk_apply_bqsr   \n\n7-&gt;6\n\n    \n\n8\n\n picard_mark_duplicates   \n\n8-&gt;1\n\n    \n\n8-&gt;7\n\n    \n\n11\n\n gatk_base_recalibrator   \n\n8-&gt;11\n\n    \n\n12\n\n gatk_haplotypecaller_raw   \n\n8-&gt;12\n\n    \n\n9\n\n bwa_mem   \n\n9-&gt;8\n\n    \n\n15\n\n qualimap_bamqc   \n\n9-&gt;15\n\n    \n\n10\n\n bwa_index   \n\n10-&gt;9\n\n    \n\n11-&gt;7\n\n    \n\n12-&gt;11\n\n    \n\n13\n\n picard_create_sequence_dictionary   \n\n13-&gt;4\n\n    \n\n13-&gt;6\n\n    \n\n13-&gt;12\n\n    \n\n14\n\n samtools_faidx   \n\n14-&gt;4\n\n    \n\n14-&gt;6\n\n    \n\n14-&gt;12\n\n    \n\n15-&gt;1\n\n   \n\n:::\n:::\n::::",
    "crumbs": [
      "Slides",
      "Variant calling",
      "Variant calling workflows"
    ]
  },
  {
    "objectID": "slides/variant_calling/read_mapping.html#sequence-alignment-maps-reads-to-a-reference",
    "href": "slides/variant_calling/read_mapping.html#sequence-alignment-maps-reads-to-a-reference",
    "title": "Read mapping",
    "section": "Sequence alignment maps reads to a reference",
    "text": "Sequence alignment maps reads to a reference\n\n\n\n\n\n\n\nFigure 1: Screenshot of reference sequence (top) and aligned reads (bottom). Second line with . characters is the consensus sequence. Bases are colored by nucleotide. Letter case indicates forward (upper-case) or reverse (lower-case) alignment. * is placeholder for deleted base.\n\n\n\n\nAim of sequence alignment (read mapping) is to determine source in reference sequence. Some commonly used read mappers for resequencing are\n\n\n\nBWA, BWA-MEM (Li, 2013)\nNovoalign (https://www.novocraft.com/)\nMinimap2 (Li, 2018)\n\n\nFor a recent comprehensive comparison see Donato et al. (2021)",
    "crumbs": [
      "Slides",
      "Variant calling",
      "Read mapping"
    ]
  },
  {
    "objectID": "slides/variant_calling/read_mapping.html#alignments-are-stored-in-bam-format",
    "href": "slides/variant_calling/read_mapping.html#alignments-are-stored-in-bam-format",
    "title": "Read mapping",
    "section": "Alignments are stored in BAM format",
    "text": "Alignments are stored in BAM format\n\n\nHeader information\n\n\nsamtools view --header-only bam/PUN-Y-INJ.bam | head --lines 4\n\n@HD VN:1.6  SO:coordinate\n@SQ SN:LG4  LN:100000\n@RG ID:SRR9309790   SM:PUN-Y-INJ    PL:ILLUMINA\n@PG ID:bwa  PN:bwa  VN:0.7.19-r1273 CL:bwa mem -R @RG\\tID:SRR9309790\\tSM:PUN-Y-INJ\\tPL:ILLUMINA -p -t 30 -M tiny/ref/M_aurantiacus_v1_splitline_ordered.fasta -\n\n\nFormat: metadata record types prefixed with @, e.g., @RG is the read group\n\n\n\nAlignments\n\n\nsamtools view bam/PUN-Y-INJ.bam | head --lines 1\n\nSRR9309790.7750070  65  LG4 1   39  45S9M1I96M  =   83782   83781   TGAACTATAGTCGATGGGACGAATACCCCCCTGAACTTGCGAAGGGGACAATTACCCCCCTCTGTTATGTTTCAGTCAATTTCATGTTTGATTTTTAGATTTTTAATTAATTATATATTTTTTGCAATTTGTAACCTCTTTAACCTTTATT AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJAJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJJFFJFJJJJJJJJJJFJJJJJJJJFJJJJJJJJJAJJJJJJJJJJJJJJJJJFA&lt;FFJJ7FF SA:Z:LG4,83018,+,30M2I28M91S,37,5;  MC:Z:12S10M2I123M4S MD:Z:16C28C59   PG:Z:MarkDuplicates RG:Z:SRR9309790 NM:i:3  MQ:i:50 AS:i:88 XS:i:70 ms:i:5185\n\n\nSome important columns: 1:QUERY, 3:REFERENCE, 4:POSITION, 5:MAPQ, 6:CIGAR. The CIGAR string compiles information on the alignment, such as match (M), soft clipping (S), and insertion to reference (I)\n\n\ncf https://samtools.github.io/hts-specs/SAMv1.pdf\n\n\nFor a complete description, see the specification. Suffice to say that the alignment format consists of a header section, with metadata and provenance data, and an alignment section, which is a column-based format with information pertaining to the query sequence being mapped and the reference sequence to which the query is mapped.",
    "crumbs": [
      "Slides",
      "Variant calling",
      "Read mapping"
    ]
  },
  {
    "objectID": "slides/variant_calling/read_mapping.html#mapped-alignments-can-be-viewed-with-samtools-tview",
    "href": "slides/variant_calling/read_mapping.html#mapped-alignments-can-be-viewed-with-samtools-tview",
    "title": "Read mapping",
    "section": "Mapped alignments can be viewed with samtools tview",
    "text": "Mapped alignments can be viewed with samtools tview\n\n\nsamtools tview -p LG4:30430 -d H -w 60 \\\n   bam/PUN-Y-INJ.bam \\\n   ref/M_aurantiacus_v1.fasta\n\n\n\nLG4:30430\n\n\n\n\n\n\nLG4:30430\n\na,,a,,,,,,,,,,,,,,,,,,,,,,,,,,,,a,,a,,,,,,,,,,,,,,,,,,,,,,,,,,,a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,a,,,,,,,,,,,,,,,,,,,,,,a,,,,,aa,a,,,,,,,,,,,,,,,,,,,,,,,,,,,a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,  ,,,,,,,,,,,,,a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n\n\n\n\n\n\nsamtools tview -p LG4:30430 -d H -w 60 \\\n   bam/PUN-R-ELF.bam \\\n   ref/M_aurantiacus_v1.fasta\n\n\n\nLG4:30430\n\n\n\n\n\n\nLG4:30430\n\n 30431     30441     30451     30461     30471              CATTGGCAATGGCATCAGTTGAGCATCTTAGTACGAACTAAAAGCTGCGAAAAAATATTT...............A............................................,,,,,,,                           .........................................A.....                  ....................................A...A....               ....................................A.........                                   ...............A...........C.............                   ,,,,,,,,,,,,,,,a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,...............A............................................,,,,,,,,,,,,,,,a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,...............A............................................,,,g,,,,,,,a,,,a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,  .............A............................................\n\n\n\n\nAka pileup format. Forward (.) and backward (,) mapping reads. Mismatches shown as letters.\n\nAfter preprocessing, reads are mapped to a reference. Observations:\n\ndifferent coverage\nsequencing error randomly distributed",
    "crumbs": [
      "Slides",
      "Variant calling",
      "Read mapping"
    ]
  },
  {
    "objectID": "slides/variant_calling/read_mapping.html#potential-error-corrections-and-pitfalls",
    "href": "slides/variant_calling/read_mapping.html#potential-error-corrections-and-pitfalls",
    "title": "Read mapping",
    "section": "Potential error corrections and pitfalls",
    "text": "Potential error corrections and pitfalls\n\n\nInstrument\n\nPCR duplication\n\nbiased PCR amplification of DNA molecules\nremove with picard MarkDuplicates or samtools rmdup\nshould not be removed for targeted sequencing\n\nsystematic errors from sequencing machine\n\nemploy Base Quality Score Recalibration (BQSR)\ncon: time consuming and inflates file size\n\n\n\nReference\n\nquality of reference sequence!\n\npoor mapping to misassembled / missing reference\n\nrepetitive sequence\n\noften collapsed in assemblies -&gt; inflates read mapping depth",
    "crumbs": [
      "Slides",
      "Variant calling",
      "Read mapping"
    ]
  },
  {
    "objectID": "slides/variant_calling/read_mapping.html#bibliography",
    "href": "slides/variant_calling/read_mapping.html#bibliography",
    "title": "Read mapping",
    "section": "Bibliography",
    "text": "Bibliography\n\n\n\n\n\n\n\n\n\n\n\n\nDonato, L., Scimone, C., Rinaldi, C., D’Angelo, R., & Sidoti, A. (2021). New evaluation methods of read mapping by 17 aligners on simulated and empirical NGS data: An updated comparison of DNA- and RNA-Seq data from Illumina and Ion Torrent technologies. Neural Computing and Applications, 33(22), 15669–15692. https://doi.org/10.1007/s00521-021-06188-z\n\n\nLi, H. (2013). Aligning sequence reads, clone sequences and assembly contigs with BWA-MEM. arXiv:1303.3997 [q-Bio]. https://arxiv.org/abs/1303.3997\n\n\nLi, H. (2018). Minimap2: Pairwise alignment for nucleotide sequences. Bioinformatics, 34(18), 3094–3100. https://doi.org/10.1093/bioinformatics/bty191",
    "crumbs": [
      "Slides",
      "Variant calling",
      "Read mapping"
    ]
  },
  {
    "objectID": "slides/foundations/diversity.html#wright-fisher-model-with-alleles",
    "href": "slides/foundations/diversity.html#wright-fisher-model-with-alleles",
    "title": "Genetic diversity",
    "section": "Wright-Fisher model with alleles",
    "text": "Wright-Fisher model with alleles\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAlleles can randomly fix or be lost through process called genetic drift\nWright-Fisher model showing the evolution of population of 10 genes over 16 generations. Allele variants are shown in white and black. Starting frequency black variant is 0.3.\n\n\n(To avoid confusion: previously black was used to indicate parent, here black/white will refer to different alleles)\nEnter allelic variants; we are looking at two alleles\nImportant: the fate of any allele under drift is to be lost or fixed, which ultimately means variation is lost (decays) with drift",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/foundations/diversity.html#binomial-process-models-allele-sampling",
    "href": "slides/foundations/diversity.html#binomial-process-models-allele-sampling",
    "title": "Genetic diversity",
    "section": "Binomial process models allele sampling",
    "text": "Binomial process models allele sampling\n\n\n\n\n\n\n\n\n\n\n\nWe assume two alleles A, a, each with i and j=2N-i copies in generation t.\n\n\n\n     \n\n\ni=8, j=2\\cdot 6-8=4\n\n\n\n\n\nLet p_t=i/2N be the frequency of A in generation t, and q_t=1-p_t the frequency of a.\n\n\n\n     \np_t = 8/12\n\n\n     \np_{t+1} = 4/12\n\n\n\n\nProb(k A alleles in next generation) is \\mathsf{Bin}(2N,\n\\frac{i}{2N})\n\n\nA more formal mathematical description goes as follows:\nThe sampling model for next generation t+1, given i A alleles in generation t, is\n\np_{t+1} = P(v_A=k) = {2N\\choose k}\\left( \\frac{i}{2N} \\right)^k\n\\left(1 - \\frac{i}{2N} \\right)^{(2N - k)} = \\mathsf{Bin}(2N, \\frac{i}{2N})\n\nNB: we here slightly change notation, with p_{t+1} = P(X=k). Also, we have omitted an index i in the expressions of p. The probability of observing k A alleles in generation t+1 will of course depend on the number i A alleles in the previous generation.",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/foundations/diversity.html#genetic-drift",
    "href": "slides/foundations/diversity.html#genetic-drift",
    "title": "Genetic diversity",
    "section": "Genetic drift",
    "text": "Genetic drift\n\n\nTo capture dynamics, follow allele frequency trajectory (p_t) as function of time.\n\n\n##' Wright Fisher model - follow allele frequency distribution\n##'\n##' @param p0 Starting frequency\n##' @param n Population size\n##' @param generations Number of generations to simulate\n##'\nwright_fisher &lt;- function(p0, n, generations) {\n    x &lt;- vector(mode = \"numeric\", length = generations)\n    x[1] &lt;- p0\n    for (i in seq(2, length(x))) {\n        x[i] &lt;- rbinom(1, size = n, prob = x[i - 1])/n\n    }\n    x\n}\n\n\n# Example simulation and plot\nset.seed(1223)\ngenerations &lt;- 100\nn &lt;- 100  # NB: haploid population size!\nplot(1:generations, wright_fisher(0.5, n, generations), type = \"l\", ylab = \"frequency\",\n    xlab = \"generation\", ylim = c(0, 1))\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 1: Genetic drift for different haploid(!) population sizes, starting frequency p_0=0.5. Note dependency of variance on population size N.\n\n\n\n\n\n\n\n\nMention neutral here as this is how alleles behave under drift: like gas particle diffusing up and down. Allele is eventually either fixed or lost.",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/foundations/diversity.html#genetic-drift-1",
    "href": "slides/foundations/diversity.html#genetic-drift-1",
    "title": "Genetic diversity",
    "section": "Genetic drift",
    "text": "Genetic drift\n\n\n\n\n\n\n\n\n\n\n\nFigure 2: Genetic drift for different combinations of starting frequency and population size for n=50 repetitions per parameter combination. Note how variation and time to fixation depends on population size and starting frequency.\n\n\n\n\n\n\n\n\nfate of allele: fixation or loss \\rightarrow eventually loss of variation\nprobability of fixation \\pi(p)=p, where p is the current frequency\nrate of drift (loss of variation) \\propto \\frac{1}{2N}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSimplifying assumptions -&gt; rate of drift \\propto \\frac{1}{N} (\\frac{1}{2N} in our treatment) (Leffler et al., 2012)\nIn reality population fluctuates and therefore Ne is substituted for N. Larger Ne -&gt; smaller fluctuation in allele frequency (as evidenced in plots) -&gt; maintain larger genetic diversity\nDrift can be thought of as a force acting on a buoyant gas particle floating up and down at random.",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/foundations/diversity.html#allele-frequency-distribution-for-n1",
    "href": "slides/foundations/diversity.html#allele-frequency-distribution-for-n1",
    "title": "Genetic diversity",
    "section": "Allele frequency distribution for N=1",
    "text": "Allele frequency distribution for N=1\nInstead of looking at frequencies let’s switch to distributions of alleles for one individual, one locus. Then there are three possible genotypes (states) aa, aA, and AA. Let n=0,1,2 be an integer corresponding to each genotype (i.e., it counts the number of A alleles).\nAssume individual mates with itself at random(!) starting in either of the three states. How does distribution evolve?\n\n\nt=0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nt=1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nt=2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample from (Gillespie, 2004, p. 24). We look at a single hermaphroditic individual that mates with itself at random. For each generation, given a genotype distribution, we calculate the outcome for the next generation. For instance, starting out in state 0 (only aa genotypes, hence only a alleles), we can only produce new aa genotypes and will therefore never leave state 0. The same holds for state 2. These states are absorbing states.\nStarting from state 1 (aA) we can get aa genotype with 25% probability, since the probability of picking one a is 50%, and we perform two draws. Similarly, we get AA with 25% probability, leaving 50% to aA.\nIn the next generation, the aA genotype frequency is 0.5, to be split in fractions 0.25, 0.5, 0.25 as before, and so on.\nTo study the system we therefore need to enumerate the probabilistic outcomes from each state (aa -&gt; 1, 0, 0, aA -&gt; 0.25, 0.5, 0.25, AA &lt;- 0, 0, 1). To get the state in next generation, we multiply the current distribution with these outcomes. The next slide gives Kimura’s example for the case where we have N=10 chromosomes.",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/foundations/diversity.html#probability-distributions-of-allele-frequencies",
    "href": "slides/foundations/diversity.html#probability-distributions-of-allele-frequencies",
    "title": "Genetic diversity",
    "section": "Probability distributions of allele frequencies",
    "text": "Probability distributions of allele frequencies\n\n\n\n\n\n\n\n\n\n\nFigure 3: Histogram showing the course of change of the allele frequency distribution with time (Kimura, 1983, Figure 3.4). When N large (\\gtrsim 100) histogram can be approximated by continuous distribution (diffusion theory). Try recipe  for different values of N.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 4: Frequency distributions of the brown eye (bw^{75}) allele in replicate experimental populations (n\\sim 100) of Drosophila melanogaster (8 , 8 ) (Buri, 1956)\n\n\n\n\n\n\n\nMathematical treatment of drift can become complicated: easier to study dynamics of heterozygosity\n\n\nKimura’s plot illustrates the allelic frequency distribution of replicate populations each consisting of N=10 sequences. There are two allelic types. The x axis corresponds to the proportion of populations in a given state (e.g., the y value for x=3/10 corresponds to the proportion of populations with 3 alleles of one type and 7 of the other). At t=0 all populations are in state 5/10.\nKimura’s plot is very instructive and students are encouraged to test the recipe code, increasing the number of states incrementally. For large enough N, the histograms can be approximated by continuous distributions. This observation led Kimura (even though diffusion equations were originally introduced to genetics by Fisher in 1922) to apply diffusion theory to obtain probability densities of allele frequencies, leading in turn to compact expressions of fixation probabilities, expected ages of alleles, and more. A treatment of diffusion theory is outside the scope of this course; the interested reader can consult e.g., (Ewens, 2004).\nThe Buri experiment is an empirical demonstration of Kimura’s plot.\nOn the sampling model, (Charlesworth & Charlesworth, 2010, p. 231) says:\n\nIt is, however, impossible to write down a simple algebraic expression for P, even without selection and mutation. [The equation] is useful for obtaining numerical results for relatively small populations, but becomes computationally demanding when N becomes very large.",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/foundations/diversity.html#heterozygosity-dynamics",
    "href": "slides/foundations/diversity.html#heterozygosity-dynamics",
    "title": "Genetic diversity",
    "section": "Heterozygosity dynamics",
    "text": "Heterozygosity dynamics\n\n\n\n\n\n\n\n\n\n\nFigure 5: Illustration of identity by descent (IBD) and state (IBS). Alleles in generation n are IBD but not IBS.\n\n\n\n\n\n\nLet \\mathcal{H}_t be the probability that two alleles are different by state. One can show that the time course evolution of \\mathcal{H}_t in a randomly mating population consisting of N diploid hermaphroditic individuals is\n\n\\mathcal{H}_t = \\mathcal{H}_0 \\left( 1 - \\frac{1}{2N} \\right)^t\n\nImportant consequence: heterozygosity in WF population lost at rate 1/2N.\n\n\nAlleles in generation n are IDB but not IBS\nMotivation: mathematical description of genetic drift complicated for populations with more than one individual. Easier to study the evolution of heterozygosity.\nEquation presented without details. Derivation in (Gillespie, 2004, pp. 25–27) starts from G=probability that two alleles are IBS",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/foundations/diversity.html#heterozygosity-dynamics-1",
    "href": "slides/foundations/diversity.html#heterozygosity-dynamics-1",
    "title": "Genetic diversity",
    "section": "Heterozygosity dynamics",
    "text": "Heterozygosity dynamics\n\n\n\n\n\n\n\n\n\n\nFigure 6: Plot of \\mathcal{H}_t illustrating dependency on population size\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 7: Heterozygosity in black-footed ferret (Wisely et al., 2002). Example from Graham Coop (2020), Fig. 4.5\n\n\n\n\n\n\n\nExample of how rapid decline in population size can affect heterozygosity.\n\nPopulation size influences genetic diversity!\n\n\nHowever, census population size not (always) the correct measure.\n\n\n\n\n\nDependency on population size: for large enough populations the decline will be very slow (drift speed ~ 1/2N)\nPractical example shows loss of heterozygosity tell-tale signature of population decline; conversely, not easy to show population decline in large populations (e.g., marine species with large N_e) using heterozygosity as measure\n(Barton et al., 2007, p. 369) “The relation between genetic diversity and population size is difficult to discern, in part, because it is extremely hard to estimate the numbers of most species and because the number that matters is an average back into the distant past”(!)\nFrom (Graham Coop, 2020, p. 64)\n\nTo see how a decline in population size can affect levels of het- erozygosity, let’s consider the case of black-footed ferrets (Mustela nigripes). The black-footed ferret population has declined dramatically through the twentieth century due to destruction of their habitat and sylvatic plague. In 1979, when the last known black-footed ferret died in captivity, they were thought to be extinct. In 1981, a very small wild population was rediscovered (40 individuals), but in 1985 this population suffered a number of disease outbreaks. At that point of the 18 remaining wild individuals were brought into captivity, 7 of which reproduced. Thanks to intense captive breeding efforts and conservation work, a wild population of over 300 individuals has been established since. However, because all of these individuals are descended from those 7 individuals who survived the bottleneck, diversity levels remain low. Wisely et al. measured heterozygosity at a number of microsatellites in individuals from museum collections, showing the sharp drop in diversity as population sizes crashed (see Figure 4.5).\n\nSegue: population size important; however, census population size is not always the measure we want when relating to genetic diversity",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/foundations/diversity.html#effective-population-size",
    "href": "slides/foundations/diversity.html#effective-population-size",
    "title": "Genetic diversity",
    "section": "Effective population size",
    "text": "Effective population size\nAssumptions underlying Wright-Fisher model seldom fulfilled for natural populations. In particular\n\nnon-random mating (population structure)\nfluctuations of population census size\n\nTherefore, magnitude of drift experienced by a population different from that predicted by population size\nTechnically correct definition (but see Waples (2022), Waples (2025)):\n\nN_e is the size of an ideal population that would experience the same rate of genetic drift as the population in question.\n\n\nideal population: discrete generations with random mating, no evolutionary forces besides drift, no selective advantages",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/foundations/diversity.html#mutation",
    "href": "slides/foundations/diversity.html#mutation",
    "title": "Genetic diversity",
    "section": "Mutation",
    "text": "Mutation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTwo-allele\n\nDerive popgen stats\n\nFinite sites\n\nRecurrent mutations\n\nInfinite alleles\n\nProtein electrophoresis\n\nInifinite sites\n\nDNA sequences\n\n\n\n\n\nMutations are generated randomly as changes in DNA. In WF model will be highlighted in black. We assume mutations are described by a Poisson process with rate \\mu (per generation).\nThe mutation models are:\n\ntwo-allele model: used to derive popgen statistics\nfinite sites model: recurrent mutations may occur, an assumption that is often omitted to facilitate calculations (e.g., coalescent)\ninifinite alleles model: every mutation leads to new allele (e.g., protein electrophoresis)\ninfinite sites model: model commonly used for long DNA sequences\n\nAdditional model not presented here is the stepwise mutation model (mainly used to model repeats):",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/foundations/diversity.html#mutation-and-drift",
    "href": "slides/foundations/diversity.html#mutation-and-drift",
    "title": "Genetic diversity",
    "section": "Mutation and drift",
    "text": "Mutation and drift\n\n\nGenetic drift “moves” frequencies to the point that variation is lost via allele fixation or loss. New variation is introduced through mutation. We typically assume mutations are described by a Poisson process with rate \\mu (per generation).\n\nThe mutation rate is denoted \\mu, and the population scaled mutation rate is 2N_e\\mu for haploid populations, 4N_e\\mu for diploid, where N_e is the effective population size.\n\n\nThe mutation - drift balance is when the diversity lost due to drift equals the diversity gained due to mutation.\n\n\n\n\n\n\n\n\n\n\n\nFigure 8: Variation is introduced by mutations (black) at rate \\mu=1e^{-4} and is occasionally lost through genetic drift.\n\n\n\n\n\n\n\n\nSegue: so if drift removes variation, what introduces it? Mutation!\nNote that the mutation rate in the WF model is not meaningful; the value is simply chosen such that enough mutations show up in plot.",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/foundations/diversity.html#tracing-the-evolution-of-mutations",
    "href": "slides/foundations/diversity.html#tracing-the-evolution-of-mutations",
    "title": "Genetic diversity",
    "section": "Tracing the evolution of mutations",
    "text": "Tracing the evolution of mutations\n\n\n\n\n\n\n\n\n\n\nFigure 9: Different mutations suffer different fates. Most mutations are lost in a couple of generations. Mutant alleles are colored black and their genealogies are highlighted with thicker edges.\n\n\n\n\n\n\n\nObservation: most mutations are in fact lost\n\n\nRecall: fixation probability \\pi(p)=p\n\n\n\nDifference to previous figure: here we highlight the genealogies",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/foundations/diversity.html#mutation-drift-balance",
    "href": "slides/foundations/diversity.html#mutation-drift-balance",
    "title": "Genetic diversity",
    "section": "Mutation drift balance",
    "text": "Mutation drift balance\nDrift removes variation. Mutation reintroduces it. At equilibrium the change in variation by definition is 0. In terms of \\mathcal{H}_t (the probability that two alleles are not identical by state), \\Delta\\mathcal{H}=0.\nOne can show1 the classical formula that the equilibrium heterozygosity value is\n\n\\hat{\\mathcal{H}} = \\frac{4N_e\\mu}{1 + 4N_e\\mu}\n\n\n\\mu is often assumed known, and heterozygosity is easily calculated from data, which provides a way of estimating N_e.\n\n\nThe compound parameter 4N_e\\mu is called the population scaled mutation rate and is commonly named \\theta such that\n\n\\hat{\\mathcal{H}} = \\frac{\\theta}{1 + \\theta}\n\n\n\nGillespie (2004), pp. 30–31 uses a difference equation approach to derive \\mathcal{H}. Briefly, he studies the time evolution of \\mathcal{G}, the probability that two alleles drawn at random without replacement from the population are identical by state. Mutations are assumed unique, i.e., the infinite-alleles model. It holds\n\n\\mathcal{G}^\\prime = (1-\\mu)^2\\left[ \\frac{1}{2N} +\n\\left( 1 - \\frac{1}{2N} \\right) \\mathcal{G} \\right]\n\nwhere (1-\\mu)^2 is the probability that no mutation occur in either of the two sampled alleles. Since \\mu is small, (1-\\mu)^2 \\approx\n1-2\\mu, which after some manipulation gives the desired expression for \\mathcal{H} = 1 - \\mathcal{G}.\nOn pages 46–47, he shows that the expression for can be derived in a much simpler fashion using coalescent theory. Tracing two lineages backwards in time, the probability of coalescence is 1/2N, whereas the probability of a mutation is 1-(1-\\mu)^2\\approx 2\\mu; \\mathcal{H} is then simply the relative probability of the two events\n\n\\mathcal{H} = \\frac{2\\mu}{2\\mu + 1/2N} = \\frac{4N\\mu}{4N\\mu + 1}\n\n\nsee (Gillespie, 2004, p. 29 – 31) for a concise treatement",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/foundations/diversity.html#the-neutral-theory-of-evolution",
    "href": "slides/foundations/diversity.html#the-neutral-theory-of-evolution",
    "title": "Genetic diversity",
    "section": "The neutral theory of evolution",
    "text": "The neutral theory of evolution\n\n\nMutation drift balance, together with the observation during 50’s-60’s that polymorphism was more common than expected, is the foundation of the neutral theory of evolution (Kimura, 1983): allele frequencies may change and fix due to chance alone and not selection; most mutations behave as if they are neutral.\n\nNearly neutral theory (Ohta, 1973) was later developed to explain failure to predict scaling of polymorphism with population size: most mutations are not neutral but slightly deleterious and purged from population by natural selection.\n\n\n\n\n\n\n\n\n\n\nFigure 10: Heterozygosity H=\\frac{\\theta}{1 + \\theta} predicted by the neutral theory. Shaded region shows typical heterozygosities in animals (y-axis). The observed N_e\\mu range is higher than predicted from plot. From Hurst (2009), Fig 1.\n\n\n\n\n\n\n\nRelated to rate of substitution and molecular evolution is the work of Kimura that lead to the development of the neutral theory.\nMotivation: if polymorphic sites deleterious, should not expect much polymorphism.\nLow levels of polymorphism expected assuming little balancing selection (Hurst, 2009, p. 87); however electrophoretic studies showed polymorphism common. Would lead to detrimental load (Kimura & Ohta, 1971) -&gt; therefore majority of polymorphism must evolve neutrally (dynamics). Also: rate of evolution (on protein level) too high (Haldane’s dilemma)\nOn the shaded region: the observed range of N_e\\mu is larger than that which is predicted by the plot, and since \\mu is constrained within a couple of orders of magnitude, N_e must vary more than predicted by the (strictly) neutral theory.\nConversely: given a constrained \\mu, we observe a range of N_e\\mu that predicts a heterozygosity range H, which is much larger than that which we observe. In other words, the heterozygosity range is much lower than predicted by the neutral, given the observed N_e\\mu range, so some other process must reduce variation somehow.\nThe general idea of nearly neutral theory is that most mutations are slightly deleterious and therefore purged by natural selection, thereby reducing observed variation. The efficacy of purging depends in turn on the effective population size, such that species with small N_e will have a harder time getting rid of potentially damaging variants.",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/foundations/diversity.html#mutation-rate-can-be-estimated-from-substitution-rate",
    "href": "slides/foundations/diversity.html#mutation-rate-can-be-estimated-from-substitution-rate",
    "title": "Genetic diversity",
    "section": "Mutation rate can be estimated from substitution rate",
    "text": "Mutation rate can be estimated from substitution rate\nMutation enters populations and may be fixed by drift. Therefore, with time there will be fixed differences, or substitions (typically in the evolution of species) between populations, or species. In molecular evolution, the substition rate, \\rho, is the most interesting quantity.\n\nThe total number of new mutations in every generation is 2N\\mu (total number of gametes times mutation rate)\n\n\nNew mutations fix at a rate 1/2N\n\n\nTherefore, the average rate of substitution, \\rho, is 2N\\mu\\times1/2N, or\n\n\\rho=\\mu\n\nwhich is independent of population size!\n\n\nPractical implication: we can estimate mutation rate from the substitution rate at neutrally evolving sites (e.g., Kumar & Subramanian (2002))\n\n\nWhat happens when sufficient amount of time passes? Mutations fix and generate substitutions between species. This slide presents Kimura’s remarkable result regarding mutation rate and substitution rate!\nOn 2N\\mu: the larger the population, the larger the number of mutations that can fix\nIf 4N\\mu&gt;&gt;0 no new mutations can fix. Issue here is there is no explicit mention of DNA sequence -&gt; introduction of infinite sites model\nFor practical note on estimation of mutation rate see e.g., (Hubisz & Siepel, 2020, p. 247)\n(Kumar & Subramanian, 2002, first paragraph):\n\nRates of point mutation can be determined indirectly by estimating the rate at which the neutral substitutions accumulate in protein-coding genes",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/foundations/diversity.html#bibliography",
    "href": "slides/foundations/diversity.html#bibliography",
    "title": "Genetic diversity",
    "section": "Bibliography",
    "text": "Bibliography\n\n\nBarton, N. H., Briggs, D. E. G., Eisen, J. A., Goldstein, D. B., & Patel, N. H. (2007). Evolution. Cold Spring Harbor Laboratory Press.\n\n\nBuri, P. (1956). Gene Frequency in Small Populations of Mutant Drosophila. Evolution, 10(4), 367–402. https://doi.org/10.1111/j.1558-5646.1956.tb02864.x\n\n\nCharlesworth, B., & Charlesworth, D. (2010). Elements of Evolutionary Genetics. Roberts and Company Publishers.\n\n\nEwens, W. J. (2004). Mathematical Population Genetics (S. S. Antman, J. E. Marsden, L. Sirovich, & S. Wiggins, Eds.; Vol. 27). Springer. https://doi.org/10.1007/978-0-387-21822-9\n\n\nGillespie, J. H. (2004). Population Genetics: A Concise Guide (2nd edition). Johns Hopkins University Press.\n\n\nGraham Coop. (2020). Notes on Population Genetics. https://github.com/cooplab/popgen-notes\n\n\nHubisz, M., & Siepel, A. (2020). Inference of Ancestral Recombination Graphs Using ARGweaver. In J. Y. Dutheil (Ed.), Statistical Population Genomics (pp. 231–266). Springer US. https://doi.org/10.1007/978-1-0716-0199-0_10\n\n\nHurst, L. D. (2009). Genetics and the understanding of selection. Nature Reviews Genetics, 10(2), 83–93. https://doi.org/10.1038/nrg2506\n\n\nKimura, M. (1983). The neutral theory of molecular evolution. Cambridge University Press. https://doi.org/10.1017/CBO9780511623486\n\n\nKimura, M., & Ohta, T. (1971). Protein Polymorphism as a Phase of Molecular Evolution. Nature, 229(5285), 467–469. https://doi.org/10.1038/229467a0\n\n\nKumar, S., & Subramanian, S. (2002). Mutation rates in mammalian genomes. Proceedings of the National Academy of Sciences, 99(2), 803–808. https://doi.org/10.1073/pnas.022629899\n\n\nLeffler, E. M., Bullaughey, K., Matute, D. R., Meyer, W. K., Ségurel, L., Venkat, A., Andolfatto, P., & Przeworski, M. (2012). Revisiting an Old Riddle: What Determines Genetic Diversity Levels within Species? PLOS Biology, 10(9), e1001388. https://doi.org/10.1371/journal.pbio.1001388\n\n\nOhta, T. (1973). Slightly Deleterious Mutant Substitutions in Evolution. Nature, 246(5428), 96. https://doi.org/10.1038/246096a0\n\n\nWaples, R. S. (2022). What Is Ne, Anyway? Journal of Heredity, 113(4), 371–379. https://doi.org/10.1093/jhered/esac023\n\n\nWaples, R. S. (2025). The Idiot’s Guide to Effective Population Size. Molecular Ecology, e17670. https://doi.org/10.1111/mec.17670\n\n\nWisely, S. M., Buskirk, S. W., Fleming, M. A., McDonald, D. B., & Ostrander, E. A. (2002). Genetic Diversity and Fitness in Black-Footed Ferrets Before and During a Bottleneck. Journal of Heredity, 93(4), 231–237. https://doi.org/10.1093/jhered/93.4.231",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/foundations/linkage.html#a-first-look-at-haplotype-structure",
    "href": "slides/foundations/linkage.html#a-first-look-at-haplotype-structure",
    "title": "Linkage disequilibrium",
    "section": "A first look at haplotype structure",
    "text": "A first look at haplotype structure\n\n\n\n\n\n\n\n\n\n\nFigure 1: Shared haplotypes in the Drosophila ADH gene (Kreitman, 1983)\n\n\n\n\n\n\n\nObservations\n\nParticular combinations of alleles at different SNPs occur together\nNon-random assortment of alleles is called linkage disequilibrium (LD)\n\nNote: detecting LD does not ensure linkage or lack of equilibrium\n\nUnfortunate term: barrier to understanding (Slatkin, 2008)\n\n\nGoing forward: discuss how linkage generates LD and recombination breaks it down",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Linkage disequilibrium"
    ]
  },
  {
    "objectID": "slides/foundations/linkage.html#linkage-generates-haplotype-structure",
    "href": "slides/foundations/linkage.html#linkage-generates-haplotype-structure",
    "title": "Linkage disequilibrium",
    "section": "Linkage generates haplotype structure",
    "text": "Linkage generates haplotype structure\n\n\n\n\n\n\n\n\n\n\nFigure 2: A simple genealogy with mutations mapped onto branches\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 3: Individual haplotypes and their mutations.\n\n\n\n\n\n\n\n\nMutations 1, 2 on same branch \\Rightarrow appear together\nMutations 1, 5 on derived branches \\Rightarrow usually appear together\n\n\n\nKey assumption in genealogies: infinite sites model; a mutation happens once and once only at a given site",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Linkage disequilibrium"
    ]
  },
  {
    "objectID": "slides/foundations/linkage.html#linkage-disequilibrium-in-the-absence-of-recombination",
    "href": "slides/foundations/linkage.html#linkage-disequilibrium-in-the-absence-of-recombination",
    "title": "Linkage disequilibrium",
    "section": "Linkage disequilibrium in the absence of recombination",
    "text": "Linkage disequilibrium in the absence of recombination\n\n\n\n\n\n\n\n\n\nFigure 4: In the absence of recombination we can observe 2 or 3 possible haplotypes out of 4. Here AB is the ancestral haplotype.\n\n\n\n\n\n\n\n\nwe assume no homoplasy (back mutations)\nhaplotypes consistent with single tree (without recombination) form perfect phylogeny\n\n\n\nNote the implicit assumption of the infinite sites model, that is, we are only allowed to place each mutation once on the tree.",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Linkage disequilibrium"
    ]
  },
  {
    "objectID": "slides/foundations/linkage.html#recombination-breaks-association-between-loci",
    "href": "slides/foundations/linkage.html#recombination-breaks-association-between-loci",
    "title": "Linkage disequilibrium",
    "section": "Recombination breaks association between loci",
    "text": "Recombination breaks association between loci\n\n\n\n\n\n\n\n\n\n\nMiller (2020), Fig. 5.12.3\n\nOne (at least) crossover in meiosis I per chromosome! But: rates vary between loci (hotspots), sex chromosomes vs autosomes, and in some species, recombination only occurs in one sex (e.g., D.melanogaster).\n\nGenetic distance and recombination rate\n\n\n\n\n\n\n\n\n\n\n\nd - physical distance in bp\nDefiniton: genetic distance between two points is x centiMorgans(cM) if the average number of crossovers between points x/100 per meiosis\nFor short distances, genetic distance in cM \\approx \\mathrm{Pr}(\\text{crossover})\nDefinition: recombination rate r relates genetic distance to base pair distance; commonly measured in cM/Mb\nExample: in human average is 1.2 cM per Mb - the probability of crossover is a 1.2%\n\n\nThe mechanism that breaks up association between loci is recombination. Cartoon to right shows the possible (haploid) outcomes of meiosis. r (the recombination rate) denotes the probability that there is a recombination event between the two loci.\nThe farther apart two loci on the same chromosome, the larger the probability that a recombination event occurs between them. Note that this can be applied to loci on different chromosomes as well; they segregate independently.",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Linkage disequilibrium"
    ]
  },
  {
    "objectID": "slides/foundations/linkage.html#recombination-generates-new-combinations-of-alleles",
    "href": "slides/foundations/linkage.html#recombination-generates-new-combinations-of-alleles",
    "title": "Linkage disequilibrium",
    "section": "Recombination generates new combinations of alleles",
    "text": "Recombination generates new combinations of alleles\n\n\n\n\n\n\n\n\n\n\nFigure 5: Recombination mixes haplotypes\n\n\n\n\n\n\nRules of thumb (human)\n\nFor close SNPs (less than ~0.01-0.1 cM, or ~10-100Kb) linkage is stronger force than recombination\nAt larger (&gt;0.1cM) recombination is stronger",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Linkage disequilibrium"
    ]
  },
  {
    "objectID": "slides/foundations/linkage.html#measuring-ld",
    "href": "slides/foundations/linkage.html#measuring-ld",
    "title": "Linkage disequilibrium",
    "section": "Measuring LD",
    "text": "Measuring LD\n\n\n\n\n\n\n\n\n\n\n\nFigure 6: Allele and haplotype frequencies at two SNPs. p denotes a frequency.\n\n\n\n\n\n\n\nGiven only information about SNP allele frequencies p_A and p_B, what would guess be for p_{AB}?\n\n\nIf independent, then p_{AB} = p_Ap_B, else p_{AB} \\neq p_Ap_B. We measure the deviation D\n\nD = p_{AB} - p_Ap_B\n\nand say that there is linkage equilibrium if D=0!\n\n\n\nAlternative measures\nUnfortunate property of D: its magnitude depends on allele frequencies!\n\n\n\n\\begin{align*}\nD^\\prime = \\frac{D}{D_\\mathrm{max}} &\n    = \\frac{D}{\\min(p_Ap_b,p_ap_B)}, \\quad\\mathrm{for\\  }D&gt;0\\\\\n    & = \\frac{D}{\\min(p_Ap_B,p_ap_b)}, \\quad\\mathrm{for\\ }D&lt;0\n\\end{align*}\n\n|D^\\prime| &lt; 1 implies there must have been recombination\n\n\n\nr^2 = \\frac{D^2}{p_Ap_ap_Bp_b}\n\n\nr^2=1 perfect LD\nr^2 natural parameter for measuring contribution of LD to genetic associations\n\n\n\n\nAlternatively put:\n\n\\max{|D|} = \\min(p(1-q), (1-p)q)\n\nBetter use R^2 or D^\\prime\nSquare of correlation coefficient between alleles at two loci:\n\nR^2 = \\frac{D^2}{pq(1-p)(1-q)}\n\nToy example to show how mixing subpopulations can introduce linkage: assume two subpopulations fixed for AB and ab. Then for either population D=p_{AB} - p_Ap_B=1-1=0. Mixing the populations leads to p_{AB}=p_{ab}=p_A=p_A=0.5, so D=0.5-0.5^2=0.25, D_{max}=\\min(p_Ap_B, p_ap_b)=0.25 and D^\\prime=1.",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Linkage disequilibrium"
    ]
  },
  {
    "objectID": "slides/foundations/linkage.html#ld-decay",
    "href": "slides/foundations/linkage.html#ld-decay",
    "title": "Linkage disequilibrium",
    "section": "LD decay",
    "text": "LD decay\n\n\n\n\n\n\n\n\n\n\nFigure 7: Decay of LD over time due to recombination, starting from D_0.\n\n\n\n\n\n\nObservation\nEven for free recombination (r=0.5) LD decay takes time. Comparison: HWE which takes one generation.\n\n\n\n\n\n\n\n\n\n\nFigure 8: LD between pairs of autosomal SNPs for human and mouse. From (Laurie et al., 2007, Figure 2)",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Linkage disequilibrium"
    ]
  },
  {
    "objectID": "slides/foundations/linkage.html#ld-importance-and-applications",
    "href": "slides/foundations/linkage.html#ld-importance-and-applications",
    "title": "Linkage disequilibrium",
    "section": "LD importance and applications",
    "text": "LD importance and applications\n\n\nImportance\n\ninformation about past events\nconstrains potential response to natural and artificial selection\ngenome-wide LD is reflection of\n\npopulation history\nbreeding system\npattern of geographic subdivision\n\nregional LD reflection of\n\nnatural selection\ngene conversion\nmutation and more\n\n\nDue to lack of data LD didn’t become important until the end of the 70’s\n\nApplications\nMutation and gene mapping\nMost loci are in close linkage with a variable site which can be used as a marker to study the inheritance of a trait of interest.\nLinked selection\nReduced variation close to a site under selection due to linkage\nEstimating allele age\nStrong LD in large region indication of young allele.\nDetermining window size for genome scans\nIdeal window size ~ distance at which LD between markers approaches background levels\n\n(Slatkin, 2008)",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Linkage disequilibrium"
    ]
  },
  {
    "objectID": "slides/foundations/linkage.html#bibliography",
    "href": "slides/foundations/linkage.html#bibliography",
    "title": "Linkage disequilibrium",
    "section": "Bibliography",
    "text": "Bibliography\n\n\n\n\n\n\n\n\n\n\n\n\nKreitman, M. (1983). Nucleotide polymorphism at the alcohol dehydrogenase locus of Drosophila melanogaster. Nature, 304(5925), 412. https://doi.org/10.1038/304412a0\n\n\nLaurie, C. C., Nickerson, D. A., Anderson, A. D., Weir, B. S., Livingston, R. J., Dean, M. D., Smith, K. L., Schadt, E. E., & Nachman, M. W. (2007). Linkage Disequilibrium in Wild Mice. PLOS Genetics, 3(8), e144. https://doi.org/10.1371/journal.pgen.0030144\n\n\nMiller, C. (2020). Human Biology. Thompson Rivers University.\n\n\nPritchard, J. K. (n.d.). An Owner’s Guide to the Human Genome. Retrieved August 18, 2025, from https://web.stanford.edu/group/pritchardlab/HGbook.html\n\n\nSlatkin, M. (2008). Linkage disequilibrium — understanding the evolutionary past and mapping the medical future. Nature Reviews Genetics, 9(6), 477–485. https://doi.org/10.1038/nrg2361",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Linkage disequilibrium"
    ]
  },
  {
    "objectID": "slides/foundations/data.html#dna-variation",
    "href": "slides/foundations/data.html#dna-variation",
    "title": "Data and definitions",
    "section": "DNA variation",
    "text": "DNA variation\n\n\n\nGoal of section: look at the data that forms the foundation for population genomic analyses\nFrom (Nei & Kumar, 2000, p. 231):\n\nThe main subject of population genetics is to study the generation and maintenance of genetic polymorphism and to understand the mechanisms of evolution at the population level\n\n(Casillas & Barbadilla, 2017, p. 1026):\n\nBig data samples of complete genome sequences of many individuals from natural populations of many species have transformed population genetics inferences on samples of loci to population genomics: the analysis of genome-wide patterns of DNA variation within and between species.\n\n(Gillespie, 2004, p. 1)\n\nPopulation geneticists spend most of their time doing one of two things: describing the genetic structure of populations or theorizing on the evolutionary forces acting on populations. On a good day, these two activities mesh and true insights emerge.",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Data and definitions"
    ]
  },
  {
    "objectID": "slides/foundations/data.html#dna-variation---monomorphic-sites",
    "href": "slides/foundations/data.html#dna-variation---monomorphic-sites",
    "title": "Data and definitions",
    "section": "DNA variation - monomorphic sites",
    "text": "DNA variation - monomorphic sites\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n\nT\nT\nA\nC\nA\nA\nT\nC\nC\nG\nA\nT\nC\nG\nT\n\n\nT\nT\nA\nC\nG\nA\nT\nG\nC\nG\nC\nT\nC\nG\nT\n\n\nT\nC\nA\nC\nA\nA\nT\nG\nC\nG\nA\nT\nG\nG\nA\n\n\nT\nT\nA\nC\nG\nA\nT\nG\nC\nG\nC\nT\nC\nG\nT\n\n\n*\n\n*\n*\n\n*\n*\n\n*\n*\n\n*\n\n*\nT\n\n\n\n\nThe alignment has 4 DNA sequences where each sequence has length L=15. A site where all nucleotides (alleles) are identical is called a monomorphic site (indicated with asterisks above). There are 9 monomorphic sites.",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Data and definitions"
    ]
  },
  {
    "objectID": "slides/foundations/data.html#dna-variation---segregating-sites",
    "href": "slides/foundations/data.html#dna-variation---segregating-sites",
    "title": "Data and definitions",
    "section": "DNA variation - segregating sites",
    "text": "DNA variation - segregating sites\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n\nT\nT\nA\nC\nA\nA\nT\nC\nC\nG\nA\nT\nC\nG\nT\n\n\nT\nT\nA\nC\nG\nA\nT\nG\nC\nG\nC\nT\nC\nG\nT\n\n\nT\nC\nA\nC\nA\nA\nT\nG\nC\nG\nA\nT\nG\nG\nA\n\n\nT\nT\nA\nC\nG\nA\nT\nG\nC\nG\nC\nT\nC\nG\nT\n\n\n\n*\n\n\n*\n\n\n*\n\n\n*\n\n*\n\n*\n\n\n\n\nA site where there are different nucleotides (alleles) is called a segregating site (indicated with asterisks above), often denoted S. There are S=6 segregating sites.\n\n\n\nAlternative names for segregating site are:\n\n\npolymorphism\nmutation\nsingle nucleotide polymorphism (SNP)\n\n\n\nmutation here and onwards refers to the process that generates new variation and the new variants generated by this process\nIn contrast to mutation which corresponds to within-species variation, a substitution refers to DNA differences between species.",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Data and definitions"
    ]
  },
  {
    "objectID": "slides/foundations/data.html#dna-variation---major-and-minor-alleles",
    "href": "slides/foundations/data.html#dna-variation---major-and-minor-alleles",
    "title": "Data and definitions",
    "section": "DNA variation - major and minor alleles",
    "text": "DNA variation - major and minor alleles\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n\nT\nT\nA\nC\nA\nA\nT\nC\nC\nG\nA\nT\nC\nG\nT\n\n\nT\nT\nA\nC\nG\nA\nT\nG\nC\nG\nC\nT\nC\nG\nT\n\n\nT\nC\nA\nC\nA\nA\nT\nG\nC\nG\nA\nT\nG\nG\nA\n\n\nT\nT\nA\nC\nG\nA\nT\nG\nC\nG\nC\nT\nC\nG\nT\n\n\n\n*\n\n\n*\n\n\n*\n\n\n*\n\n*\n\n*\n\n\n\n\nMuch of the nucleotide variation we study consists of bi-allelic SNPs. The most common variant is called the major allele, and the least common the minor allele.\nThe set of alleles found on a single sequence is called haplotype.",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Data and definitions"
    ]
  },
  {
    "objectID": "slides/foundations/data.html#describing-dna-variation---heterozygosity",
    "href": "slides/foundations/data.html#describing-dna-variation---heterozygosity",
    "title": "Data and definitions",
    "section": "Describing DNA variation - heterozygosity",
    "text": "Describing DNA variation - heterozygosity\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n\nT\nT\nA\nC\nA\nA\nT\nC\nC\nG\nA\nT\nC\nG\nT\n\n\nT\nT\nA\nC\nG\nA\nT\nG\nC\nG\nC\nT\nC\nG\nT\n\n\nT\nC\nA\nC\nA\nA\nT\nG\nC\nG\nA\nT\nG\nG\nA\n\n\nT\nT\nA\nC\nG\nA\nT\nG\nC\nG\nC\nT\nC\nG\nT\n\n\n\n*\n\n\n*\n\n\n*\n\n\n*\n\n*\n\n*\n\n\n\n\nOnce we have a sample of sequences we want to describe the observed variation. At any position the ith allele has sample frequency p_i, where the sum of all allele frequencies is 1. For instance, at site 1, p_T=1 (and by extension p_A=p_C=p_G=0), and at site 2 p_C=1/4 and p_T=3/4.\n\n\n\n\nHeterozygosity\n\nThe heterozygosity at a site j is given by\n\nh_j = \\frac{n}{n-1}\\left(1 - \\sum_i p_i^2\\right)\n\nwhere the summation is over all alleles and p_i is the frequency of the i-th allele\n\n\n\n\nExercise: calculate the heterozygosity at sites 1, 2 and 5\n\n\n\n\n\n\\begin{align*}\nh_1 & = \\frac{4}{3} \\left(1 - p_T^2 \\right) = 0 \\\\[10pt]\nh_2 & = \\frac{4}{3} \\left(1 - \\left(p_C^2 + p_T^2\\right) \\right) = \\frac{4}{3} \\left( 1 - \\left(\\frac{1}{16} + \\frac{9}{16}\\right)\\right) = \\frac{1}{2}\\\\[10pt]\nh_5 & = \\frac{4}{3} \\left(1 - \\left(p_A^2 + p_G^2\\right) \\right) = \\frac{4}{3} \\left( 1 - \\left(\\frac{1}{4} + \\frac{1}{4}\\right)\\right) = \\frac{2}{3}\n\\end{align*}\n\n\n\n\n\nIn a randomly mating population, the heterozygosity is equal to the frequency of heterozygotes. Note however that the definition of heterozygosity only relies on allele frequencies, which means it can be applied to populations that are not in Hardy-Weinberg equilibrium, or to more general variation, such as protein isoforms. It can also be applied to haploid organisms, like bacteria.",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Data and definitions"
    ]
  },
  {
    "objectID": "slides/foundations/data.html#describing-dna-variation---nucleotide-diversity",
    "href": "slides/foundations/data.html#describing-dna-variation---nucleotide-diversity",
    "title": "Data and definitions",
    "section": "Describing DNA variation - nucleotide diversity",
    "text": "Describing DNA variation - nucleotide diversity\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n\nT\nT\nA\nC\nA\nA\nT\nC\nC\nG\nA\nT\nC\nG\nT\n\n\nT\nT\nA\nC\nG\nA\nT\nG\nC\nG\nC\nT\nC\nG\nT\n\n\nT\nC\nA\nC\nA\nA\nT\nG\nC\nG\nA\nT\nG\nG\nA\n\n\nT\nT\nA\nC\nG\nA\nT\nG\nC\nG\nC\nT\nC\nG\nT\n\n\n\n*\n\n\n*\n\n\n*\n\n\n*\n\n*\n\n*\n\n\n\n\n\n\n\n\nNucleotide diversity \\pi\n\nThe nucleotide diversity is the sum of site heterozygosities:\n\n\\pi = \\sum_{j=1}^S h_j\n\nwhere S is the number of segregating sites\n\n\n\n\nCalculate the nucleotide diversity\n\n\n\nObservation: h_i either 1/2 or 2/3 (for sites with p_{major}=p_{minor}).\n\n\n\n\n\\pi = \\frac{1}{2} + \\frac{2}{3} + \\frac{1}{2} + \\frac{2}{3} + \\frac{1}{2} + \\frac{1}{2} = 3\\frac{1}{3}\n\n\n\n\nOften we report \\pi per site:\n\n\\pi = 3.33/15 = 0.222\n\n\n\n\nHahn (2019) implicitly assumes we are looking at DNA polymorphism. The expression actually holds for any genetic variation at a locus, and is sometimes called the gene diversity (Nei & Kumar, 2000, p. 245).\nUnder the infinite sites model, E(\\pi)=\\theta=4N_e\\mu, for which reason \\pi sometimes is called \\theta_\\pi. The measure gives the average number of pairwise nucleotide differences between two sequences, so an alternative expression is\n\n\\pi = \\frac{\\sum_{i&lt;j}k_{ij}}{n(n-1)/2}\n\nThe latter expression is called the nucleotide diversity (Nei & Kumar, 2000, p. 251).",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Data and definitions"
    ]
  },
  {
    "objectID": "slides/foundations/data.html#the-real-data",
    "href": "slides/foundations/data.html#the-real-data",
    "title": "Data and definitions",
    "section": "The real data",
    "text": "The real data\n\n\n\n\n@SRR9309790.10003134\nTAAATCGATTCGTTTTTGCTATCTTCGTCT\n+\nAAFFFJJJJJJJFJJJJJJJJJJJJJJJJJ\n@SRR9309790.10003222\nTAAATCGATTCGTTTTTGCTATCTTCGTCT\n+\nAAFFFJJJJJJJJJJJJJJJJJJJJJJJJJ\n\n\n\n\n\n\nLG4:30430\n\n\n\n\n\n\nLG4:30430\n\n 30431     30441     30451     30461           CATTGGCAATGGCATCAGTTGAGCATCTTAGTACGAACTAAAAGCTG...............M..............................................A...                            ...............A.................              .............................................. .............................................. .............................................. ...............A..............................................A...............................,,,,,,,,,,,,a,,a,,,,,,,,,,,,,,,,,,,,,,,,,,,,a,,,,,,,,,,,,,,,,,a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,a,,,,,,,,,,,,,,,,,,,,,,a,,,,,aa,,,,,,,,,,,,,,,,a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,  ,,,,,,,,,,,,,a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n\n\n\n\n\nBefore getting to variants and genotypes a lot of processing has to be done, from FASTQ input, to mapped data, to variant and genotype calls.\n\n\nBefore getting to variants and genotypes a lot of processing has to be done, from FASTQ input, to mapped data, to variant and genotype calls.",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Data and definitions"
    ]
  },
  {
    "objectID": "slides/foundations/data.html#the-process",
    "href": "slides/foundations/data.html#the-process",
    "title": "Data and definitions",
    "section": "The process",
    "text": "The process",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Data and definitions"
    ]
  },
  {
    "objectID": "slides/foundations/data.html#bibliography",
    "href": "slides/foundations/data.html#bibliography",
    "title": "Data and definitions",
    "section": "Bibliography",
    "text": "Bibliography\n\n\nCasillas, S., & Barbadilla, A. (2017). Molecular Population Genetics. Genetics, 205(3), 1003–1035. https://doi.org/10.1534/genetics.116.196493\n\n\nGillespie, J. H. (2004). Population Genetics: A Concise Guide (2nd edition). Johns Hopkins University Press.\n\n\nHahn, M. (2019). Molecular Population Genetics (First). Oxford University Press.\n\n\nKreitman, M. (1983). Nucleotide polymorphism at the alcohol dehydrogenase locus of Drosophila melanogaster. Nature, 304(5925), 412. https://doi.org/10.1038/304412a0\n\n\nNei, M., & Kumar, S. (2000). Molecular Evolution and Phylogenetics. Oxford University Press.",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Data and definitions"
    ]
  },
  {
    "objectID": "slides/pgip/index.html#intended-learning-outcomes",
    "href": "slides/pgip/index.html#intended-learning-outcomes",
    "title": "Population genomics in practice",
    "section": "Intended learning outcomes",
    "text": "Intended learning outcomes\nCourse\n\nPresent minimum toolkit of methods that should be known to anyone starting out in population genomics\nSufficiently small for one-week workshop\n\nLecture\n\nPresent practical example of toolkit as applied in (Fuller et al., 2020)\nBriefly discuss baseline model (Johri et al., 2022)\n\n\nAim of lecture is to:\n\npresent a practical application of commonly used methods in population genomics\nlink population genomics to population genetics\ndiscuss statistical inference and the need of a baseline model with which to compare observations and conclusions\n\nWhat is population genomics?\nPoints from (Hahn, 2019, pp. 249–250):\n\nwhole-genome data instead of single loci - population genomics is population genetics for whole-genome sequences\n\nif only this, not too exciting\n\nmajor promise: enables analyses not possible for single loci or that require genomic context\naddresses interactions between different forces, notably selection and demographic history\n\nSome applications\n\ngenome-wide scans for selection\n\nselection vs demography (p. 251)\n\nmethods for genome-wide scans (p. 258)\n\nCaveats\n\nnon-independence (p. 267)\n\ndifferent statistics rely on similar input\noverlapping peaks from different statistics not independent\n\n\nGeneral points\n(Hartl & Clark, 1997, pp. 469–470):\n\nmore emphasis on differences within populations\ngoal: understand differences among genomes -&gt; requires complete sequence data from multiple individuals\n\n(Li & Durbin, 2011, supplementary notes, p. 6) on the use of PSMC on autosomes:\n“…highly consistent except for the very recent history, demonstrating the power of using whole-genome data.”",
    "crumbs": [
      "Slides",
      "Introduction",
      "Population genomics in practice"
    ]
  },
  {
    "objectID": "slides/pgip/index.html#example-population-genetics-of-the-coral-acropora-millepora",
    "href": "slides/pgip/index.html#example-population-genetics-of-the-coral-acropora-millepora",
    "title": "Population genomics in practice",
    "section": "Example: Population genetics of the coral Acropora millepora",
    "text": "Example: Population genetics of the coral Acropora millepora\n\n\nMotivation: corals are facing hard times and to prevent future losses of coral cover a better understanding of genetics is warranted.\n\nGenome assembly and sampling\nMotivation: most analyses require a reference sequence with which to compare resequenced samples\n\nAssemble high-quality reference genome\nChoice of populations, sampling locations\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 1: Genome assembly by hybrid sequencing (A) 253 individuals from 12 reefs (B) PCA with environmental and spatial variables (C) phenotype distributions (D)\n\n\n\n\nFuller et al. (2020)\n\n\n\n\n(Fuller et al., 2020) is an example of a population genomics study that applies methods that could be seen as a basic foundation of population genomics. We believe these present a minimum toolkit of methods that should be known to anyone starting out in population genomics, and that is sufficiently small to be presented in a one-week workshop. At the end of this lecture, we will discuss some more advanced applications in population genomics.\nFigure caption:\n\nGenome assembly and sample collection for A. millepora. (A) A de novo assembly for the A. millepora genome was constructed by using a hybrid sequencing approach. The alignment of reads generated from two pools of aposymbiotic larvae was used to filter out symbiont contigs (fig. S3). Assembled coral contigs were aligned to previously published linkage maps (19, 80) to create a chromosome-scale assembly. (B) A total of 253 individuals were collected from across 12 reefs on the GBR in 2017. The size of the circles represents the number of individuals collected at each site, and the circles are colored according to the bleaching severity at each reef. The maximum degree heating weeks (DHW) is shown across the region from which samples were collected (and across the GBR in the inset). The spatial layer of DHW represents interpolated maximum values from the National Oceanic and Atmospheric Administration Coral Reef Watch (CRW) v3.1 satellite product at a resolution of 5 km. Each reef label is colored arbitrarily but consistent with labels presented in other figures. AN, Arlington Reef; FY, Fitzroy Reef; RL, Russell Island; CS, Coates Reef; FR, Feather Reef; NB, North Barnard Islands; TR, Taylor Reef; DK, Dunk Island; RB, Rib Reef; PA, Pandora Reef; JB, John Brewer Reef; HH, Havannah Island. (C) A PCA was performed for 40 environmental and spatial variables for each reef, with abbreviations in bold representing their location. The component loads for each environmental variable projected on the first two principal components are depicted with arrows. (D) The distribution of visual scores, chlorophyll abundance standardized by host coral protein content, and standardized symbiont cell densities among the collected individuals for which phenotype measurement was possible. A visual score of 1 indicates severe bleaching, whereas a score of 6 represents full pigmentation.at a resolution of 5 km. Each reef label is colored arbitrarily but consistent with labels presented in other figures. AN, Arlington Reef; FY, Fitzroy Reef; RL, Russell Island; CS, Coates Reef; FR, Feather Reef; NB, North Barnard Islands; TR, Taylor Reef; DK, Dunk Island; RB, Rib Reef; PA, Pandora Reef; JB, John Brewer Reef; HH, Havannah Island. (C) A PCA was performed for 40 environmental and spatial variables for each reef, with abbreviations in bold representing their location. The component loads for each environmental variable projected on the first two principal components are depicted with arrows. (D) The distribution of visual scores, chlorophyll abundance standardized by host coral protein content, and standardized symbiont cell densities among the collected individuals for which phenotype measurement was possible. A visual score of 1 indicates severe bleaching, whereas a score of 6 represents full pigmentation.\n\nGenome assembly and sampling\nWhy: most analyses require a reference sequence with which to compare resequenced samples\nPoints to consider:\n\nchoice of reference individual\nthe number of populations\nthe number of samples (more sites better than many samples per population)\nthe geographical distribution of samples\nsequencing depth (low-coverage often sufficient)",
    "crumbs": [
      "Slides",
      "Introduction",
      "Population genomics in practice"
    ]
  },
  {
    "objectID": "slides/pgip/index.html#example-population-genetics-of-the-coral-acropora-millepora-1",
    "href": "slides/pgip/index.html#example-population-genetics-of-the-coral-acropora-millepora-1",
    "title": "Population genomics in practice",
    "section": "Example: Population genetics of the coral Acropora millepora",
    "text": "Example: Population genetics of the coral Acropora millepora\n\n\nMotivation: corals are facing hard times and to prevent future losses of coral cover a better understanding of genetics is warranted.\nDescribe genetic structure and demographic history\nMotivation:\n\naddress basic question of why genetic structure looks the way it does\ndemographic history may generate signals similar to selection\n\n\n\n\n\n\n\n\n\nFigure 2: Variation and demographic history inferred from 44 resequenced individuals. LD decay (r^2) from 1% of markers (A) nucleotide diversity (\\pi) in 1kb-windows (B) effective population sizes (\\mathrm{N_e}) estimated with PSMC (C)\n\n\n\n\n\nFuller et al. (2020)\n\n\n\nFigure caption:\n\nProperties of genetic variation and inferred demographic history in sampled A. millepora. (A) The decay of LD, measured as the squared genotypic correlation coefficient (r2), was estimated for a randomly chosen 1% of SNPs by using all sequenced samples. Each point represents the mean r2 in bins of 100 bp. (B) Nucleotide diversity was measured by the average pairwise differences per base pair (p) (86) for SNPs in 1-kb windows, using intergenic regions genome-wide. (C) Effective population sizes (Ne) inferred from 44 sequenced A. millepora genomes by using PSMC (35), assuming a mutation rate m of 4 × 10−9 per base pair per generation (20, 34). Although an error in the estimate of m will lead to a rescaling of both axes, it will not affect the qualitative conclusion of a decline in Ne toward the present. The x axis is scaled in terms of generations. This approach provides very little information about the recent past (here, less than ~104 generations).\n\nVariation and demographic history\nWhy: summarizing diversity provides (indirect) information on population size and more, as does the linkage structure. Estimate demographic history since fluctuating population size may produce signals similar to those of selection\n\nLD decay: important for imputation (e.g., stephens_AccountingDecayLinkage_2005) and setting window size for genome scans, where a common rule of thumb is to set the size larger than the genome background: this ensures windows are, in some sense, independent\n“The extent of LD and its decay with genetic distance are useful parameters for determining the number of markers needed to successfully map a QTL, and the resolution with which the trait can be successfully mapped” [otyama_EvaluationLinkageDisequilibrium_2019]\n0.363% average pi, but large variation.\nmany psmc plots show decline in population size, which could be an effect of bottleneck during pleistocene. Also population divergence (ghost ancestral populations, splits, extinction) can affect population size\nin aDNA studies missingness is common (i.e., heterozygotes are underestimated) and has to be accounted for since coalescence times are affected and may influence estimate of population size",
    "crumbs": [
      "Slides",
      "Introduction",
      "Population genomics in practice"
    ]
  },
  {
    "objectID": "slides/pgip/index.html#example-population-genetics-of-the-coral-acropora-millepora-2",
    "href": "slides/pgip/index.html#example-population-genetics-of-the-coral-acropora-millepora-2",
    "title": "Population genomics in practice",
    "section": "Example: Population genetics of the coral Acropora millepora",
    "text": "Example: Population genetics of the coral Acropora millepora\n\n\nMotivation: corals are facing hard times and to prevent future losses of coral cover a better understanding of genetics is warranted.\nCharacterize population structure\nMotivation:\n\nidentify populations for contrasts in e.g. selection scans\nidentify admixed individuals that should be removed from analyses\nidentify barriers to gene flow etc\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 3: Characterizing population structure and gene flow across 12 refs. F_{\\mathrm{ST}} measure across geographic distance (A) PCA from LD-pruned genome-wide SNPs for 44 resequenced samples (B) estimation of relative effective migration surface from LD-pruned and common (MAF &gt; 5%) SNPs (C)\n\n\n\n\nFuller et al. (2020)\n\n\n\n\nCharacterizing population structure and gene flow across 12 reefs. (A) There is no discernable relationship between geographic distance and genetic differentiation (measured as FST) across pairwise comparisons of sampled reefs. (B) A PCA by using LD-pruned genome-wide SNPs for the 44 resequenced high-coverage genomes. Each point is color-coded by the reef from which the individual was sampled. (C) EEMS (39) was used to estimate and visualize the relative effective migration surface by using LD-pruned and common (MAF &gt; 5%) genome-wide SNPs for the 44 resequenced high-coverage genomes. The size of the dots reflects the number of individuals sequenced from each reef.\n\nPopulation structure:\nWhy: many reasons: 1) identifying populations for contrasts in e.g. selection scans 2) identify admixed individuals that should be removed from analyses 3) identify barriers to gene flow etc\n\nno discernible relationship between geographic distance and genetic differentiation -&gt; gene flow\n\nfor this reason, Fst between populations is low\n\nEEMS (Estimated Effective Migration Surfaces) models relationship between genetics and geography petkova_VisualizingSpatialPopulation_2016\n\nIndicative of high connectivity among 12 sampled reefs.",
    "crumbs": [
      "Slides",
      "Introduction",
      "Population genomics in practice"
    ]
  },
  {
    "objectID": "slides/pgip/index.html#example-population-genetics-of-the-coral-acropora-millepora-3",
    "href": "slides/pgip/index.html#example-population-genetics-of-the-coral-acropora-millepora-3",
    "title": "Population genomics in practice",
    "section": "Example: Population genetics of the coral Acropora millepora",
    "text": "Example: Population genetics of the coral Acropora millepora\n\n\nMotivation: corals are facing hard times and to prevent future losses of coral cover a better understanding of genetics is warranted.\nGenomic scans for selection\nMotivation: identify loci associated with adaptation / selection\n\nlittle differentiation over reefs, however thermal regimes\ngenomic scan for \\pi (diversity) outliers\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 4: Genomic scans for local adaptation detect a signal at sacsin. Nucleotide diversity (\\pi) in 1kb-window, values in top 0.01% genome-wide in red (A, top). Close-up view around sacsin gene, with predicted gene structure above (A, bottom). h12 summary statistic showing the frequence of the two most common haplotypes (B). sacsin gene tree (blue) together with random gene trees, indicating deep genealogy at sacsin (C)\n\n\n\n\nFuller et al. (2020)\n\n\n\n\nGenomic scans for local adaptation detect a signal at sacsin. (A) (Top) Values of pairwise nucleotide diversity (π) (86) estimated in sliding windows of 1 kb and a step-size of 500 bp across chromosome 7, with points colored in red indicating regions in the top 0.01% of values genome-wide. A loess-smoothed trend line of π across windows is indicated in purple. The peak with the most extreme values falls in the sacsin gene region. (Bottom) A close-up view of π estimated across a region of chromosome 7 surrounding the sacsin gene, which includes all of the outlier windows indicated in red at top. π per base pair was calculated in sliding windows of 100 bp (gray dots); the loess-smoothed line is shown in blue. The predicted gene structure of sacsin is indicated above, as well as the flanking upstream and downstream genes. The 29 nonsynonymous differences fixed between samples of the two most common haplotypes in sacsin are denoted with green lines. There are also 20 fixed synonymous differences. Gray vertical dashed lines delimit a region that was masked from variant calling because of predicted repetitive elements. (B) The h12 summary statistic (47), which measures the frequency of the two most common haplotypes, is plotted across chromosome 7 (supplementary materials, materials and methods). Red dots represent h12 values in the top 0.01% genome-wide. The peak with the most extreme values falls in the sacsin gene region. (C) A gene tree for the central 1-kb region in sacsin is shown in dark blue; it was constructed for one randomly chosen haplotype from a randomly selected individual from each of the 12 sampled reefs. The gene tree is rooted to aligned sequences from the reference genomes for A. digitifera (87) and A. tenuis (draft assembly from &lt;www.reefgenomics.org&gt;). Shown in gray are gene trees for 1000 randomly sampled 1-kb regions from across the genome for the same individuals. Each gene tree was inferred by using maximum likelihood implemented in dnaml (88).\n\nSelection scan\nWhy: identify loci associated with adaptation / selection, which provides potential mechanisms for adaptation, as well as information that could be important for conservation strategies\nLittle differentiation across reefs -&gt; little population structure over hundreds of kilometers. However, there are environmental differences (thermal regimes). Scan for pi outliers:\n\npoints to sacsin gene\nh12 measures the frequency of the two most common haplotypes; red indicate 0.01% outlier genome-wide\n4C: tree for central 1kb region in sacsin deeper than split from A.digitifera and A.tenuis\n\nvariation in sacsin has been maintained for long time\nco-chaperone for heat-shock protein Hsp70",
    "crumbs": [
      "Slides",
      "Introduction",
      "Population genomics in practice"
    ]
  },
  {
    "objectID": "slides/pgip/index.html#example-population-genetics-of-the-coral-acropora-millepora-4",
    "href": "slides/pgip/index.html#example-population-genetics-of-the-coral-acropora-millepora-4",
    "title": "Population genomics in practice",
    "section": "Example: Population genetics of the coral Acropora millepora",
    "text": "Example: Population genetics of the coral Acropora millepora\nStudy highlights common analyses in population genomics study:\n\nGenome assembly, resequencing, variant calling and filtering\nDescription of variation (e.g., \\pi) and genetic structure (LD)\nDescription of population structure (admixture, PCA)\nModelling of demographic history (PSMC)\nGenome scans for adaptive traits",
    "crumbs": [
      "Slides",
      "Introduction",
      "Population genomics in practice"
    ]
  },
  {
    "objectID": "slides/pgip/index.html#population-genetics",
    "href": "slides/pgip/index.html#population-genetics",
    "title": "Population genomics in practice",
    "section": "Population genetics",
    "text": "Population genetics\n\n\n \n\n\nMutation\n\n\n\nSelection\n\n\n\n \n\n\nRecombination\n\n\n\nDrift\n\n\n\n\n(Fuller et al., 2020) paper has population genetics in title -&gt; population genetics is a key ingredient.\nPopulation genetics focuses on the genetic basis of evolution. It is mainly a theoretical subject, owing to the slow changes of genetic variation. As such, it tries to explain the shape and structure of genetic variation from theoretical predictions and models.",
    "crumbs": [
      "Slides",
      "Introduction",
      "Population genomics in practice"
    ]
  },
  {
    "objectID": "slides/pgip/index.html#from-population-genetics-to-population-genomics",
    "href": "slides/pgip/index.html#from-population-genetics-to-population-genomics",
    "title": "Population genomics in practice",
    "section": "From population genetics to population genomics",
    "text": "From population genetics to population genomics\n\n\n\n\n\n\n\n\n\nThe variable sites at the Drosophila melanogaster ADH locus (Kreitman, 1983)\n\n\n\n\nFirst study of natural population. However, limited to one locus.\n\n\nfrom locus-based studies (e.g., alcohol dehydrogenase in Drosophila (Kreitman, 1983)) to genome-wide (e.g., Drosophila population genomics (Begun et al., 2007)\nnote: studied loci have often not been randomly chosen, which is another argument for whole-genome studies\nenabler: sequencing technology\n\n(Fuller et al., 2020) paper has population genetics in title -&gt; population genetics is a key ingredient.\nRefer to Hahn’s points about learning something about global patterns:\n\nselection acts locally, demography globally\nthe structure of genetic variation and how it depends on\n\nrecombination landscapes and linked selection\ndemographic changes\nidentification of neutral loci\n\n\nSo, not simply about applying 10000 selection tests for multiple loci\nAll of the points above point to the importance of statistics which implies mathematics / computational skills important",
    "crumbs": [
      "Slides",
      "Introduction",
      "Population genomics in practice"
    ]
  },
  {
    "objectID": "slides/pgip/index.html#from-population-genetics-to-population-genomics-1",
    "href": "slides/pgip/index.html#from-population-genetics-to-population-genomics-1",
    "title": "Population genomics in practice",
    "section": "From population genetics to population genomics",
    "text": "From population genetics to population genomics\n\n\n\n\nPatterns of polymorphism and divergence (Begun et al., 2007)\n\n\n\nSame system but genome-wide. Plots represent all chromosomes and the entire genome.\n\nBegun et al. (2007) study: same system (Drosophila) but more individuals and whole genome. All of a sudden possible to ask questions about the general characteristics of diversity, not just limited to single loci.",
    "crumbs": [
      "Slides",
      "Introduction",
      "Population genomics in practice"
    ]
  },
  {
    "objectID": "slides/pgip/index.html#from-population-genetics-to-population-genomics-2",
    "href": "slides/pgip/index.html#from-population-genetics-to-population-genomics-2",
    "title": "Population genomics in practice",
    "section": "From population genetics to population genomics",
    "text": "From population genetics to population genomics\n\n\n\n\n\n\n\n\n\nNumbers of polymorphic and fixed variants (Begun et al., 2007)\n\n\n\n\nNovelty: now possible to do genome-wide characterization of variation in different functional contexts\n\nNovelty: now possible to do genome-wide characterization of variation in different functional contexts",
    "crumbs": [
      "Slides",
      "Introduction",
      "Population genomics in practice"
    ]
  },
  {
    "objectID": "slides/pgip/index.html#the-technological-revolution-in-sequencing-and-computing",
    "href": "slides/pgip/index.html#the-technological-revolution-in-sequencing-and-computing",
    "title": "Population genomics in practice",
    "section": "The technological revolution in sequencing and computing",
    "text": "The technological revolution in sequencing and computing\n\n\n\n\n\n\n\n\n\n\nFigure 5: Sequencing cost ($) per megabase (Wetterstrand, KA)\n\n\n\n\n\n\n\n\n\nMoore’s law",
    "crumbs": [
      "Slides",
      "Introduction",
      "Population genomics in practice"
    ]
  },
  {
    "objectID": "slides/pgip/index.html#statistical-inference-in-population-genomics",
    "href": "slides/pgip/index.html#statistical-inference-in-population-genomics",
    "title": "Population genomics in practice",
    "section": "Statistical inference in population genomics",
    "text": "Statistical inference in population genomics\nThe data deluge requires advanced statistical methods and models to do inference. Today data production outpaces theoretical advances. Therefore, take care not to attach too much faith to a test that explains data well.\n\nA population genomics study should aim at generating a baseline model that takes into account the processes that shape genetic variation (Johri et al., 2022):\n\nmutation\nrecombination\ngene conversion\npurifying selection acting on functional regions and its effects on linked variants (background selection)\ngenetic drift with demographic history and geographic structure\n\n\n\nCaution against adaptationist storytelling; always compare to a baseline model that takes potential confounding factors into account",
    "crumbs": [
      "Slides",
      "Introduction",
      "Population genomics in practice"
    ]
  },
  {
    "objectID": "slides/pgip/index.html#applications-of-population-genomics",
    "href": "slides/pgip/index.html#applications-of-population-genomics",
    "title": "Population genomics in practice",
    "section": "Applications of population genomics",
    "text": "Applications of population genomics\n\n\n\n\n\nConservation genomics (Webster et al., 2023)\n\n\n\n\n\n\n\nSpeciation genomics (Stankowski et al., 2019)\n\n\n\n\n\n\n\ndisentangle forces that create variation (Rodrigues et al., 2024)\n\n\n\n\n\n\n\npaleogenomics (aDNA) (van der Valk et al., 2021)\n\n\n\n\n\n\n\ndomestication (Barrera-Redondo et al., 2020)\n\n\n\n\n\n\n\necology (Unneberg et al., 2024)",
    "crumbs": [
      "Slides",
      "Introduction",
      "Population genomics in practice"
    ]
  },
  {
    "objectID": "slides/pgip/index.html#bibliography",
    "href": "slides/pgip/index.html#bibliography",
    "title": "Population genomics in practice",
    "section": "Bibliography",
    "text": "Bibliography\n\n\nBarrera-Redondo, J., Piñero, D., & Eguiarte, L. E. (2020). Genomic, Transcriptomic and Epigenomic Tools to Study the Domestication of Plants and Animals: A Field Guide for Beginners. Frontiers in Genetics, 11.\n\n\nBegun, D. J., Holloway, A. K., Stevens, K., Hillier, L. W., Poh, Y.-P., Hahn, M. W., Nista, P. M., Jones, C. D., Kern, A. D., Dewey, C. N., Pachter, L., Myers, E., & Langley, C. H. (2007). Population Genomics: Whole-Genome Analysis of Polymorphism and Divergence in Drosophila simulans. PLOS Biology, 5(11), e310. https://doi.org/10.1371/journal.pbio.0050310\n\n\nFuller, Z. L., Mocellin, V. J. L., Morris, L. A., Cantin, N., Shepherd, J., Sarre, L., Peng, J., Liao, Y., Pickrell, J., Andolfatto, P., Matz, M., Bay, L. K., & Przeworski, M. (2020). Population genetics of the coral Acropora millepora: Toward genomic prediction of bleaching. Science, 369(6501), eaba4674. https://doi.org/10.1126/science.aba4674\n\n\nHahn, M. (2019). Molecular Population Genetics (First). Oxford University Press.\n\n\nHartl, D. L., & Clark, A. G. (1997). Principles of population genetics. Sinauer Associates.\n\n\nJohri, P., Aquadro, C. F., Beaumont, M., Charlesworth, B., Excoffier, L., Eyre-Walker, A., Keightley, P. D., Lynch, M., McVean, G., Payseur, B. A., Pfeifer, S. P., Stephan, W., & Jensen, J. D. (2022). Recommendations for improving statistical inference in population genomics. PLOS Biology, 20(5), e3001669. https://doi.org/10.1371/journal.pbio.3001669\n\n\nKreitman, M. (1983). Nucleotide polymorphism at the alcohol dehydrogenase locus of Drosophila melanogaster. Nature, 304(5925), 412. https://doi.org/10.1038/304412a0\n\n\nLi, H., & Durbin, R. (2011). Inference of human population history from individual whole-genome sequences. Nature, 475(7357), 493–496. https://doi.org/10.1038/nature10231\n\n\nRodrigues, M. F., Kern, A. D., & Ralph, P. L. (2024). Shared evolutionary processes shape landscapes of genomic variation in the great apes. Genetics, 226(4), iyae006. https://doi.org/10.1093/genetics/iyae006\n\n\nStankowski, S., Chase, M. A., Fuiten, A. M., Rodrigues, M. F., Ralph, P. L., & Streisfeld, M. A. (2019). Widespread selection and gene flow shape the genomic landscape during a radiation of monkeyflowers. PLOS Biology, 17(7), e3000391. https://doi.org/10.1371/journal.pbio.3000391\n\n\nUnneberg, P., Larsson, M., Olsson, A., Wallerman, O., Petri, A., Bunikis, I., Vinnere Pettersson, O., Papetti, C., Gislason, A., Glenner, H., Cartes, J. E., Blanco-Bercial, L., Eriksen, E., Meyer, B., & Wallberg, A. (2024). Ecological genomics in the Northern krill uncovers loci for local adaptation across ocean basins. Nature Communications, 15(1), 6297. https://doi.org/10.1038/s41467-024-50239-7\n\n\nvan der Valk, T., Pečnerová, P., Díez-del-Molino, D., Bergström, A., Oppenheimer, J., Hartmann, S., Xenikoudakis, G., Thomas, J. A., Dehasque, M., Sağlıcan, E., Fidan, F. R., Barnes, I., Liu, S., Somel, M., Heintzman, P. D., Nikolskiy, P., Shapiro, B., Skoglund, P., Hofreiter, M., … Dalén, L. (2021). Million-year-old DNA sheds light on the genomic history of mammoths. Nature, 591(7849), 265–269. https://doi.org/10.1038/s41586-021-03224-9\n\n\nWebster, M. T., Beaurepaire, A., Neumann, P., & Stolle, E. (2023). Population Genomics for Insect Conservation. Annual Review of Animal Biosciences, 11(1), 115–140. https://doi.org/10.1146/annurev-animal-122221-075025\n\n\nWetterstrand, KA. DNA Sequencing Costs: Data from the NHGRI Genome Sequencing Program (GSP). www.genome.gov/sequencingcostsdata",
    "crumbs": [
      "Slides",
      "Introduction",
      "Population genomics in practice"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome page",
    "section": "",
    "text": "Important\n\n\n\nThis website is work in progress."
  },
  {
    "objectID": "slides/index.html",
    "href": "slides/index.html",
    "title": "Slides",
    "section": "",
    "text": "A note on usage\nHtml slides have been authored using revealjs and can be viewed directly in the browser. In some cases, there are accompanying speaker notes that can be viewed by pressing s. Whenever there is a  symbol, it links to a recipe that is related to the figure or content on the active slide.\n\n\nSlides\n\n\n\n\n\n\n\nPopulation genomics in practice\n\n\nWhat is population genomics?\n\n\n\nPer Unneberg\n\n\n\n\n\n\n\n\n\n\nPopulation genetics foundations\n\n\n\nPer Unneberg\n\n\n\n\n\n\n\n\n\n\nVariant calling\n\n\n\nPer Unneberg\n\n\n\n\n\n\n\n\n\n\nVariant filtering\n\n\n\nPer Unneberg\n\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "Slides",
      "Listing"
    ]
  },
  {
    "objectID": "slides/foundations/index.html",
    "href": "slides/foundations/index.html",
    "title": "Population genetics foundations",
    "section": "",
    "text": "Collection of short presentations on population genetic theory and foundations",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Population genetics foundations"
    ]
  },
  {
    "objectID": "slides/foundations/index.html#about",
    "href": "slides/foundations/index.html#about",
    "title": "Population genetics foundations",
    "section": "",
    "text": "Collection of short presentations on population genetic theory and foundations",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Population genetics foundations"
    ]
  },
  {
    "objectID": "slides/foundations/index.html#listing",
    "href": "slides/foundations/index.html#listing",
    "title": "Population genetics foundations",
    "section": "Listing",
    "text": "Listing\n\n\n   \n    \n    \n      Order By\n      Default\n      \n        Title\n      \n    \n  \n    \n      \n      \n    \n\n\n\n\n\n\nTitle\n\n\n\nDescription\n\n\n\n\n\n\n\n\nData and definitions\n\n\nIntroduction to population genetic data and definitions.\n\n\n\n\n\n\nAlleles and genealogies\n\n\nIntroduction to alleles and genealogies\n\n\n\n\n\n\nLinkage disequilibrium\n\n\nBasic introduction to linkage disequilibrium and recombination. Based on Pritchard (n.d.)\n\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Population genetics foundations"
    ]
  },
  {
    "objectID": "slides/foundations/alleles.html#alleles-as-algebraic-entities",
    "href": "slides/foundations/alleles.html#alleles-as-algebraic-entities",
    "title": "Alleles and genealogies",
    "section": "Alleles as algebraic entities",
    "text": "Alleles as algebraic entities\n\n\nRecall: alleles refer to different variants of a sequence at a locus (genomic position).\n\nWhatever the underlying molecular nature (gene, chromosome, nucleotide, protein), let’s represent a locus by a letter, e.g., A (B if two loci, and so on)\n\n\nIf locus has many alleles 1, 2, ... , could use indexing A_1, A_2, ....\n\n\nWill use combination A, a for bi-allelic loci from now on\n\n\n\n\n\n\nExample: gene coding for flower color\n\n\n\n\n A red color\n a white color\n\nPunnett square\n\n\n \\ \n\n\nA\n\n\na\n\n\nA\n\n\n\n\n\n\n\n\na\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGenotype\n\n\naa\n\n\nAa\n\n\nAA\n\n\nPhenotype\n\n\n\n\n\n\n\n\n\n\n\nHeterozygote has intermediate color phenotype (pink).\n\n\n\n\n\n\n\nUntil now the examples have been based on nucleotide sequences. However, much of population genetic theory was developed before the nature of heredity (DNA) was known. In these early days, an allele would refer to variant forms of a gene, observed as differences in phenotypes. Genes, or loci, would be denoted using alphabetic characters, such as A, and allelic types could be referenced with indices, e.g., A_1, A_2, ..., A_n.\nTo simplify calculations, we often look at one locus and we assume two alleles, whereby we skip the indices and denote the allelic pairs A and a (although note that notations differs from author to author; for instance Gillespie (2004) uses A_1, A_2 for bi-allelic loci). For two-locus systems we simply denote the second allele with B, b, and so on.\nThe example shows a hypothetical locus having two alleles A and a that have phenotypes red and white flower color, and where heterozygotes are colored pink. The Punnett square shows how gamete combinations form genotypes and their corresponding phenotypes.",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Alleles and genealogies"
    ]
  },
  {
    "objectID": "slides/foundations/alleles.html#alleles-and-frequencies",
    "href": "slides/foundations/alleles.html#alleles-and-frequencies",
    "title": "Alleles and genealogies",
    "section": "Alleles and frequencies",
    "text": "Alleles and frequencies\nWe will be interested in looking at the dynamics of alleles, i.e., how their abundances in the population change over time. Therefore we want to measure the frequencies of alleles A and a.\n\n\n\n\n\n\nExample\n\n\nAssume following population (n=10, with n_{AA}=5, n_{Aa}=4, n_{aa}=1):\n         \n\nLet p be frequency of A alleles, q=1-p frequency of a alleles; then\n5 AA individuals, 4 Aa individuals \\Rightarrow p=\\frac{5\\cdot2 +\n4\\cdot1}{10\\cdot2}=\\frac{14}{20}=0.7\nand q=1-p=\\frac{6}{20}=0.3\n\n\nInserting frequencies into Punnett square gives expected frequency of offspring genotypes.\n\n\n\n\n\n\n\n\n\n \\ \n\n\nA (p=0.7)\n\n\na (q=0.3)\n\n\nA (p=0.7)\n\n\n\np\\cdot p = 0.49\n\n\n\np\\cdot q = 0.21\n\n\na (q=0.3)\n\n\n\nq\\cdot p = 0.21\n\n\n\nq\\cdot q = 0.09\n\n\n\n\nExpected allele frequencies after mating: p=p^2 + pq=0.7, q=1-p=0.3\n\n\n\nGiven n diploid individuals, there are 2n alleles in the population. The frequency of allele A is then the homozygote AA times two, plus one times the individuals carrying one A.\nThe Punnett square shows that the expected homozygote frequencies are 0.49 and 0.09 for AA and aa, and hence, the frequency of Aa is 1 - 0.49 - 0.09 = 0.42 = 0.21 + 0.21 = 2pq",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Alleles and genealogies"
    ]
  },
  {
    "objectID": "slides/foundations/alleles.html#in-absence-of-evolutionary-forces-alleles-are-in-equilibrium",
    "href": "slides/foundations/alleles.html#in-absence-of-evolutionary-forces-alleles-are-in-equilibrium",
    "title": "Alleles and genealogies",
    "section": "In absence of evolutionary forces alleles are in equilibrium",
    "text": "In absence of evolutionary forces alleles are in equilibrium\nThe Hardy-Weinberg equilibrium\nFor a locus, let A and a be two different alleles and let p be the frequency of the A allele and q=1-p the frequency of the a allele. In the absence of mutation, drift, migration, and other evolutionary processes, the equilibrium state is given by the Hardy-Weinberg equilibrium (HWE).\n\n\n\n\n\n\nA (p)\na (q)\n\n\n\n\nA (p)\np^2\npq\n\n\na (q)\nqp\nq^2\n\n\n\n\n\n\n\nGenotype:\nAA\nAa\naa\n\n\nFrequency:\np^2\n2pq\nq^2\n\n\n\nf_{AA}\nf_{Aa}\nf_{aa}\n\n\n\n\n\n\nHWE assumption\nUnder HWE assumption, neither allele nor genotype frequencies change over time.\nImportantly, we can calculate allele frequencies from genotype frequencies and vice versa.\n\n\np = f_{AA} + \\frac{f_{Aa}}{2} = p^2 + pq\\\\\nq = f_{aa} + \\frac{f_{Aa}}{2} = q^2 + pq\\\\\n\n\n\nSegue: apart from describing the variation via e.g., diversity measures, we want to model how allele frequencies change in time. As (Gillespie, 2004, preface p. xi) points out, “While genotype frequencies are easily measured, their change is not”\nIOW: describing variation fine, but where does it come from and how does it change?\nIf assumptions of HWE hold, we have no change of variation. However, we want to look at change of variation and disentangle the forces that impose change\nHWE assumption gives us a way to calculate allele frequencies from genotype frequencies. How well do these assumptions hold in real data? See next slide.",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Alleles and genealogies"
    ]
  },
  {
    "objectID": "slides/foundations/alleles.html#natural-populations-do-mate-randomly",
    "href": "slides/foundations/alleles.html#natural-populations-do-mate-randomly",
    "title": "Alleles and genealogies",
    "section": "Natural populations do mate randomly?",
    "text": "Natural populations do mate randomly?\n\n\n\n\n\n\n\n\n\nFigure 1: Hardy-Weinberg proportions in 10,000 SNPs on chromosome 22 from three populations based on 1000 genomes data. For each SNP, genotypes are given as counts (minor/heterozygote/major), converted to frequencies and plotted on the y-axis. Allele frequencies are obtained from genotype frequencies and plotted on the x-axis. Most observations follow HWE proportions. Deviations from HWE can indicate sample QC issues, or that there is population structure. Illustration inspired by cooplab (2011). \n\n\n\n\n\n\n\nSo how do the HWE assumptions hold up in real data? The figure shows three human populations from the 1000 genomes data, for which 10,000 SNPs have been selected. For each SNP, we know the genotype frequencies AA, Aa, aa and can therefore calculate the allele frequencies for A and a using the equations on the preceding slide (e.g., p=p_{AA}+p_{Aa}/2).\nNote that 1000 genomes data have sorted genotype frequencies, so to produce nice symmetrical plots, half the genotype frequencies have been reversed (minor/het/major -&gt; major/het/minor).\n\nSee https://stackoverflow.com/questions/26587940/ggplot2-different-legend-symbols-for-points-and-lines for legend customization.",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Alleles and genealogies"
    ]
  },
  {
    "objectID": "slides/foundations/alleles.html#the-wahlund-effect-and-population-substructure",
    "href": "slides/foundations/alleles.html#the-wahlund-effect-and-population-substructure",
    "title": "Alleles and genealogies",
    "section": "The Wahlund effect and population substructure",
    "text": "The Wahlund effect and population substructure\n\n\nPopulation P1\n\n    \n\np_A = 1 \\Rightarrow p_A^2 = 1, p_a^2=2p_Ap_a=0\n\nPopulation P1\n\n    \n\np_a = 1 \\Rightarrow p_a^2 = 1, p_A^2=2p_Ap_a=0\n\nBoth subpopulations are in HWE!\n\n\n\nPopulation P1+P2:\np_A=p_a=0.5 so we would expect 50% heterozygotes - but there are none!\n\n\nThis is known as the Wahlund effect where the loss of heterozygosity is due to population substructure.",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Alleles and genealogies"
    ]
  },
  {
    "objectID": "slides/foundations/alleles.html#summarising-allele-frequencies",
    "href": "slides/foundations/alleles.html#summarising-allele-frequencies",
    "title": "Alleles and genealogies",
    "section": "Summarising allele frequencies",
    "text": "Summarising allele frequencies\nGoing back to the DNA example let’s tabulate the minor allele frequencies (MAFs):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n\n\nT\nT\nA\nC\nA\nA\nT\nC\nC\nG\nA\nT\nC\nG\nT\n\n\n\nT\nT\nA\nC\nG\nA\nT\nG\nC\nG\nC\nT\nC\nG\nT\n\n\n\nT\nC\nA\nC\nA\nA\nT\nG\nC\nG\nA\nT\nG\nG\nA\n\n\n\nT\nT\nA\nC\nG\nA\nT\nG\nC\nG\nC\nT\nC\nG\nT\n\n\nMAF\n0\n1\n0\n0\n2\n0\n0\n1\n0\n0\n2\n0\n1\n0\n1\n\n\n\n\n\n\n\n\nSite-frequency spectrum (SFS)\nWe can count all the different frequency classes {x_0, x_1, x_2,\n...} and make a frequency table or plot it:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGenealogies and mutations\nAssuming we know how the samples are related and we know the ancestral sequence, we can plot the mutations (circles) on a genealogy.\nNote the correspondence between frequency classes in the SFS and number of samples below a mutation.",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Alleles and genealogies"
    ]
  },
  {
    "objectID": "slides/foundations/alleles.html#the-obsession-of-population-genetics",
    "href": "slides/foundations/alleles.html#the-obsession-of-population-genetics",
    "title": "Alleles and genealogies",
    "section": "The obsession of population genetics",
    "text": "The obsession of population genetics\nPopulation genetics is about (Gillespie, 2004)\n\ndescribing the genetic structure of populations\nconstructing theories on the forces that influence genetic variation\n\n\n\n\nQuestions to ponder:\n\nwhy does variation look the way it does?\nhow is variation maintained?\nhow does variation change over time (\\Delta p)?\nwhat forces shape the genetic structure of populations?\n\n\n\n\n         \np=0.1\n\n\n\\large\\rightarrow\n\n\n         \np=0.5\n\n\n\\large\\rightarrow\n\n\n         \np=0.9\n\n\n\n\n\nFrom HWE: we want to look a the creation, maintenance and loss of variation and what forces affect it\nGoal: describe theory behind evolving populations. This has been an obsession for a long time, even before DNA was known. We need to get back to basics.",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Alleles and genealogies"
    ]
  },
  {
    "objectID": "slides/foundations/alleles.html#bibliography",
    "href": "slides/foundations/alleles.html#bibliography",
    "title": "Alleles and genealogies",
    "section": "Bibliography",
    "text": "Bibliography\n\n\ncooplab. (2011). Population genetics course resources: Hardy-Weinberg Eq. In gcbias. https://gcbias.org/2011/10/13/population-genetics-course-resources-hardy-weinberg-eq/\n\n\nGillespie, J. H. (2004). Population Genetics: A Concise Guide (2nd edition). Johns Hopkins University Press.",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "Alleles and genealogies"
    ]
  },
  {
    "objectID": "slides/foundations/wrightfisher.html#models-of-populations",
    "href": "slides/foundations/wrightfisher.html#models-of-populations",
    "title": "The Wright-Fisher model",
    "section": "Models of populations",
    "text": "Models of populations\n\n\n\n\n\n\n\n\n\n\n\n\nSegue: take a step back to the days before the nature of genetic inheritance was known. First focus on the population.\nGoal of lecture is also to understand genetic relationships in the context of genealogies -&gt; coalescent.",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "The Wright-Fisher model"
    ]
  },
  {
    "objectID": "slides/foundations/wrightfisher.html#wright-fisher-model",
    "href": "slides/foundations/wrightfisher.html#wright-fisher-model",
    "title": "The Wright-Fisher model",
    "section": "Wright-Fisher model",
    "text": "Wright-Fisher model\n\n\nModel of populations that describes genealogical relationships of genes (chromosomes) in a population under the following assumptions (Hein et al., 2005):\n\ndiscrete and non-overlapping generations\nhaploid individuals or two subpopulations (males and females)\nconstant population size\nall individuals are equally fit\npopulation has no geographical or social structure\nno recombination\n\n\n\n\n\nSee Hein et al. (2004) for more assumptions. The second assumption means we can use 2N chromosome interchangeably for haploid (n=2N) and diploid (n=N) populations.",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "The Wright-Fisher model"
    ]
  },
  {
    "objectID": "slides/foundations/wrightfisher.html#wright-fisher-model-1",
    "href": "slides/foundations/wrightfisher.html#wright-fisher-model-1",
    "title": "The Wright-Fisher model",
    "section": "Wright-Fisher model",
    "text": "Wright-Fisher model\n\n\nModel of populations that describes genealogical relationships of genes (chromosomes) in a population under the following assumptions (Hein et al., 2005):\n\ndiscrete and non-overlapping generations\nhaploid individuals or two subpopulations (males and females)\nconstant population size\nall individuals are equally fit\npopulation has no geographical or social structure\nno recombination\n\nAlgorithm\n\nSetup starting population at time zero",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "The Wright-Fisher model"
    ]
  },
  {
    "objectID": "slides/foundations/wrightfisher.html#wright-fisher-model-2",
    "href": "slides/foundations/wrightfisher.html#wright-fisher-model-2",
    "title": "The Wright-Fisher model",
    "section": "Wright-Fisher model",
    "text": "Wright-Fisher model\n\n\nModel of populations that describes genealogical relationships of genes (chromosomes) in a population under the following assumptions (Hein et al., 2005):\n\ndiscrete and non-overlapping generations\nhaploid individuals or two subpopulations (males and females)\nconstant population size\nall individuals are equally fit\npopulation has no geographical or social structure\nno recombination\n\nAlgorithm\n\nSetup starting population at time zero\nAdd offspring (same size) at time one",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "The Wright-Fisher model"
    ]
  },
  {
    "objectID": "slides/foundations/wrightfisher.html#wright-fisher-model-3",
    "href": "slides/foundations/wrightfisher.html#wright-fisher-model-3",
    "title": "The Wright-Fisher model",
    "section": "Wright-Fisher model",
    "text": "Wright-Fisher model\n\n\nModel of populations that describes genealogical relationships of genes (chromosomes) in a population under the following assumptions (Hein et al., 2005):\n\ndiscrete and non-overlapping generations\nhaploid individuals or two subpopulations (males and females)\nconstant population size\nall individuals are equally fit\npopulation has no geographical or social structure\nno recombination\n\nAlgorithm\n\nSetup starting population at time zero\nAdd offspring (same size) at time one\nSelect parents to offspring at random",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "The Wright-Fisher model"
    ]
  },
  {
    "objectID": "slides/foundations/wrightfisher.html#wright-fisher-model-4",
    "href": "slides/foundations/wrightfisher.html#wright-fisher-model-4",
    "title": "The Wright-Fisher model",
    "section": "Wright-Fisher model",
    "text": "Wright-Fisher model\n\n\nModel of populations that describes genealogical relationships of genes (chromosomes) in a population under the following assumptions (Hein et al., 2005):\n\ndiscrete and non-overlapping generations\nhaploid individuals or two subpopulations (males and females)\nconstant population size\nall individuals are equally fit\npopulation has no geographical or social structure\nno recombination\n\nAlgorithm\n\nSetup starting population at time zero\nAdd offspring (same size) at time one\nSelect parents to offspring at random",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "The Wright-Fisher model"
    ]
  },
  {
    "objectID": "slides/foundations/wrightfisher.html#wright-fisher-model-5",
    "href": "slides/foundations/wrightfisher.html#wright-fisher-model-5",
    "title": "The Wright-Fisher model",
    "section": "Wright-Fisher model",
    "text": "Wright-Fisher model\n\n\nModel of populations that describes genealogical relationships of genes (chromosomes) in a population under the following assumptions (Hein et al., 2005):\n\ndiscrete and non-overlapping generations\nhaploid individuals or two subpopulations (males and females)\nconstant population size\nall individuals are equally fit\npopulation has no geographical or social structure\nno recombination\n\nAlgorithm\n\nSetup starting population at time zero\nAdd offspring (same size) at time one\nSelect parents to offspring at random",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "The Wright-Fisher model"
    ]
  },
  {
    "objectID": "slides/foundations/wrightfisher.html#wright-fisher-model-6",
    "href": "slides/foundations/wrightfisher.html#wright-fisher-model-6",
    "title": "The Wright-Fisher model",
    "section": "Wright-Fisher model",
    "text": "Wright-Fisher model\n\n\nModel of populations that describes genealogical relationships of genes (chromosomes) in a population under the following assumptions (Hein et al., 2005):\n\ndiscrete and non-overlapping generations\nhaploid individuals or two subpopulations (males and females)\nconstant population size\nall individuals are equally fit\npopulation has no geographical or social structure\nno recombination\n\nAlgorithm\n\nSetup starting population at time zero\nAdd offspring (same size) at time one\nSelect parents to offspring at random",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "The Wright-Fisher model"
    ]
  },
  {
    "objectID": "slides/foundations/wrightfisher.html#wright-fisher-model-7",
    "href": "slides/foundations/wrightfisher.html#wright-fisher-model-7",
    "title": "The Wright-Fisher model",
    "section": "Wright-Fisher model",
    "text": "Wright-Fisher model\n\n\nModel of populations that describes genealogical relationships of genes (chromosomes) in a population under the following assumptions (Hein et al., 2005):\n\ndiscrete and non-overlapping generations\nhaploid individuals or two subpopulations (males and females)\nconstant population size\nall individuals are equally fit\npopulation has no geographical or social structure\nno recombination\n\nAlgorithm\n\nSetup starting population at time zero\nAdd offspring (same size) at time one\nSelect parents to offspring at random",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "The Wright-Fisher model"
    ]
  },
  {
    "objectID": "slides/foundations/wrightfisher.html#wright-fisher-model-8",
    "href": "slides/foundations/wrightfisher.html#wright-fisher-model-8",
    "title": "The Wright-Fisher model",
    "section": "Wright-Fisher model",
    "text": "Wright-Fisher model\n\n\nModel of populations that describes genealogical relationships of genes (chromosomes) in a population under the following assumptions (Hein et al., 2005):\n\ndiscrete and non-overlapping generations\nhaploid individuals or two subpopulations (males and females)\nconstant population size\nall individuals are equally fit\npopulation has no geographical or social structure\nno recombination\n\nAlgorithm\n\nSetup starting population at time zero\nAdd offspring (same size) at time one\nSelect parents to offspring at random",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "The Wright-Fisher model"
    ]
  },
  {
    "objectID": "slides/foundations/wrightfisher.html#wright-fisher-model-9",
    "href": "slides/foundations/wrightfisher.html#wright-fisher-model-9",
    "title": "The Wright-Fisher model",
    "section": "Wright-Fisher model",
    "text": "Wright-Fisher model\n\n\nModel of populations that describes genealogical relationships of genes (chromosomes) in a population under the following assumptions (Hein et al., 2005):\n\ndiscrete and non-overlapping generations\nhaploid individuals or two subpopulations (males and females)\nconstant population size\nall individuals are equally fit\npopulation has no geographical or social structure\nno recombination\n\nAlgorithm\n\nSetup starting population at time zero\nAdd offspring (same size) at time one\nSelect parents to offspring at random",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "The Wright-Fisher model"
    ]
  },
  {
    "objectID": "slides/foundations/wrightfisher.html#wright-fisher-model-10",
    "href": "slides/foundations/wrightfisher.html#wright-fisher-model-10",
    "title": "The Wright-Fisher model",
    "section": "Wright-Fisher model",
    "text": "Wright-Fisher model\n\n\n\n\n\n\n\n\n\nFigure 1: Wright-Fisher model\n\n\n\n\n\n\n\nSee https://mikeyharper.uk/animated-plots-with-r/",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "The Wright-Fisher model"
    ]
  },
  {
    "objectID": "slides/foundations/wrightfisher.html#wright-fisher-model-11",
    "href": "slides/foundations/wrightfisher.html#wright-fisher-model-11",
    "title": "The Wright-Fisher model",
    "section": "Wright-Fisher model",
    "text": "Wright-Fisher model\n\n\n\n\n\n\n\n\n\n\nFigure 2: WF model indicating time direction from past (top) to present (bottom).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 3: WF model tracing the genealogies of all extant chromosomes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 4: WF model tracing the genealogies of three extant chromosomes\n\n\n\n\n\n\n\n\n\n\nObservations\n\nmost lineages are lost over time\nlooking backwards in time genes eventually coalesce at a common ancestor\nlooking backwards in time sampled genes can be described by a genealogy",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "The Wright-Fisher model"
    ]
  },
  {
    "objectID": "slides/foundations/wrightfisher.html#the-wright-fisher-sampling-model",
    "href": "slides/foundations/wrightfisher.html#the-wright-fisher-sampling-model",
    "title": "The Wright-Fisher model",
    "section": "The Wright-Fisher sampling model",
    "text": "The Wright-Fisher sampling model\nLet’s formalise the sampling process of the Wright-Fisher model1. We assume\n\na single locus in a haploid population of size 2N (or diploid of size N when random mating)\nno mutation and selection\ndiscrete generations\n\nEach generation we sample 2N new chromosomes from the previous generation. The probability of choosing a chromosome v is 1/2N (coin flip with probability of success 1/2N). Since the trials are independent, and we perform 2N trials, the number of offspring k of a given chromosome v is binomially distributed \\mathrm{Bin}(m, p), with parameters m=2N and probability of success p=\\frac{1}{2N}.\n\nWe assume some familiarity with Binomial sampling. For reference, some mathematical formality follows.\nLet p be the probability of heads (=1) of a coin flip, and q=1-p the probability of tails (=0). A coin flip can be modelled by a random variable (r.v.) X that follows a Bernoulli distribution, where \\mathrm{Pr(}X=1\\mathrm{)}=p, \\mathrm{Pr(}X=0\\mathrm{)}=1-p=q. One can show (e.g., with transforms such as the probability-generating function) that a binomially distributed variable Y\\sim Bin(n, p) is the sum of n independent Bernoulli variables X (“Bernoulli trials”), or Y=\\sum^nX. In our case, there are 2N trials, each with p=1/2N.\n\nP(v=k) = {2N\\choose k}\\left( \\frac{1}{2N} \\right)^k\n\\left(1 - \\frac{1}{2N} \\right)^{(2N - k)}\n\n\nFor a more extensive treatment, see Hermisson (2017) or Hein et al. (2005)",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "The Wright-Fisher model"
    ]
  },
  {
    "objectID": "slides/foundations/wrightfisher.html#properties-of-wright-fisher-sampling",
    "href": "slides/foundations/wrightfisher.html#properties-of-wright-fisher-sampling",
    "title": "The Wright-Fisher model",
    "section": "Properties of Wright-Fisher sampling",
    "text": "Properties of Wright-Fisher sampling\n\n\n\nThe expected number of offspring is one\n\n\n\n\n\n\n\n\n\n\n\nPoisson approximation for large N\n\n\n\n\n\n\n\n\n\n\nP(v=k) \\approx \\frac{1}{k!}e^{-k}\n\n\n\n\nProb(pick same parent) = 1/2N\n\n\n\n\n\n\n\n\n\n\n\nTime for two sequences to coalesce \\sim 1/2N\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMany of the results above follow from standard results in probability theory and are provided here in brevity for reference to the interested reader. The details are not necessary to understand in detail.\nExpected number of offspring\nThe expected value of a \\mathrm{Bin}(m,p) (binomially distributed) variable with parameters m=2N and p=\\frac{1}{2N} is mp, hence:\n\nE(v) = mp = 2N\\frac{1}{2N} = 1\n\nPoisson approximation\nWhen 2N large it holds that the probability that sequence v has k offspring is\n\nP(v=k) \\approx \\frac{1}{k!}e^{-k}\n\nSince P(v=0) = e^{-1} \\approx 0.37, a fraction 0.37 of sequences lack descendants\nProbability that two sequences pick same parent\nLet u and v be two sequences. Pick a parent p_u of u. Then the probability that v picks the same parent is (solid lines)\n\nP(p_u=p_v) = \\frac{1}{2N}\n\nThe probability that they pick different parents is\n\nP(p_u \\neq p_v) = 1 - \\frac{1}{2N}\n\nTime for two sequences to coalescent\nTime for two sequences u and v to find common ancestor distributed as (1 - \\frac{1}{2N})^{j-1}\\frac{1}{2N} (j-1 failures followed by success). This is the geometric distribution Ge(p), with parameter p=\\frac{1}{2N}, and expected value \\frac{1}{p}={2N}. That is, the expected number of generations for two sequences to find a common ancestor (i.e., coalesce) is 2N generations.\nSince a large fraction of genes lack descendants, very quickly (compared to 2N) a population will descend from a small proportion of genes.\nDerivation of average time to having same parent (i.e., coalescence) requires knowledge of geometric distribution. The probability that the genes find common parent j generations ago is\n\n(1-\\frac{1}{2N})^{(j-1)}\\frac{1}{2N}\n\ndue to independence between generations. This is the geometric distribution Ge(p) with p=1/2N, which has expected value 1/p, i.e., 2N in this case.",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "The Wright-Fisher model"
    ]
  },
  {
    "objectID": "slides/foundations/wrightfisher.html#bibliography",
    "href": "slides/foundations/wrightfisher.html#bibliography",
    "title": "The Wright-Fisher model",
    "section": "Bibliography",
    "text": "Bibliography\n\n\nHein, J., Schierup, M. H., & Wiuf, C. (2005). Gene genealogies, variation and evolution: A primer in coalescent theory. Oxford University Press. https://books.google.se/books?id=CCmLNAEACAAJ\n\n\nHein, J., Schierup, M., & Wiuf, C. (2004). Gene genealogies, variation and evolution. A primer in coalescent theory. In Systematic Biology - SYST BIOL (Vol. 54).\n\n\nHermisson, J. (2017). Mathematical population genetics. https://www.mabs.at/fileadmin/user_upload/p_mabs/Lecture_Notes_2017",
    "crumbs": [
      "Slides",
      "Population genetics foundations",
      "The Wright-Fisher model"
    ]
  },
  {
    "objectID": "slides/variant_calling/index.html",
    "href": "slides/variant_calling/index.html",
    "title": "Variant calling",
    "section": "",
    "text": "Collection of presentations on DNA sequencing and variant calling.",
    "crumbs": [
      "Slides",
      "Variant calling",
      "Variant calling"
    ]
  },
  {
    "objectID": "slides/variant_calling/index.html#about",
    "href": "slides/variant_calling/index.html#about",
    "title": "Variant calling",
    "section": "",
    "text": "Collection of presentations on DNA sequencing and variant calling.",
    "crumbs": [
      "Slides",
      "Variant calling",
      "Variant calling"
    ]
  },
  {
    "objectID": "slides/variant_calling/index.html#listing",
    "href": "slides/variant_calling/index.html#listing",
    "title": "Variant calling",
    "section": "Listing",
    "text": "Listing\n\n\n   \n    \n    \n      Order By\n      Default\n      \n        Title\n      \n    \n  \n    \n      \n      \n    \n\n\n\n\n\n\nTitle\n\n\n\nDescription\n\n\n\n\n\n\n\n\nRead mapping\n\n\n\n\n\n\n\n\n\nVariant calling and genotyping\n\n\n\n\n\n\n\n\n\nVariant calling workflows\n\n\nIntroduction to variant calling and genotyping using workflow managers.\n\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "Slides",
      "Variant calling",
      "Variant calling"
    ]
  },
  {
    "objectID": "slides/variant_calling/variant_calling.html#variant-and-genotype-calling",
    "href": "slides/variant_calling/variant_calling.html#variant-and-genotype-calling",
    "title": "Variant calling and genotyping",
    "section": "Variant and genotype calling",
    "text": "Variant and genotype calling\n\n\n\n\n\n\n\n\n\n\nNielsen et al. (2011)\n\n\n\nSNP calling\n\nIdentification of polymorphic sites (&gt;1% allele frequency)\n\nVariant calling\n\nIdentification of variant sites (sufficient that any allele differs); single nucleotide variant (SNV)\n\nGenotype calling\n\nDetermine the allele combination for each individual (aa, aA, or AA for bi-allelic variants)\n\n\n\nKnowing variant sites informs us of possible genotypes and improves genotyping.\nExample: knowing a site has A or C limits possible genotype calls to AA, AC, or CC\n\n\n\nFigure caption from (Nielsen et al., 2011):\n\nPre-processing steps (shown in yellow) transform the raw data from next-generation sequencing technology into a set of aligned reads that have a measure of confidence, or quality score, associated with the bases of each read. The per-base quality scores produced by base-calling algorithms may need to be recalibrated to accurately reflect the true error rates. Depending on the number of samples and the depth of coverage, either a multi-sample calling procedure (green) or a single-sample calling procedure (orange) may then be applied to obtain SNP or genotype calls and associated quality scores. Note that the multi-sample procedure may include a linkage-based analysis, which can substantially improve the accuracy of SNP or genotype calls. Finally, post-processing (purple) uses both known data and simple heuristics to filter the set of SNPs and/or improve the associated quality scores. Optional, although recommended, steps are shown in dashed lines.",
    "crumbs": [
      "Slides",
      "Variant calling",
      "Variant calling and genotyping"
    ]
  },
  {
    "objectID": "slides/variant_calling/variant_calling.html#variants-show-up-in-pileup-alignments",
    "href": "slides/variant_calling/variant_calling.html#variants-show-up-in-pileup-alignments",
    "title": "Variant calling and genotyping",
    "section": "Variants show up in pileup alignments",
    "text": "Variants show up in pileup alignments\n\n\n\nSample PUN-Y-INJ\n\n\n\n\nLG4:30430\n\n\n\n\n\n\nLG4:30430\n\na,,a,,,,,,,,,,,,,,,,,,,,,,,,,,,,a,,a,,,,,,,,,,,,,,,,,,,,,,,,,,,a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,a,,,,,,,,,,,,,,,,,,,,,,a,,,,,aa,a,,,,,,,,,,,,,,,,,,,,,,,,,,,a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,  ,,,,,,,,,,,,,a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n\n\n\n\n\n\n\nSample PUN-R-ELF\n\n\n\n\nLG4:30430\n\n\n\n\n\n\nLG4:30430\n\n 30431     30441     30451     30461     30471              CATTGGCAATGGCATCAGTTGAGCATCTTAGTACGAACTAAAAGCTGCGAAAAAATATTT...............A............................................,,,,,,,                           .........................................A.....                  ....................................A...A....               ....................................A.........                                   ...............A...........C.............                   ,,,,,,,,,,,,,,,a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,...............A............................................,,,,,,,,,,,,,,,a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,...............A............................................,,,g,,,,,,,a,,,a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,  .............A............................................\n\n\n\n\n\n\n\nPotential variants show up as multiple mismatches in a column. Two questions arise:\n\nhow do we detect variant sites?\nhow do we distinguish variants from sequencing error?\n\n\n\n\nSimple approach: filter bases on quality (e.g., Q20), call heterozygous if 20-80% bases non-reference.\nIssues: undercalls heterozygotes, no measure of uncertainty\n\n\nSolution: probabilistic methods!\n\n(Nielsen et al., 2011)\n\n\n\n\nPotential variants show up as multiple mismatches in a column. Left sample has three reads that match the reference so is probably heterozygote. For the right sample no read matches reference so most likely call is homozygote alternate.",
    "crumbs": [
      "Slides",
      "Variant calling",
      "Variant calling and genotyping"
    ]
  },
  {
    "objectID": "slides/variant_calling/variant_calling.html#we-can-calculate-likelihoods-of-observed-data",
    "href": "slides/variant_calling/variant_calling.html#we-can-calculate-likelihoods-of-observed-data",
    "title": "Variant calling and genotyping",
    "section": "We can calculate likelihoods of observed data",
    "text": "We can calculate likelihoods of observed data\nExample (excluding sequencing error!)\n\n\n\n\n\n\n\n\n\n\n\n\n\n   TGC.K....,,,.T..T....,,,,t,\n\n\n\n\n\n\nGoal: calculate likelihood of observing X=G,g,T,T,G,g,t from a genotype G. Denote by X_i the observation at each position i of X. We further assume each observation X_i can be treated independently. We restrict possible genotypes to the observed alleles (i.e., G, T). Some observations:\n\nProb(X_1=G assuming genotype G=T,T) = P(X_1=G|T,T) = 0\n\n\nProb(X_1=G assuming genotype G,G) = P(X_1=G|G,G) = 1\n\n\nProb(X_1=G assuming genotype G,T) = P(X_1=G|G,T) = 0.5\n\n\nTo get total likelihood P(X|G) assuming a genotype G (here G,T), we can multiply over all observations (reads):\n\n\\begin{align}\n    P(X|\\mathsf{G,T}) & = P(X_1=\\mathsf{G}|\\mathsf{G,T})%%\nP(X_2=\\mathsf{g}|\\mathsf{G,T})%%\nP(X_3=\\mathsf{T}|\\mathsf{G,T})%%\nP(X_4=\\mathsf{T}|\\mathsf{G,T}) \\\\\n    & P(X_5=\\mathsf{G}|\\mathsf{G,T})%%\n    P(X_6=\\mathsf{g}|\\mathsf{G,T})%%\n    P(X_7=\\mathsf{t}|\\mathsf{G,T}) = 0.5^7\n\\end{align}\n\n\n\n\nWe restrict the possible genotypes to the observed alleles at a site (here G and T). If there are more than two observed alleles, a common procedure is to pick the two with highest frequencies, under the assumption that the rarest observation is a sequencing error.\nIn reality, we also need to take into account sequencing error. There are different ways of doing this (e.g. Maruki & Lynch (2017), DePristo et al. (2011)), but we leave the details to the interested reader.",
    "crumbs": [
      "Slides",
      "Variant calling",
      "Variant calling and genotyping"
    ]
  },
  {
    "objectID": "slides/variant_calling/variant_calling.html#we-can-use-bayes-theorem-to-genotype",
    "href": "slides/variant_calling/variant_calling.html#we-can-use-bayes-theorem-to-genotype",
    "title": "Variant calling and genotyping",
    "section": "We can use Bayes’ theorem to genotype",
    "text": "We can use Bayes’ theorem to genotype\nExample\n\n\n\n\n\n\n\n\n\n\n\n\n\n   TGC.K....,,,.T..T....,,,,t,\n\n\n\n\n\n\nFor a given site, we have a number of observations X. We have shown we can calculate the likelihood of observing X given a genotype G, P(X|G).\n\nHowever; what we really want to know is the most likely genotype G given the data X, or P(G|X).\n\n\nApply Bayes’ theorem:\n\n\nP(G|X) \\sim P(X|G)\\cdot P(G)\n\n\n\n\n\n\\text{posterior} \\sim \\text{likelihood} \\cdot \\text{prior}\n\n\n\nConsequently we need to set a prior on G. If allele frequencies are known, we can constrain the frequencies; for example, if A is known to be low (\\sim1%) AA genotype is very unlikely. Otherwise, could set all equal (flat prior).\n\n\n\ncf https://gatk.broadinstitute.org/hc/en-us/articles/360035890511\nR. Li et al. (2009), Table 1, shows a nice numerical example of one way of setting priors. The authors assume a specific allele, G, in the reference sequence:\n–G–\nThey start by calculating the frequency of haploid genotypes. They first determine p_G by assuming a heterozygous SNP rate f=0.001, which means 1 in a 1000 sites has G/G genotype mutated to G/X, where X is one of {A,C,T}. They assume a transition to transversion (ts/tv) ratio of 4, meaning X=A four times as often as C or T (there is an error in the text where C is taken to be the transition; the numbers in the table are correct however). This gives the following haploid genotype frequencies:\n\\begin{align}\np_G & = 1-f = 0.999 \\\\\np_A & = 4f/6 = 6.67\\times10^{-4} \\\\\np_C & = f/6 = 1.67\\times10^{-4}\\\\\np_T & = f/6 =1.67\\times10^{-4}\n\\end{align}\nTo get the diploid genotypes, we simply multiply the corresponding entries, e.g., p_{AC} = p_Ap_C. For homozygote ALT, we need to account for the homozygous SNP rate r = 0.0005, where G/G mutates to X/X, for X one of {A,C,T}:\n\\begin{align}\np_{AA} & = p_Ap_A + 4r/6 = 3.33\\times10^{-4} \\\\\np_{AC} & = p_Ap_C = 1.11\\times10^{-7}\\\\\np_{AT} & = p_Ap_T = 1.11\\times10^{-7}\\\\\np_{CC} & = p_Cp_C + r/6 = 8.34\\times10^{-5} \\\\\np_{CG} & = p_Cp_G = 1.67\\times10^{-4}\\\\\np_{CT} & = p_Cp_T = 2.78\\times10^{-8}\\\\\np_{GG} & = 1 - f - r = 0.9985 \\\\\np_{GT} & = p_Gp_T = 1.67\\times10^{-4}\\\\\np_{TT} & = p_Tp_T + r = 8.34\\times10^{-5}\\\\\n\\end{align}",
    "crumbs": [
      "Slides",
      "Variant calling",
      "Variant calling and genotyping"
    ]
  },
  {
    "objectID": "slides/variant_calling/variant_calling.html#genotype-likelihoods",
    "href": "slides/variant_calling/variant_calling.html#genotype-likelihoods",
    "title": "Variant calling and genotyping",
    "section": "Genotype likelihoods",
    "text": "Genotype likelihoods\nWe have outlined a probabilistic approach to variant calling where we obtain a posterior probability of observing a genotype G given data X:\n\nP(G|X) \\sim P(X|G)P(G)\n\n\nAssuming a bi-allelic site, and letting H_1, H_2 denote the two alleles, we have three possible genotype likelihoods P(H_1H_1|X), P(H_1H_2|X), and P(H_2H_2|X).\n\n\nThe highest posterior probability is typically chosen as the genotype call, with a measure confidence represented by the genotype probability or ratio between the two most probable calls.\n\n\nGenotype likelihoods are often represented as Phred-scaled likelihoods (again!):\n\n\\text{QUAL} = -10 \\log_{10} P(G|X)",
    "crumbs": [
      "Slides",
      "Variant calling",
      "Variant calling and genotyping"
    ]
  },
  {
    "objectID": "slides/variant_calling/variant_calling.html#variant-call-format-vcf---header",
    "href": "slides/variant_calling/variant_calling.html#variant-call-format-vcf---header",
    "title": "Variant calling and genotyping",
    "section": "Variant Call Format (VCF) - header",
    "text": "Variant Call Format (VCF) - header\n\n\nbcftools view --header-only vcf/allsites.vcf.gz | head --lines 1\nbcftools view --header-only vcf/allsites.vcf.gz | grep \"##FILTER\"\nbcftools view -h vcf/allsites.vcf.gz | grep \"##INFO\" | head -n 4\nbcftools view -h vcf/allsites.vcf.gz | grep \"##FORMAT\" | head -n 8\n\n##fileformat=VCFv4.2\n##FILTER=&lt;ID=PASS,Description=\"All filters passed\"&gt;\n##FILTER=&lt;ID=LowQual,Description=\"Low quality\"&gt;\n##INFO=&lt;ID=AC,Number=A,Type=Integer,Description=\"Allele count in genotypes, for each ALT allele, in the same order as listed\"&gt;\n##INFO=&lt;ID=AF,Number=A,Type=Float,Description=\"Allele Frequency, for each ALT allele, in the same order as listed\"&gt;\n##INFO=&lt;ID=AN,Number=1,Type=Integer,Description=\"Total number of alleles in called genotypes\"&gt;\n##INFO=&lt;ID=BaseQRankSum,Number=1,Type=Float,Description=\"Z-score from Wilcoxon rank sum test of Alt Vs. Ref base qualities\"&gt;\n##FORMAT=&lt;ID=AD,Number=R,Type=Integer,Description=\"Allelic depths for the ref and alt alleles in the order listed\"&gt;\n##FORMAT=&lt;ID=DP,Number=1,Type=Integer,Description=\"Approximate read depth (reads with MQ=255 or with bad mates are filtered)\"&gt;\n##FORMAT=&lt;ID=GQ,Number=1,Type=Integer,Description=\"Genotype Quality\"&gt;\n##FORMAT=&lt;ID=GT,Number=1,Type=String,Description=\"Genotype\"&gt;\n##FORMAT=&lt;ID=MIN_DP,Number=1,Type=Integer,Description=\"Minimum DP observed within the GVCF block\"&gt;\n##FORMAT=&lt;ID=PGT,Number=1,Type=String,Description=\"Physical phasing haplotype information, describing how the alternate alleles are phased in relation to one another; will always be heterozygous and is not intended to describe called alleles\"&gt;\n##FORMAT=&lt;ID=PID,Number=1,Type=String,Description=\"Physical phasing ID information, where each unique ID within a given sample (but not across samples) connects records within a phasing group\"&gt;\n##FORMAT=&lt;ID=PL,Number=G,Type=Integer,Description=\"Normalized, Phred-scaled likelihoods for genotypes as defined in the VCF specification\"&gt;\n\n\nFILTER defines applied filters , INFO fields provide additional information to genotypes, FORMAT specification fields define genotype entries, and more. NB: PL format definition.\n\n\nhttps://samtools.github.io/hts-specs/VCFv4.4.pdf",
    "crumbs": [
      "Slides",
      "Variant calling",
      "Variant calling and genotyping"
    ]
  },
  {
    "objectID": "slides/variant_calling/variant_calling.html#variant-call-format-vcf---data",
    "href": "slides/variant_calling/variant_calling.html#variant-call-format-vcf---data",
    "title": "Variant calling and genotyping",
    "section": "Variant Call Format (VCF) - data",
    "text": "Variant Call Format (VCF) - data\n\nbcftools view --header-only --samples PUN-R-ELF,PUN-Y-INJ vcf/allsites.vcf.gz |\\\n tail --lines 1\nbcftools view --no-header  --samples PUN-R-ELF,PUN-Y-INJ vcf/allsites.vcf.gz LG4:6886\n\n#CHROM  POS ID  REF ALT QUAL    FILTER  INFO    FORMAT  PUN-R-ELF   PUN-Y-INJ\nLG4 6886    .   C   T   804.48  .   AC=2;AF=0.222;AN=4;BaseQRankSum=0;DP=82;ExcessHet=1.8123;FS=1.309;MLEAC=4;MLEAF=0.222;MQ=60;MQRankSum=0;QD=20.63;ReadPosRankSum=0.577;SOR=0.44  GT:AD:DP:GQ:PGT:PID:PL:PS   0/1:3,8:11:89:.:.:293,0,89:.    0/1:2,2:4:35:.:.:35,0,35:.\n\n\n\nQUAL: Phred-scaled quality score for Prob(ALT is wrong): 722.43 (p=10^{-Q/10}=5.7e-73)\nINFO field summarizes data for all samples. For instance:\n\nallele count 2 (AC=2)\nallele frequency minor allele 0.222 (AF=0.222)\n\n\n\nhttps://samtools.github.io/hts-specs/VCFv4.4.pdf",
    "crumbs": [
      "Slides",
      "Variant calling",
      "Variant calling and genotyping"
    ]
  },
  {
    "objectID": "slides/variant_calling/variant_calling.html#variant-call-format-vcf---data-1",
    "href": "slides/variant_calling/variant_calling.html#variant-call-format-vcf---data-1",
    "title": "Variant calling and genotyping",
    "section": "Variant Call Format (VCF) - data",
    "text": "Variant Call Format (VCF) - data\n\n\n#CHROM  POS ID  REF ALT QUAL    FILTER  INFO    FORMAT  PUN-R-ELF   PUN-Y-INJ\nLG4 6886    .   C   T   804.48  .   AC=2;AF=0.222;AN=4;BaseQRankSum=0;DP=82;ExcessHet=1.8123;FS=1.309;MLEAC=4;MLEAF=0.222;MQ=60;MQRankSum=0;QD=20.63;ReadPosRankSum=0.577;SOR=0.44  GT:AD:DP:GQ:PGT:PID:PL:PS   0/1:3,8:11:89:.:.:293,0,89:.    0/1:2,2:4:35:.:.:35,0,35:.\n\n\n\n\n\nGenotypes (GT:AD:DP:GQ:PGT:PID:PL:PS)\n\nPUN-R-ELF: 0/1:3,8:11:50:.:.:189,0,50:.\nGT=0/1, AD=3,8 =&gt; 3 REF, 8 ALT, DP=11 =&gt; sequence depth = 11, PL=189,0,50\nPUN-Y-INJ: 0/1:2,2:4:45:.:.:45,0,45:.\nGT=0/1, AD=2,2 =&gt; 2 REF, 2 ALT, DP=4 =&gt; sequence depth = 4, PL=45,0,45\n\n\nRelative genotype probabilities\n\nCan convert Phred-scaled quality scores to probabilities as\n\np = 10^{-Q/10}\n\nFor PUN-R-ELF the relative probabilities are 10^{-189/10}\\approx1.26e-9, 10^{0}=1, 10^{50}=10^{-5}.\nInterpretation: 0/1 10,000 times more likely than 1/1 (1/10^{-5})\n\n\n\n\n\n\n\nELF\n\n\n\n\n\n\nELF\n\n   TCT.Y..T.....T.,,,.T.,,,.T..........,t,,t,,t,,t,\n\n\n\n\n\n\n\nINJ\n\n\n\n\n\n\nINJ\n\n   TCT.Y..T....,,,,,,,,,.T.\n\n\n\n\n\nQUAL: Phred-scaled quality score for the assertion made in ALT. i.e. -10log_{10} prob(call in ALT is wrong)",
    "crumbs": [
      "Slides",
      "Variant calling",
      "Variant calling and genotyping"
    ]
  },
  {
    "objectID": "slides/variant_calling/variant_calling.html#gatk-best-practice",
    "href": "slides/variant_calling/variant_calling.html#gatk-best-practice",
    "title": "Variant calling and genotyping",
    "section": "GATK best practice",
    "text": "GATK best practice\n\n\n\n\n\n\n\n\nhttps://gatk.broadinstitute.org/hc/en-us/articles/360035535932-Germline-short-variant-discovery-SNPs-Indels-\n\n\n\nPros\n\n\nBest practices\nLarge documentation\nVariant quality score recalibration\n\n\nCons\n\n\nHuman-centric - very slow runtime on genomes with many sequences\nComplicated setup",
    "crumbs": [
      "Slides",
      "Variant calling",
      "Variant calling and genotyping"
    ]
  },
  {
    "objectID": "slides/variant_calling/variant_calling.html#alternative-variant-callers",
    "href": "slides/variant_calling/variant_calling.html#alternative-variant-callers",
    "title": "Variant calling and genotyping",
    "section": "Alternative variant callers",
    "text": "Alternative variant callers\n\n\nfreebayes\nBayesian genetic variant detector. Simpler setup.\nMay struggle in high-coverage regions.\n\n(Garrison & Marth, 2012)\n\n\nbcftools\nUtilities for variant calling and manipulating VCFs and BCFs.\n\n(Danecek et al., 2021)\n\n\nANGSD\nFor low-coverage sequencing. Doesn’t do explicit genotyping; most methods take genotype uncertainty into account.\n\n(Korneliussen et al., 2014)\n\n\n\nReference bias: plot no. hets vs coverage for real data, e.g., conifer\n\n\nNB: samtools and GATK may actually produce different genotypes despite having identical GLs. Samtools applies prior 10^{-3} to het call, GATK has no prior (H. Li, 2014)",
    "crumbs": [
      "Slides",
      "Variant calling",
      "Variant calling and genotyping"
    ]
  },
  {
    "objectID": "slides/variant_calling/variant_calling.html#bibliography",
    "href": "slides/variant_calling/variant_calling.html#bibliography",
    "title": "Variant calling and genotyping",
    "section": "Bibliography",
    "text": "Bibliography\n\n\n\n\n\n\n\n\n\n\n\n\nDanecek, P., Bonfield, J. K., Liddle, J., Marshall, J., Ohan, V., Pollard, M. O., Whitwham, A., Keane, T., McCarthy, S. A., Davies, R. M., & Li, H. (2021). Twelve years of SAMtools and BCFtools. GigaScience, 10(2), giab008. https://doi.org/10.1093/gigascience/giab008\n\n\nDePristo, M. A., Banks, E., Poplin, R., Garimella, K. V., Maguire, J. R., Hartl, C., Philippakis, A. A., del Angel, G., Rivas, M. A., Hanna, M., McKenna, A., Fennell, T. J., Kernytsky, A. M., Sivachenko, A. Y., Cibulskis, K., Gabriel, S. B., Altshuler, D., & Daly, M. J. (2011). A framework for variation discovery and genotyping using next-generation DNA sequencing data. Nature Genetics, 43(5), 491–498. https://doi.org/10.1038/ng.806\n\n\nGarrison, E., & Marth, G. (2012). Haplotype-based variant detection from short-read sequencing. arXiv:1207.3907 [q-Bio]. http://arxiv.org/abs/1207.3907\n\n\nKorneliussen, T. S., Albrechtsen, A., & Nielsen, R. (2014). ANGSD: Analysis of Next Generation Sequencing Data. BMC Bioinformatics, 15(1), 356. https://doi.org/10.1186/s12859-014-0356-4\n\n\nLi, H. (2014). Toward better understanding of artifacts in variant calling from high-coverage samples. Bioinformatics, 30(20), 2843–2851. https://doi.org/10.1093/bioinformatics/btu356\n\n\nLi, R., Li, Y., Fang, X., Yang, H., Wang, J., Kristiansen, K., & Wang, J. (2009). SNP detection for massively parallel whole-genome resequencing. Genome Research, 19(6), 1124–1132. https://doi.org/10.1101/gr.088013.108\n\n\nMaruki, T., & Lynch, M. (2017). Genotype Calling from Population-Genomic Sequencing Data. G3 Genes|Genomes|Genetics, 7(5), 1393–1404. https://doi.org/10.1534/g3.117.039008\n\n\nNielsen, R., Paul, J. S., Albrechtsen, A., & Song, Y. S. (2011). Genotype and SNP calling from next-generation sequencing data. Nature Reviews Genetics, 12(6), 443–451. https://doi.org/10.1038/nrg2986",
    "crumbs": [
      "Slides",
      "Variant calling",
      "Variant calling and genotyping"
    ]
  },
  {
    "objectID": "slides/variant_filtering/index.html",
    "href": "slides/variant_filtering/index.html",
    "title": "Variant filtering",
    "section": "",
    "text": "Collection of presentations on variant filtering.",
    "crumbs": [
      "Slides",
      "Variant filtering",
      "Variant filtering"
    ]
  },
  {
    "objectID": "slides/variant_filtering/index.html#about",
    "href": "slides/variant_filtering/index.html#about",
    "title": "Variant filtering",
    "section": "",
    "text": "Collection of presentations on variant filtering.",
    "crumbs": [
      "Slides",
      "Variant filtering",
      "Variant filtering"
    ]
  },
  {
    "objectID": "slides/variant_filtering/index.html#listing",
    "href": "slides/variant_filtering/index.html#listing",
    "title": "Variant filtering",
    "section": "Listing",
    "text": "Listing\n\n\n   \n    \n    \n      Order By\n      Default\n      \n        Title\n      \n    \n  \n    \n      \n      \n    \n\n\n\n\n\n\nTitle\n\n\n\nDescription\n\n\n\n\n\n\n\n\nVariant filtering\n\n\nIntroduction to manual variant filtering using context statistics.\n\n\n\n\n\n\nDepth filtering\n\n\nVariant filtering based on sequencing depth\n\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "Slides",
      "Variant filtering",
      "Variant filtering"
    ]
  },
  {
    "objectID": "slides/variant_filtering/depth_filtering.html#motivation",
    "href": "slides/variant_filtering/depth_filtering.html#motivation",
    "title": "Depth filtering",
    "section": "Motivation",
    "text": "Motivation\n\n\nSome organisms generate a lot of data…\n\nTotal variant file size: 7.4T!!!\nWithout invariant sites!\n\n\nSolution: sequence masks\n\n…it may be possible for more advanced users to achieve similar results with existing tools. For example, with the inclusion of a user-created “accessibility mask”, it should be possible to avoid the “missing sites” effect…\n\n\n(Korunes & Samuk, 2021)\n\n\n\n\nSpruce variant files, chromosome 1\n\n\n48G     PA_chr01_10.vcf.gz\n45G     PA_chr01_11.vcf.gz\n51G     PA_chr01_12.vcf.gz\n50G     PA_chr01_13.vcf.gz\n45G     PA_chr01_14.vcf.gz\n51G     PA_chr01_15.vcf.gz\n51G     PA_chr01_16.vcf.gz\n35G     PA_chr01_17.vcf.gz\n49G     PA_chr01_1.vcf.gz\n50G     PA_chr01_2.vcf.gz\n52G     PA_chr01_3.vcf.gz\n51G     PA_chr01_4.vcf.gz\n54G     PA_chr01_5.vcf.gz\n51G     PA_chr01_6.vcf.gz\n37G     PA_chr01_7.vcf.gz\n51G     PA_chr01_8.vcf.gz\n47G     PA_chr01_9.vcf.gz",
    "crumbs": [
      "Slides",
      "Variant filtering",
      "Depth filtering"
    ]
  },
  {
    "objectID": "slides/variant_filtering/depth_filtering.html#coverage-tracks-and-sequence-masks",
    "href": "slides/variant_filtering/depth_filtering.html#coverage-tracks-and-sequence-masks",
    "title": "Depth filtering",
    "section": "Coverage tracks and sequence masks",
    "text": "Coverage tracks and sequence masks",
    "crumbs": [
      "Slides",
      "Variant filtering",
      "Depth filtering"
    ]
  },
  {
    "objectID": "slides/variant_filtering/depth_filtering.html#coverage-tracks-and-sequence-masks-1",
    "href": "slides/variant_filtering/depth_filtering.html#coverage-tracks-and-sequence-masks-1",
    "title": "Depth filtering",
    "section": "Coverage tracks and sequence masks",
    "text": "Coverage tracks and sequence masks",
    "crumbs": [
      "Slides",
      "Variant filtering",
      "Depth filtering"
    ]
  },
  {
    "objectID": "slides/variant_filtering/depth_filtering.html#coverage-tracks-and-sequence-masks-2",
    "href": "slides/variant_filtering/depth_filtering.html#coverage-tracks-and-sequence-masks-2",
    "title": "Depth filtering",
    "section": "Coverage tracks and sequence masks",
    "text": "Coverage tracks and sequence masks",
    "crumbs": [
      "Slides",
      "Variant filtering",
      "Depth filtering"
    ]
  },
  {
    "objectID": "slides/variant_filtering/depth_filtering.html#coverage-tracks-and-sequence-masks-3",
    "href": "slides/variant_filtering/depth_filtering.html#coverage-tracks-and-sequence-masks-3",
    "title": "Depth filtering",
    "section": "Coverage tracks and sequence masks",
    "text": "Coverage tracks and sequence masks",
    "crumbs": [
      "Slides",
      "Variant filtering",
      "Depth filtering"
    ]
  },
  {
    "objectID": "slides/variant_filtering/depth_filtering.html#coverage-tracks-and-sequence-masks-4",
    "href": "slides/variant_filtering/depth_filtering.html#coverage-tracks-and-sequence-masks-4",
    "title": "Depth filtering",
    "section": "Coverage tracks and sequence masks",
    "text": "Coverage tracks and sequence masks",
    "crumbs": [
      "Slides",
      "Variant filtering",
      "Depth filtering"
    ]
  },
  {
    "objectID": "slides/variant_filtering/depth_filtering.html#coverage-tracks-and-sequence-masks-5",
    "href": "slides/variant_filtering/depth_filtering.html#coverage-tracks-and-sequence-masks-5",
    "title": "Depth filtering",
    "section": "Coverage tracks and sequence masks",
    "text": "Coverage tracks and sequence masks",
    "crumbs": [
      "Slides",
      "Variant filtering",
      "Depth filtering"
    ]
  },
  {
    "objectID": "slides/variant_filtering/depth_filtering.html#coverage-tracks-and-sequence-masks-6",
    "href": "slides/variant_filtering/depth_filtering.html#coverage-tracks-and-sequence-masks-6",
    "title": "Depth filtering",
    "section": "Coverage tracks and sequence masks",
    "text": "Coverage tracks and sequence masks",
    "crumbs": [
      "Slides",
      "Variant filtering",
      "Depth filtering"
    ]
  },
  {
    "objectID": "slides/variant_filtering/depth_filtering.html#coverage-tracks-and-sequence-masks-7",
    "href": "slides/variant_filtering/depth_filtering.html#coverage-tracks-and-sequence-masks-7",
    "title": "Depth filtering",
    "section": "Coverage tracks and sequence masks",
    "text": "Coverage tracks and sequence masks",
    "crumbs": [
      "Slides",
      "Variant filtering",
      "Depth filtering"
    ]
  },
  {
    "objectID": "slides/variant_filtering/depth_filtering.html#filters-and-masks",
    "href": "slides/variant_filtering/depth_filtering.html#filters-and-masks",
    "title": "Depth filtering",
    "section": "Filters and masks",
    "text": "Filters and masks\n\n\n\n\n\nReference\nCoverage mask\n\n\n\n\n\n&gt;LG4 LG4:12000001-12100000\nGGACAATTACCCCCTCCGTTATGTTTCAGTCAATTTCATGTTTGACTTTTAGATTTTTAA\n000000000011111111110000000000000011111111111000000000000110\n\n\n\n\nMask could also represent annotation features, such as exons, four-fold degenerate sites etc to be combined with coverage mask:\n\n\n\n\n\nReference\nCoverage mask\nExons\n\nCombined\n\n\n\n\n\n&gt;LG4 LG4:12000001-12100000\nGGACAATTACCCCCTCCGTTATGTTTCAGTCAATTTCATGTTTGACTTTTAGATTTTTAA\n111111111100000000001111111111111100000000000111111111111001\n111110000000000000000000000000111111111100000000001111111111\n\n111111111100000000001111111111111111111100000111111111111111\n\n\n\n\n\nUse with vcftools --mask to restrict analyses to certain positions.\nNB! Here 0 is a position that is unmasked, &gt;0 masked",
    "crumbs": [
      "Slides",
      "Variant filtering",
      "Depth filtering"
    ]
  },
  {
    "objectID": "slides/variant_filtering/depth_filtering.html#bibliography",
    "href": "slides/variant_filtering/depth_filtering.html#bibliography",
    "title": "Depth filtering",
    "section": "Bibliography",
    "text": "Bibliography\n\n\nKorunes, K. L., & Samuk, K. (2021). Pixy: Unbiased estimation of nucleotide diversity and divergence in the presence of missing data. Molecular Ecology Resources, 21(4), 1359–1368. https://doi.org/10.1111/1755-0998.13326",
    "crumbs": [
      "Slides",
      "Variant filtering",
      "Depth filtering"
    ]
  },
  {
    "objectID": "slides/genetic_diversity/index.html",
    "href": "slides/genetic_diversity/index.html",
    "title": "Genetic diversity",
    "section": "",
    "text": "Collection of presentations on estimation of genetic diversity and related statistics.",
    "crumbs": [
      "Slides",
      "Genetic diversity",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/genetic_diversity/index.html#about",
    "href": "slides/genetic_diversity/index.html#about",
    "title": "Genetic diversity",
    "section": "",
    "text": "Collection of presentations on estimation of genetic diversity and related statistics.",
    "crumbs": [
      "Slides",
      "Genetic diversity",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "slides/genetic_diversity/index.html#listing",
    "href": "slides/genetic_diversity/index.html#listing",
    "title": "Genetic diversity",
    "section": "Listing",
    "text": "Listing\n\n\n   \n    \n    \n      Order By\n      Default\n      \n        Title\n      \n    \n  \n    \n      \n      \n    \n\n\n\n\n\n\nTitle\n\n\n\nDescription\n\n\n\n\n\n\n\n\nGenetic diversity\n\n\nGenetic diversity, divergence, fst, and other ways to quantify diversity and divergence.\n\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "Slides",
      "Genetic diversity",
      "Genetic diversity"
    ]
  },
  {
    "objectID": "exercises/index.html",
    "href": "exercises/index.html",
    "title": "Exercises",
    "section": "",
    "text": "All exercise pages start with a callout block that provides information on how to setup the relevant Compute environment. The callout blocks are labelled with icons that indicate the type of environment ( PDC resource;  local compute environment;  online browser-based resource). Make sure to read these instructions before proceeding with the exercise itself. Some of the documents include a link to an external URL that hosts the actual exercise instructions.\n\n\n\n\n\n\n Compute environment setup\n\n\n\n\n\nBefore proceeding, make sure to read Compute environment for information on how to prepare your working directory.",
    "crumbs": [
      "Slides",
      "Exercises",
      "Exercises"
    ]
  },
  {
    "objectID": "exercises/index.html#information",
    "href": "exercises/index.html#information",
    "title": "Exercises",
    "section": "",
    "text": "All exercise pages start with a callout block that provides information on how to setup the relevant Compute environment. The callout blocks are labelled with icons that indicate the type of environment ( PDC resource;  local compute environment;  online browser-based resource). Make sure to read these instructions before proceeding with the exercise itself. Some of the documents include a link to an external URL that hosts the actual exercise instructions.\n\n\n\n\n\n\n Compute environment setup\n\n\n\n\n\nBefore proceeding, make sure to read Compute environment for information on how to prepare your working directory.",
    "crumbs": [
      "Slides",
      "Exercises",
      "Exercises"
    ]
  },
  {
    "objectID": "exercises/index.html#on-self-assessment-exercise-blocks",
    "href": "exercises/index.html#on-self-assessment-exercise-blocks",
    "title": "Exercises",
    "section": "On self-assessment exercise blocks",
    "text": "On self-assessment exercise blocks\nScattered throughout the documents are exercise blocks, with hidden answers, and, in some cases, hints. The exercises are for self-assessment of your understanding, but they are not mandatory.\nSome of the exercises (labelled with the Linux penguin ) are related to the usage of the command line interfaces (CLI), and how to obtain information about what a program does. This is an essential skill when working in Linux/UNIX environments! These exercises can be skipped if you are an experienced Linux/UNIX user.\nAn example exercise is provided here:\n\n\n\n\n\n\nExample exercise block\n\n\n\n\n\n\n\n The ls command is used to list the contents of a directory. What option provides a so-called long listing format?\n\n\n\n\n\n\nHint\n\n\n\n\n\n\n\nType ls --help to show the options to ls.\n\n\n\n\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\nThe -l option uses the long listing format, i.e., the command to use is ls -l.",
    "crumbs": [
      "Slides",
      "Exercises",
      "Exercises"
    ]
  },
  {
    "objectID": "exercises/index.html#exercises",
    "href": "exercises/index.html#exercises",
    "title": "Exercises",
    "section": "Exercises",
    "text": "Exercises",
    "crumbs": [
      "Slides",
      "Exercises",
      "Exercises"
    ]
  },
  {
    "objectID": "exercises/datasets/monkeyflowers.html#sec-monkeyflower-model-system",
    "href": "exercises/datasets/monkeyflowers.html#sec-monkeyflower-model-system",
    "title": "Monkeyflowers dataset",
    "section": "The monkeyflower model system",
    "text": "The monkeyflower model system\nMonkeyflowers (Mimulus) have recently become a key model in evolution and plant biology (Pennisi, 2019). The monkeyflower system consists of 160–200 species that display an amazing phenotypic variation. The genome is small, only 207Mbp, which makes it an ideal candidate for genomics - and for computer exercises!",
    "crumbs": [
      "Slides",
      "Exercises",
      "Data",
      "Monkeyflowers dataset"
    ]
  },
  {
    "objectID": "exercises/datasets/monkeyflowers.html#the-monkeyflower-genomic-landscape",
    "href": "exercises/datasets/monkeyflowers.html#the-monkeyflower-genomic-landscape",
    "title": "Monkeyflowers dataset",
    "section": "The monkeyflower genomic landscape",
    "text": "The monkeyflower genomic landscape\nRecently, Stankowski et al. (2019) used the monkeyflower system to investigate what forces affect the genomic landscape. Burri (2017) has suggested that background selection (BGS) is one of the main causes for correlations between genomic landscapes, and that one way to study this phenomenon is to look at closely related taxa. This is one of the objectives of the Stankowski et al. (2019) paper.\nThey performed whole-genome resequencing of 37 individuals from 7 subspecies and 2 ecotypes of Mimulus aurantiacus and its sister taxon M. clevelandii (Figure 1), all sampled in California (Figure 2).\n\n\n\n\n\nFigure 1: Evolutionary relationships across the radiation\n\n\n\n\n\n\n\n\n\nFigure 2: Sampling locations\n\n\nGenomewide statistics, such as diversity (\\(\\pi\\)), divergence (\\(d_{XY}\\)) and differentiation \\(F_{ST}\\), were calculated within and between taxa to generate genomic diversity landscapes. The landscapes were highly similar across taxa, and local variation in genomic features, such as gene density and recombination rate, was predictive of variation in landscape patterns. These features suggest the influence of selection, in particular BGS.\nAlthough many characteristics were predicted by a model where BGS is one of the main causes, there were deviations. Therefore, the authors performed simulations in SLiM (Haller & Messer, 2019) with alternative models to see whether other factors could explain the observed patterns.\nIn all, six scenarios were studied:\n\nneutral evolution\nBGS (non-neutral mutations are deleterious)\nBateson-Dobzhansky-Muller incompatibility (BDMI); after split, a fraction variants deleterious in one population, neutral in other\npositive selection\nBGS and positive selection\nlocal adaptation; as 4 but also after split some variants are beneficial in one population, neutral in other\n\nFigure 3 shows typical results of the simulations.\n\n\n\n\n\nFigure 3: Genomic landscapes simulated under different divergence histories.\n\n\nIn conclusion, the authors found that although BGS plays a role, it does not sufficiently explain all observations, and that other aspects of natural selection (such as rapid adaptation) are responsible for the similarities between genomic landscapes.\nA locus that previously had been associated with differentiation of red and yellow ecotypes was investigated in more detail. The locus is located on linkage group 4 (LG4), and we will be using both a 3Mbp region of interest (ROI) surronding the locus, and the whole linkage group, for different exercises.",
    "crumbs": [
      "Slides",
      "Exercises",
      "Data",
      "Monkeyflowers dataset"
    ]
  },
  {
    "objectID": "exercises/datasets/monkeyflowers.html#data",
    "href": "exercises/datasets/monkeyflowers.html#data",
    "title": "Monkeyflowers dataset",
    "section": "Data",
    "text": "Data\nThe dataset consists of 37 samples (see Table 1 for example information). Raw sequence reads were downloaded from Sequence Read Archive (SRA), bioproject PRJNA549183 and mapped to the reference sequence M_aurantiacus_v1_splitline_ordered.fasta. Reads that mapped to the ROI were extracted and constitute the sequence data that will be used during the exercises.\n\n\n\nTable 1: Example of monkeyflower samples. See file sampleinfo.csv in data repository for full listing.\n\n\n\n\n\nSample\nRun\nScientificName\nSampleName\nTaxon\nLatitude\nLongitude\n\n\n\nSRS4979271\nSRR9309782\nDiplacus longiflorus\nLON-T33_1\nssp. longiflorus\n34.3438\n-118.5099\n\n\nSRS4979267\nSRR9309785\nDiplacus longiflorus\nLON-T8_8\nssp. longiflorus\n34.1347\n-118.6452\n\n\nSRS4979269\nSRR9309784\nErythranthe parviflora\nPAR-KK161\nssp. parviflorus\n34.0180\n-119.6730\n\n\nSRS4979266\nSRR9309787\nErythranthe parviflora\nPAR-KK168\nssp. parviflorus\n34.0180\n-119.6730\n\n\nSRS4979268\nSRR9309786\nErythranthe parviflora\nPAR-KK180\nssp. parviflorus\n34.0180\n-119.6730\n\n\nSRS4979265\nSRR9309789\nErythranthe parviflora\nPAR-KK182\nssp. parviflorus\n34.0193\n-119.6802\n\n\n\n\n\n\n\n\n\nPDC data storage\nThe monkeyflower dataset is located in PDC project pg_pgip_2025 at /cfs/klemming/projects/supr/pgip_2025/data/monkeyflower.\nOnline access\nIn addition, a pre-compiled dataset consisting of the files relevant for exercises is available from https://export.uppmax.uu.se/uppstore2017171/pgip/data/monkeyflower.\nGithub\nThe github repository pgip-data contains reference sequence and read data for 37 monkeyflower individuals for the region LG4:12,000,000-12,100,000. The data resides in the data/monkeyflower/tiny subdirectory. This data set is used as input data to render the website.\nThe repository hosts a Snakemake workflow to generate all data needed for the exercises.",
    "crumbs": [
      "Slides",
      "Exercises",
      "Data",
      "Monkeyflowers dataset"
    ]
  },
  {
    "objectID": "exercises/variant_calling/introduction.html",
    "href": "exercises/variant_calling/introduction.html",
    "title": "Variant calling introduction",
    "section": "",
    "text": "Intendend learning outcomes\n\n\n\n\n\n\nNavigate directory tree\nLook at FASTQ sequence file",
    "crumbs": [
      "Slides",
      "Exercises",
      "Variant calling",
      "Variant calling introduction"
    ]
  },
  {
    "objectID": "exercises/variant_calling/introduction.html#variant-calling",
    "href": "exercises/variant_calling/introduction.html#variant-calling",
    "title": "Variant calling introduction",
    "section": "Variant calling",
    "text": "Variant calling\nA generic variant calling workflow consists of the following basic steps:\n\nread quality control and filtering\nread mapping\nremoval / marking of duplicate reads\njoint / sample-based variant calling and genotyping\n\nThere are different tweaks and additions to each of these steps, depending on application and method.\n1. Read quality control\n\n\n\n\n\n\n\n\nFigure 1: Per base quality scores, read 1 (upper) and read 2 (lower panel), obtained from the FastQC program. Quality values are on the \\(y\\)-axis, base position in sequence read on \\(x\\)-axis.\n\n\nDNA sequencers score the quality of each sequenced base as phred quality scores, which is equivalent to the probability \\(P\\) that the call is incorrect. The base quality scores, denoted \\(Q\\), are defined as\n\\[\nQ = -10 \\log_{10} P\n\\]\nwhich for \\(P=0.01\\) gives \\(Q=20\\). Converting from quality to probability is done by solving for \\(P\\):\n\\[\nP = 10^{-Q/10}\n\\]\nHence, a base quality score \\(Q=20\\) (somtimes written Q20) corresponds to a 1% probability that the call is incorrect, Q30 a 0.1% probability, and so on, where the higher the quality score, the better. Bases with low quality scores are usually discarded from downstream analyses, but what is a good threshold? The human genome has approximately 1 SNP per 1,000 bp, which means sequencing errors will be ten times as probable in a single read for Q20 base calls. A reasonable threshold is therefore around Q20-Q30 for many purposes.\nThe base qualities typically drop towards the end of the reads (Figure 1). Prior to mapping it may therefore be prudent to remove reads that display too high drop in quality, too low mean quality, or on some other quality metric reported by the qc software.\nThe quality scores are encoded using ASCII codes. An example of a FASTQ sequence is given below. The code snippet shows an example of shell commands1 that are separated by a so-called pipe (|) character which takes the output from one process and sends it as input to the next2.\nNote that we use the long option names to clarify commands, and we aim to do so consistently when a new command is introduced. Once you feel confident you know what a command does, you will probably want to switch to short option names, and we may do so in the instructions for some commonly used commands (e.g., head -n) without warning. Remember to use --help to examine command options.\n\n# Command using long (-- prefix) option names\nzcat fastq/PUN-Y-INJ_R1.fastq.gz | head --lines 4 | cut --characters -30\n# Equivalent command using short (single -, single character) option names\n# zcat fastq/PUN-Y-INJ_R1.fastq.gz | head -n 4 | cut -c -30\n\n@SRR9309790.10003134\nTAAATCGATTCGTTTTTGCTATCTTCGTCT\n+\nAAFFFJJJJJJJFJJJJJJJJJJJJJJJJJ\n\n\nConsequently, a FASTQ entry consists of four lines:\n\nsequence id (prefixed by @)\nDNA sequence\nseparator (+)\nphred base quality scores\n\n\n\n\n\n\n\nExercise\n\n\n\n\n\n\n\n Use the command wc to determine how many sequences are in fastq/PUN-Y-INJ_R1.fastq.gz.\n\n\n\n\n\n\nHint\n\n\n\n\n\n\n\nUse the --help option to show documentation for the wc command (wc --help). This will show that wc prints newline, word and byte counts for a file, where newline is what we’re after. We can restrict the output to newline characters with the --lines option. Use zcat to print the contents of fastq/PUN-Y-INJ_R1.fastq.gz to the screen, piping (|) the output to wc --lines.\n\n\n\n\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nzcat fastq/PUN-Y-INJ_R1.fastq.gz | wc --lines\n\nSince there are four lines per sequence (id, sequence, + separator, qualities) you need to divide the final number by four (622744 / 4).\n\n\n\n\n\n\n\n\n\n\n2. Read mapping\nRead mapping consists of aligning sequence reads, typically from individuals in a population (a.k.a. resequencing) to a reference sequence. The choice of read mapper depends, partly on preference, but mostly on the sequencing read length and application. For short reads, a common choice is bwa-mem, and for longer reads minimap2.\nIn what follows, we will assume that the sequencing protocol generates paired-end short reads (e.g., from Illumina). In practice, this means a DNA fragment has been sequenced from both ends, where fragment sizes have been selected such that reads do not overlap (i.e., there is unsequenced DNA between the reads of a given insert size).\nThe final output of read mapping is an alignment file in binary alignment map (BAM) format or variants thereof.\n3. Removal / marking of duplicate reads\nDuring sample preparation or DNA amplification with PCR, it may happen that a single DNA fragment is present in multiple copies and therefore produces redundant sequencing reads. This shows up as alignments with identical start and stop coordinates. These so-called duplicate reads should be marked prior to any downstream analyses. The most commonly used tools for this purpose are samtools markdup and picard MarkDuplicates.\n4. Variant calling and genotyping\nOnce BAM files have been produced, it is time for variant calling, which is the process of identifying sites where there sequence variation. There are many different variant callers, of which we will mention four.\nbcftools is a toolkit to process variant call files, but also has a variant caller command. We will use bcftools to look at and summarize the variant files.\nfreebayes uses a Bayesian model to call variants. It may be time-consuming in high-coverage regions, and one therefore may have to mask repetitive and other low-complexity regions.\nANGSD is optimized for low-coverage data. Genotypes aren’t called directly; rather, genotype likelihoods form the basis for all downstream analyses, such as calculation of diversity or other statistics.\nFinally, GATK HaplotypeCaller performs local realignment around variant candidates, which avoids the need to run the legacy GATK IndelRealigner. Realignment improves results but requires more time to run. GATK is optimized for human data. For instance, performance drops dramatically if the reference sequence consists of many short scaffolds/contigs, and there is a size limit to how large the chromosomes can be. It also requires some parameter optimization and has a fairly complicated workflow (Hansen, 2016).\nGATK best practice variant calling\nWe will base our work on the GATK Germline short variant discovery workflow. In addition to the steps outlined above, there is a step where quality scores are recalibrated in an attempt to correct errors produced by the base calling procedure itself.\nGATK comes with a large set of tools. For a complete list and documentation, see the “Tool Documentation Index” (2024).",
    "crumbs": [
      "Slides",
      "Exercises",
      "Variant calling",
      "Variant calling introduction"
    ]
  },
  {
    "objectID": "exercises/variant_calling/introduction.html#footnotes",
    "href": "exercises/variant_calling/introduction.html#footnotes",
    "title": "Variant calling introduction",
    "section": "Footnotes",
    "text": "Footnotes\n\nFor any shell command, use the option --help to print information about the commands and its options. zcat is a variant of the cat command that prints the contents of a file on the terminal; the z prefix shows the command works on compressed files, a common naming convention. head views the first lines of a file, and cut can be used to cut out columns from a tab-delimited file, or in this case, cut the longest strings to 30 characters width.↩︎\nFor more information, see unix pipelines↩︎",
    "crumbs": [
      "Slides",
      "Exercises",
      "Variant calling",
      "Variant calling introduction"
    ]
  },
  {
    "objectID": "exercises/variant_calling/read_mapping.html",
    "href": "exercises/variant_calling/read_mapping.html",
    "title": "Read mapping and duplicate removal",
    "section": "",
    "text": "Intended learning outcomes\n\n\n\n\n\n\nMap reads to a reference genome\nMark duplicate read mappings",
    "crumbs": [
      "Slides",
      "Exercises",
      "Variant calling",
      "Read mapping and duplicate removal"
    ]
  },
  {
    "objectID": "exercises/variant_calling/read_mapping.html#read-mapping",
    "href": "exercises/variant_calling/read_mapping.html#read-mapping",
    "title": "Read mapping and duplicate removal",
    "section": "Read mapping",
    "text": "Read mapping\nWe will start by mapping FASTQ read pairs to the reference. We will use the bwa read mapper together with samtools to process the resulting output.\nRead group information identifies sequence sets\nSome of the downstream processes require that reads have been assigned read groups (“Read Groups,” 2023), which is a compact string representation of a set of reads that originate from a sequencing unit and sample. Assigning read groups becomes particularly important for multiplexing protocols, or when a sample has been sequenced on different lanes or platform units, as it allows for the identification of sequence batch issues (e.g., poor sequence quality). Here, we want to assign a unique ID, the sample id (SM), and the sequencing platform (PL), where the latter informs the algorithms on what error model to apply. The read group is formatted as @RG\\tID:uniqueid\\tSM:sampleid\\tPU:platform, where \\t is the tab character. More fields can be added; see the SAM specification, section 1.3 (HTS Format Specifications, 2023) for a complete list.\nSample information is available in the sampleinfo.csv file:\n\nhead -n 3 sampleinfo.csv\n\nSample,Run,ScientificName,SampleName,AuthorSample,SampleAlias,Taxon,Latitude,Longitude,% Reads aligned,Seq. Depth\nSRS4979271,SRR9309782,Diplacus longiflorus,LON-T33_1,T33,LON-T33,ssp. longiflorus,34.3438,-118.5099,94.6,18.87\nSRS4979267,SRR9309785,Diplacus longiflorus,LON-T8_8,T8,LON-T8,ssp. longiflorus,34.1347,-118.6452,82.6,25.11\n\n\nThe sample information is a combination of the run information obtained from the SRA (BioProject PRJNA549183) and the sample sheet provided with the article. An additional column SampleAlias has been added that names samples using a three-letter abbreviation for population hyphenated with the sample identifier. For the ssp. puniceus, an additional one-letter character denoting the color ecotype is inserted between population and sample id. PUN-Y-BCRD then is a sample from the puniceus subspecies with the yellow ecotype. We will use the Run column as unique ID, SampleAlias as the sample id SM, and ILLUMINA as the platform PL.\nRead mapping with bwa and conversion to BAM format with samtools\nLet’s map the FASTQ files corresponding to sample PUN-Y-BCRD:\n\nbwa mem -R \"@RG\\tID:SRR9309788\\tSM:PUN-Y-BCRD\\tPL:ILLUMINA\" -t 4 \\\n    -M ref/M_aurantiacus_v1.fasta \\\n    fastq/PUN-Y-BCRD_R1.fastq.gz \\\n    fastq/PUN-Y-BCRD_R2.fastq.gz | \\\n    samtools sort - | \\\n    samtools view --with-header --output bam/PUN-Y-BCRD.bam\n\nThere’s a lot to unpack here. First, the -R flag to bwa mem passes the read group information to the mapper. -t sets the number of threads, and -M marks shorter split hits as secondary, which is for Picard compatibility1. The first positional argument is the reference sequence, followed by the FASTQ files for read 1 and 2, respectively.\nThe output would be printed on the screen (try running the bwa mem command alone!), but we pipe the output to samtools sort to sort the mappings (by default by coordinate). The - simply means “read from the pipe”.\nFinally, samtools view converts the text output to binary format (default), including the header information (short option -h). You can use the same command to view the resulting output on your screen:\n\nsamtools view bam/PUN-Y-BCRD.bam | head -n 2\n\nSRR9309788.7313829  129 LG4 29  60  103M2I46M   =   83824   83796   GTCAATTTCATGTTTGACTTTTAGATTTTTAATTAATTATATATTTTTTGCAATTTGTAACCTCTTTAACCTTTATTTAATTTTTTGAATTTCTTTTTTATTTTATTTTCAAATACAATTCACCCCAATTAATTATTTTAATTATAACAAT AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJJJJAFJJFJJJF&lt;JJJJJJJJ&lt;AJJJJJJJJJ-FFJJAJJJJA-7-7----&lt;A---7&lt;-)7AAA-AA7-&lt;-7--&lt;A---7---7 NM:i:6  MD:Z:107T25A1C6A6   MC:Z:88M8D63M   MQ:i:60 AS:i:121    XS:i:80 RG:Z:SRR9309788\nSRR9309788.9554822  99  LG4 58  60  74M2I75M    =   256 321 TAATTAATTATATATTTTTTGCAATTTGTAACCTCTTTAACCTTTATTTAATTTTTTGAATTTCTTTTTTATTTTATTTTCAAATACAATTCACCCCAATTAATTAATCTAATTAAAACAATTAAATAATCAACCCGAATGATTAACCAAT AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFAAJJJJJJJJFJJJFJJ&lt;FJJAJJJFJJJJ&lt; NM:i:5  MD:Z:78T54G0C14 MC:Z:21S82M2I9M5I32M    MQ:i:60 AS:i:126    XS:i:81 RG:Z:SRR9309788\n\n\n\n\n\n\n\n\nExercise\n\n\n\n\n\n\n\nLook at the header information of the output BAM file. What does the @SQ tag stand for, and what does the information on that line tell you?\n\n\n\n\n\n\nHint\n\n\n\n\n\n\n\nTo get a list of options, type samtools view. The -H or --header-only option views the header only.\n\n\n\n\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nsamtools view -H bam/PUN-Y-BCRD.bam\n\n@HD VN:1.5  SO:coordinate\n@SQ SN:LG4  LN:100000\n@RG ID:SRR9309788   SM:PUN-Y-BCRD   PL:ILLUMINA\n@PG ID:bwa  PN:bwa  VN:0.7.19-r1273 CL:bwa mem -R @RG\\tID:SRR9309788\\tSM:PUN-Y-BCRD\\tPL:ILLUMINA -t 4 -M ref/M_aurantiacus_v1.fasta fastq/PUN-Y-BCRD_R1.fastq.gz fastq/PUN-Y-BCRD_R2.fastq.gz\n@PG ID:samtools PN:samtools PP:bwa  VN:1.22.1   CL:samtools sort -\n@PG ID:samtools.1   PN:samtools PP:samtools VN:1.22.1   CL:samtools view --with-header --output bam/PUN-Y-BCRD.bam\n@PG ID:samtools.2   PN:samtools PP:samtools.1   VN:1.22.1   CL:samtools view -H bam/PUN-Y-BCRD.bam\n\n\nAlthough you can probably figure it out by looking at the data, do have a glance at the SAM format specification mentioned above. The @SQ tag corresponds to the reference sequence dictionary and tells you what region you are looking at (chromosome LG4, which has a length LN 100000 bases; the example reference sequence was created by extracting the region on LG4 from position 12000000 to 12100000).\n\n\n\n\n\n\n\n\n\n\nMark duplicate reads with Picard MarkDuplicates\nOnce mapping is completed, we must find and mark duplicate reads as these can distort the results of downstream analyses, such as variant calling. We here use Picard MarkDuplicates.\nTo facilitate downstream processing, we will from now on make use of environment variables2 to refer to a sample and the reference sequence. Retrieve the SRR id from the sampleinfo file.\n\nexport SRR=SRR9309790\nexport SAMPLE=PUN-Y-INJ\nexport REF=ref/M_aurantiacus_v1.fasta\n\n\npicard MarkDuplicates --INPUT bam/${SAMPLE}.bam \\\n    --METRICS_FILE md/${SAMPLE}.dup_metrics.txt \\\n    --OUTPUT md/${SAMPLE}.bam\n\nThe metrics output file contains information on the rate of duplication. We will include the output in the final MultiQC report.\nAn additional mapping quality metric of interest is percentage mapped reads and average read depth. We can use qualimap bamqc to collect mapping statistics from a BAM file:\n\nqualimap bamqc -bam bam/${SAMPLE}.bam -outdir qualimap/${SAMPLE}_stats\n\nA summary of the results is exported to qualimap/${SAMPLE}_stats/genome_results.txt; we show percent mapping and average coverage below as examples:\n\ngrep \"number of mapped reads\" qualimap/${SAMPLE}_stats/genome_results.txt\ngrep \"mean coverageData\" qualimap/${SAMPLE}_stats/genome_results.txt\n\n     number of mapped reads = 7,643 (96.94%)\n     mean coverageData = 11.0246X",
    "crumbs": [
      "Slides",
      "Exercises",
      "Variant calling",
      "Read mapping and duplicate removal"
    ]
  },
  {
    "objectID": "exercises/variant_calling/read_mapping.html#moving-on",
    "href": "exercises/variant_calling/read_mapping.html#moving-on",
    "title": "Read mapping and duplicate removal",
    "section": "Moving on",
    "text": "Moving on\nBy now it should become clear that it quickly becomes tedious to manually write commands for each and every step. We would like to speed things up, and in the interest of time, the following exercise will introduce a workflow manager (e.g., Wratten et al. (2021)). However, we stress that you should not blindly run workflows without understanding the programs and their options. The only way to investigate the effects of parameters and settings is to manually run the programs. Hopefully, you have gained some insight into how this is done with this exercise.",
    "crumbs": [
      "Slides",
      "Exercises",
      "Variant calling",
      "Read mapping and duplicate removal"
    ]
  },
  {
    "objectID": "exercises/variant_calling/read_mapping.html#footnotes",
    "href": "exercises/variant_calling/read_mapping.html#footnotes",
    "title": "Read mapping and duplicate removal",
    "section": "Footnotes",
    "text": "Footnotes\n\nbwa consistently uses short option names. Also, there is no --help option. To get a list of options, at the command line simply type bwa mem, or man bwa mem for general help and a complete list of options.↩︎\nBriefly, environment variables are a great way to generalise commands. To reuse the command, one only needs to modify the value of the variable.↩︎",
    "crumbs": [
      "Slides",
      "Exercises",
      "Variant calling",
      "Read mapping and duplicate removal"
    ]
  },
  {
    "objectID": "exercises/variant_filtering/index.html",
    "href": "exercises/variant_filtering/index.html",
    "title": "Variant filtering index",
    "section": "",
    "text": "Variant filtering is a necessary step before doing any downstream analyses. The exercises will give you a basic introduction to variant filtering.",
    "crumbs": [
      "Slides",
      "Exercises",
      "Variant filtering",
      "Variant filtering index"
    ]
  },
  {
    "objectID": "exercises/variant_filtering/index.html#about",
    "href": "exercises/variant_filtering/index.html#about",
    "title": "Variant filtering index",
    "section": "",
    "text": "Variant filtering is a necessary step before doing any downstream analyses. The exercises will give you a basic introduction to variant filtering.",
    "crumbs": [
      "Slides",
      "Exercises",
      "Variant filtering",
      "Variant filtering index"
    ]
  },
  {
    "objectID": "exercises/variant_filtering/index.html#listing",
    "href": "exercises/variant_filtering/index.html#listing",
    "title": "Variant filtering index",
    "section": "Listing",
    "text": "Listing\n\n\n   \n    \n    \n      Order By\n      Default\n      \n        Title\n      \n    \n  \n    \n      \n      \n    \n\n\n\n\n\n\nTitle\n\n\n\nDescription\n\n\n\n\n\n\n\n\nBasic variant filtering\n\n\nIntroduction to basic variant filtering using the CLI.\n\n\n\n\n\n\nDepth filtering on invariant sites\n\n\n\n\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "Slides",
      "Exercises",
      "Variant filtering",
      "Variant filtering index"
    ]
  },
  {
    "objectID": "exercises/variant_filtering/depth_filtering.html",
    "href": "exercises/variant_filtering/depth_filtering.html",
    "title": "Depth filtering on invariant sites",
    "section": "",
    "text": "Now we turn our attention to a VCF file containing variant and invariant sites. We will generate depth-based filters, with the motivation that they represent portions of the genome that are accessible to analysis, regardless of whether they contain variants or not. In so doing, we treat filtered sites as missing data and do not assume that they are invariant, as many software packages do.\n\n\n\n\n\n\n\nFigure 1: Coverage distributions for three hypothetical samples along with the cumulative coverage for all samples.\n\n\n\n\nFigure 1 illustrates the sequencing coverage of three samples. The important thing to note is that the coverage is uneven. Some regions lack coverage entirely, e.g., due to random sampling or errors in the reference sequence. Other regions have excessive coverage, which could be a sign of repeats that have been collapsed in the reference. A general coverage filter could then seek to mask out sites where a fraction (50%, say) of individuals have too low or excessive coverage.\nThe right panel illustrates the sum of coverages across all samples. Minimum and maximum depth filters could be applied to the aggregate coverages of all samples, or samples grouped by population, to eliminate sites confounding data support.\nAs mentioned, the VCF in this exercise contains all sites; that is, both monomorphic and polymorphic sites are present. Every site contains information about depth and other metadata, which makes it possible to apply coverage filters directly to the variant file itself.\nHowever, it may not always be possible to generate a VCF with all sites. Species with large genomes will produce files so large that they prevent efficient downstream processing. Under these circumstances, ad hoc coverage filters can be applied to the BAM files to in turn generate sequence masks that can be used in conjunction with the variant file. This is the topic for the advanced session.\nRegardless of approach, the end result is a set of regions that are discarded (masked) for a given analysis. They can be given either as a BED file, or a sequence mask, which is a FASTA-like file consisting of integer digits (between 0 and 9) for each position on a chromosome. Then, by setting a cutoff, an application can mask positions higher than that cutoff. We will generate mask files with 0 and 1 digits, an example of which is shown below, where the central 10 bases of the reference (top) are masked (bottom).\n\n\n&gt;LG4 LG4:12000001-12100000\nGGACAATTACCCCCTCCGTTATGTTTCAGT\n\n&gt;LG4\n000000000011111111110000000000\n\n\n\nWe start by summarising the raw data, as before.\n\nbcftools stats allsites.vcf.gz | grep ^SN\n\nSN  0   number of samples:  10\nSN  0   number of records:  100000\nSN  0   number of no-ALTs:  92291\nSN  0   number of SNPs: 3784\nSN  0   number of MNPs: 0\nSN  0   number of indels:   1149\nSN  0   number of others:   0\nSN  0   number of multiallelic sites:   489\nSN  0   number of multiallelic SNP sites:   57\n\n\n\nBy now you should be familiar with the vcftools commands to generate relevant data for filters. In particular, we used --site-depth to generate depth profiles over all sites, and --missing-site to generate missingness data, based on genotype presence/abscence, for every site. Use these same commands again to generate a set of depth filters.\n\n\n\n\n\n\nExercise\n\n\n\n\n\n\n\nUse vcflib and vcftools to select a subset of variants from which to generate data. Use vcftools commands --site-depth and --missing-site as before to\n\ngenerate data\n(possibly) compute summary statistics with csvtk\n\nplot depth distributions\nselect thresholds for depth-based and missingness filters\nfilter the input VCF\n\nCall the final output file allsites.filtered.vcf.gz and compare your output to the input file.\n\n\n\n\n\n\nallsites subset\n\n\n\n\n\n\n\n\n# Set parameter r = 100000 / total number of variants; input file\n# here consists of 100000 entries. Adjust this parameter.\nbcftools view allsites.vcf.gz | vcfrandomsample -r 1.0 |\\\n    bgzip -c &gt; allsites.subset.vcf.gz\nbcftools index allsites.subset.vcf.gz\nbcftools stats allsites.subset.vcf.gz |\\\n    grep \"^SN\"\n\nSN  0   number of samples:  10\nSN  0   number of records:  100000\nSN  0   number of no-ALTs:  92291\nSN  0   number of SNPs: 3784\nSN  0   number of MNPs: 0\nSN  0   number of indels:   1149\nSN  0   number of others:   0\nSN  0   number of multiallelic sites:   489\nSN  0   number of multiallelic SNP sites:   57\n\n\n\nmkdir -p vcftools\nOUT=vcftools/allsites.subset\nVCF=allsites.subset.vcf.gz\n\n\n\nvcftools --gzvcf $VCF --site-depth --out $OUT 2&gt;/dev/null\nhead -n 3 ${OUT}.ldepth\ncsvtk summary -t -f 3:min,3:q1,3:median,3:mean,3:q3,3:max,3:stdev ${OUT}.ldepth\n\nCHROM   POS SUM_DEPTH   SUMSQ_DEPTH\nLG4 1   15  37\nLG4 2   16  38\nSUM_DEPTH:min   SUM_DEPTH:q1    SUM_DEPTH:median    SUM_DEPTH:mean  SUM_DEPTH:q3    SUM_DEPTH:max   SUM_DEPTH:stdev\n0.00    59.00   77.00   79.98   91.00   2060.00 94.96\n\n\n\n\n\n\n\nFigure 2: Zoomed in view of depth distribution for all sites.\n\n\n\n\nvcftools --gzvcf $VCF --missing-site --out $OUT 2&gt;/dev/null\nhead -n 3 ${OUT}.lmiss\ncsvtk summary -t -f 6:min,6:q1,6:median,6:mean,6:q3,6:max ${OUT}.lmiss\n\nCHR POS N_DATA  N_GENOTYPE_FILTERED N_MISS  F_MISS\nLG4 1   20  0   6   0.3\nLG4 2   20  0   4   0.2\nF_MISS:min  F_MISS:q1   F_MISS:median   F_MISS:mean F_MISS:q3   F_MISS:max\n0.00    0.00    0.10    0.17    0.20    1.00\n\n\n\ncsvtk plot hist --bins 20 -t -f F_MISS ${OUT}.lmiss &gt; ${OUT}.lmiss.png\n\n\n\n\n\n\nFigure 3: Distribution of missingness among all sites.\n\n\n\nUnless there is any strange bias that leads to a difference in coverage between variant and invariant sites, the final values should be similar to those before. We set filters and generate the output:\n\nMISS=0.75\nMIN_DEPTH=5\nMAX_DEPTH=15\n\n\nOUTVCF=${VCF%.subset.vcf.gz}.filtered.vcf.gz\nvcftools --gzvcf $VCF \\\n   --remove-indels --max-missing $MISS \\\n   --min-meanDP $MIN_DEPTH --max-meanDP $MAX_DEPTH \\\n   --minDP $MIN_DEPTH --maxDP $MAX_DEPTH --recode \\\n   --stdout 2&gt;/dev/null |\n gzip -c &gt; $OUTVCF\n\nCompare the results with the original input:\n\nbcftools stats $OUTVCF | grep \"^SN\"\n\nSN  0   number of samples:  10\nSN  0   number of records:  46274\nSN  0   number of no-ALTs:  43855\nSN  0   number of SNPs: 1625\nSN  0   number of MNPs: 0\nSN  0   number of indels:   0\nSN  0   number of others:   0\nSN  0   number of multiallelic sites:   75\nSN  0   number of multiallelic SNP sites:   24\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInstead of calculating missing genotypes per site, we can retrieve the individual depth for each genotype with --geno-depth. Since we know cutoffs for mean depth (5-15), we can run this command on the main input file (allsites.vcf.gz). For reasons that soon will become clear, we also rerun --site-depth-mean.\n\nVCF=allsites.vcf.gz\nOUT=vcftools/allsites\nvcftools --gzvcf  ${VCF} --geno-depth --out $OUT 2&gt;/dev/null\nvcftools --gzvcf  ${VCF} --site-mean-depth --out $OUT 2&gt;/dev/null\nhead -n 3 ${OUT}.gdepth\n\nCHROM   POS PUN-R-ELF   PUN-R-JMC   PUN-R-LH    PUN-R-MT    PUN-R-UCSD  PUN-Y-BCRD  PUN-Y-INJ   PUN-Y-LO    PUN-Y-PCT   PUN-Y-POTR\nLG4 1   1   -1  3   1   3   -1  3   -1  2   2\nLG4 2   1   1   3   1   3   -1  3   -1  2   2\n\n\nWe could then combine these two files and perform filtering as follows: for each site check that\n\nthe mean depth is within the filter range\nthere is a minimimum number of genotypes with sufficient depth\nindividual genotype depth does not exceed a maximum depth threshold\n\nIf any of the points above fail, the site is discarded. We keep track of sites that pass the filters and output positions in BED format (a 0-based tab-separated format consisting of columns chrom, chromStart, and chromEnd).\nHere is some code to achieve these goals. Unfortunately csvtk doesn’t seem to have support for calculating column margins out of the box, which is why we have to resort to this complicated construct using awk to count the number of individual genotypes that pass the coverage threshold 5.\n\nBEDOUT=${VCF%.vcf.gz}.keep.bed\ncsvtk join -t ${OUT}.ldepth.mean ${OUT}.gdepth -f CHROM,POS |\\\n    csvtk filter -t -f \"MEAN_DEPTH&gt;=5\" |\\\n    csvtk filter -t -f \"MEAN_DEPTH&lt;=15\" |\\\n    awk -v FS=\"\\t\" -v OFS=\"\\t\" \\\n        'NR &gt; 1 {count=0; for (i=4; i&lt;=NF; i++)\\\n {if ($i&gt;4) count++ }; if (count&gt;=5) print $1, $2 - 1, $2}'|\\\n    bedtools merge &gt; ${BEDOUT}\nhead -n 3 $BEDOUT\n\nLG4 65  131\nLG4 281 412\nLG4 416 469\n\n\nThe BED file contains a list of regions that are accessible to analysis.\n\nIn addition to the BED output files, we can generate sequence masks. First, we set a variable to point to the reference sequence and index it.\n\nexport REF=ref/M_aurantiacus_v1.fasta\nsamtools faidx ${REF}\n\nNow, we use the command bedtools makefasta to make a sequence mask file in FASTA format consisting solely of 1’s:1\n\nawk 'BEGIN {OFS=\"\\t\"} {print $1, 0, $2}' ${REF}.fai &gt; ${REF}.bed\nbedtools maskfasta -fi ${REF} -mc 1 -fo ${REF}.mask.fa -bed ${REF}.bed\n\nWe generate a file where all positions are masked because the BED files contain regions that we want to keep. Therefore, we want to convert corresponding positions to zeros. This file will be used as a template for all mask files.\nWe then apply bedtools maskfasta again to unmask (set to 0) the positions that overlap with the BED coordinates:\n\nbedtools maskfasta -fi ${REF}.mask.fa -mc 0 -fo ${REF}.unmask.fa \\\n   -bed allsites.keep.bed\nhead -n 3 ${REF}.unmask.fa\n\n&gt;LG4\n111111111111111111111111111111111111111111111111111111111111\n111110000000000000000000000000000000000000000000000000000000\n\n\nWe can convince ourselves that this has worked by counting the number of unmasked positions in both the BED file (with bedtools genomecov) and sequence mask:\n\nbedtools genomecov -i allsites.keep.bed -g ${REF}.fai | grep genome\n# tr: -d deletes all characters not (-c, complement) in the character\n# set '0'. wc: -m option counts characters\ncat ${REF}.unmask.fa | tr -d -c '0' | wc -m\n\ngenome  0   19215   100000  0.19215\ngenome  1   80785   100000  0.80785\n80785\n\n\nNote that 0 and 1 in the bedtools genomecov output refers to coverage (i.e., absence/presence) and not unmask/mask as in the mask FASTA file.\n\nThe sequence mask file can be used with vcftools with the option --mask. Before we use, however, we need to convert the mask file to one sequence per line2. seqkit is a neat tool that allows us to do this without hassle. As an example, we then perform a genetic diversity calculation with and without mask file to highlight the difference:\n\nWIDEMASK=${REF}.unmask.wide.fa\nseqkit seq -w 0 ${REF}.unmask.fa &gt; ${WIDEMASK}\nvcftools --gzvcf allsites.vcf.gz --mask $WIDEMASK \\\n         --site-pi --stdout 2&gt;/dev/null |\\\n    csvtk summary -t --ignore-non-numbers --decimal-width 4 \\\n    --fields PI:count,PI:mean\nvcftools --gzvcf allsites.vcf.gz --site-pi --stdout 2&gt;/dev/null |\\\n    csvtk summary -t --ignore-non-numbers --decimal-width 4 \\\n    --fields PI:count,PI:mean\n\nPI:count    PI:mean\n80785   0.0186\nPI:count    PI:mean\n100000  0.0215\n\n\nClearly, filtering may have significant impact on the final outcome. You must choose your filters wisely!",
    "crumbs": [
      "Slides",
      "Exercises",
      "Variant filtering",
      "Depth filtering on invariant sites"
    ]
  },
  {
    "objectID": "exercises/variant_filtering/depth_filtering.html#depth-filtering-of-vcf-with-invariant-sites",
    "href": "exercises/variant_filtering/depth_filtering.html#depth-filtering-of-vcf-with-invariant-sites",
    "title": "Depth filtering on invariant sites",
    "section": "",
    "text": "Now we turn our attention to a VCF file containing variant and invariant sites. We will generate depth-based filters, with the motivation that they represent portions of the genome that are accessible to analysis, regardless of whether they contain variants or not. In so doing, we treat filtered sites as missing data and do not assume that they are invariant, as many software packages do.\n\n\n\n\n\n\n\nFigure 1: Coverage distributions for three hypothetical samples along with the cumulative coverage for all samples.\n\n\n\n\nFigure 1 illustrates the sequencing coverage of three samples. The important thing to note is that the coverage is uneven. Some regions lack coverage entirely, e.g., due to random sampling or errors in the reference sequence. Other regions have excessive coverage, which could be a sign of repeats that have been collapsed in the reference. A general coverage filter could then seek to mask out sites where a fraction (50%, say) of individuals have too low or excessive coverage.\nThe right panel illustrates the sum of coverages across all samples. Minimum and maximum depth filters could be applied to the aggregate coverages of all samples, or samples grouped by population, to eliminate sites confounding data support.\nAs mentioned, the VCF in this exercise contains all sites; that is, both monomorphic and polymorphic sites are present. Every site contains information about depth and other metadata, which makes it possible to apply coverage filters directly to the variant file itself.\nHowever, it may not always be possible to generate a VCF with all sites. Species with large genomes will produce files so large that they prevent efficient downstream processing. Under these circumstances, ad hoc coverage filters can be applied to the BAM files to in turn generate sequence masks that can be used in conjunction with the variant file. This is the topic for the advanced session.\nRegardless of approach, the end result is a set of regions that are discarded (masked) for a given analysis. They can be given either as a BED file, or a sequence mask, which is a FASTA-like file consisting of integer digits (between 0 and 9) for each position on a chromosome. Then, by setting a cutoff, an application can mask positions higher than that cutoff. We will generate mask files with 0 and 1 digits, an example of which is shown below, where the central 10 bases of the reference (top) are masked (bottom).\n\n\n&gt;LG4 LG4:12000001-12100000\nGGACAATTACCCCCTCCGTTATGTTTCAGT\n\n&gt;LG4\n000000000011111111110000000000\n\n\n\nWe start by summarising the raw data, as before.\n\nbcftools stats allsites.vcf.gz | grep ^SN\n\nSN  0   number of samples:  10\nSN  0   number of records:  100000\nSN  0   number of no-ALTs:  92291\nSN  0   number of SNPs: 3784\nSN  0   number of MNPs: 0\nSN  0   number of indels:   1149\nSN  0   number of others:   0\nSN  0   number of multiallelic sites:   489\nSN  0   number of multiallelic SNP sites:   57\n\n\n\nBy now you should be familiar with the vcftools commands to generate relevant data for filters. In particular, we used --site-depth to generate depth profiles over all sites, and --missing-site to generate missingness data, based on genotype presence/abscence, for every site. Use these same commands again to generate a set of depth filters.\n\n\n\n\n\n\nExercise\n\n\n\n\n\n\n\nUse vcflib and vcftools to select a subset of variants from which to generate data. Use vcftools commands --site-depth and --missing-site as before to\n\ngenerate data\n(possibly) compute summary statistics with csvtk\n\nplot depth distributions\nselect thresholds for depth-based and missingness filters\nfilter the input VCF\n\nCall the final output file allsites.filtered.vcf.gz and compare your output to the input file.\n\n\n\n\n\n\nallsites subset\n\n\n\n\n\n\n\n\n# Set parameter r = 100000 / total number of variants; input file\n# here consists of 100000 entries. Adjust this parameter.\nbcftools view allsites.vcf.gz | vcfrandomsample -r 1.0 |\\\n    bgzip -c &gt; allsites.subset.vcf.gz\nbcftools index allsites.subset.vcf.gz\nbcftools stats allsites.subset.vcf.gz |\\\n    grep \"^SN\"\n\nSN  0   number of samples:  10\nSN  0   number of records:  100000\nSN  0   number of no-ALTs:  92291\nSN  0   number of SNPs: 3784\nSN  0   number of MNPs: 0\nSN  0   number of indels:   1149\nSN  0   number of others:   0\nSN  0   number of multiallelic sites:   489\nSN  0   number of multiallelic SNP sites:   57\n\n\n\nmkdir -p vcftools\nOUT=vcftools/allsites.subset\nVCF=allsites.subset.vcf.gz\n\n\n\nvcftools --gzvcf $VCF --site-depth --out $OUT 2&gt;/dev/null\nhead -n 3 ${OUT}.ldepth\ncsvtk summary -t -f 3:min,3:q1,3:median,3:mean,3:q3,3:max,3:stdev ${OUT}.ldepth\n\nCHROM   POS SUM_DEPTH   SUMSQ_DEPTH\nLG4 1   15  37\nLG4 2   16  38\nSUM_DEPTH:min   SUM_DEPTH:q1    SUM_DEPTH:median    SUM_DEPTH:mean  SUM_DEPTH:q3    SUM_DEPTH:max   SUM_DEPTH:stdev\n0.00    59.00   77.00   79.98   91.00   2060.00 94.96\n\n\n\n\n\n\n\nFigure 2: Zoomed in view of depth distribution for all sites.\n\n\n\n\nvcftools --gzvcf $VCF --missing-site --out $OUT 2&gt;/dev/null\nhead -n 3 ${OUT}.lmiss\ncsvtk summary -t -f 6:min,6:q1,6:median,6:mean,6:q3,6:max ${OUT}.lmiss\n\nCHR POS N_DATA  N_GENOTYPE_FILTERED N_MISS  F_MISS\nLG4 1   20  0   6   0.3\nLG4 2   20  0   4   0.2\nF_MISS:min  F_MISS:q1   F_MISS:median   F_MISS:mean F_MISS:q3   F_MISS:max\n0.00    0.00    0.10    0.17    0.20    1.00\n\n\n\ncsvtk plot hist --bins 20 -t -f F_MISS ${OUT}.lmiss &gt; ${OUT}.lmiss.png\n\n\n\n\n\n\nFigure 3: Distribution of missingness among all sites.\n\n\n\nUnless there is any strange bias that leads to a difference in coverage between variant and invariant sites, the final values should be similar to those before. We set filters and generate the output:\n\nMISS=0.75\nMIN_DEPTH=5\nMAX_DEPTH=15\n\n\nOUTVCF=${VCF%.subset.vcf.gz}.filtered.vcf.gz\nvcftools --gzvcf $VCF \\\n   --remove-indels --max-missing $MISS \\\n   --min-meanDP $MIN_DEPTH --max-meanDP $MAX_DEPTH \\\n   --minDP $MIN_DEPTH --maxDP $MAX_DEPTH --recode \\\n   --stdout 2&gt;/dev/null |\n gzip -c &gt; $OUTVCF\n\nCompare the results with the original input:\n\nbcftools stats $OUTVCF | grep \"^SN\"\n\nSN  0   number of samples:  10\nSN  0   number of records:  46274\nSN  0   number of no-ALTs:  43855\nSN  0   number of SNPs: 1625\nSN  0   number of MNPs: 0\nSN  0   number of indels:   0\nSN  0   number of others:   0\nSN  0   number of multiallelic sites:   75\nSN  0   number of multiallelic SNP sites:   24\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInstead of calculating missing genotypes per site, we can retrieve the individual depth for each genotype with --geno-depth. Since we know cutoffs for mean depth (5-15), we can run this command on the main input file (allsites.vcf.gz). For reasons that soon will become clear, we also rerun --site-depth-mean.\n\nVCF=allsites.vcf.gz\nOUT=vcftools/allsites\nvcftools --gzvcf  ${VCF} --geno-depth --out $OUT 2&gt;/dev/null\nvcftools --gzvcf  ${VCF} --site-mean-depth --out $OUT 2&gt;/dev/null\nhead -n 3 ${OUT}.gdepth\n\nCHROM   POS PUN-R-ELF   PUN-R-JMC   PUN-R-LH    PUN-R-MT    PUN-R-UCSD  PUN-Y-BCRD  PUN-Y-INJ   PUN-Y-LO    PUN-Y-PCT   PUN-Y-POTR\nLG4 1   1   -1  3   1   3   -1  3   -1  2   2\nLG4 2   1   1   3   1   3   -1  3   -1  2   2\n\n\nWe could then combine these two files and perform filtering as follows: for each site check that\n\nthe mean depth is within the filter range\nthere is a minimimum number of genotypes with sufficient depth\nindividual genotype depth does not exceed a maximum depth threshold\n\nIf any of the points above fail, the site is discarded. We keep track of sites that pass the filters and output positions in BED format (a 0-based tab-separated format consisting of columns chrom, chromStart, and chromEnd).\nHere is some code to achieve these goals. Unfortunately csvtk doesn’t seem to have support for calculating column margins out of the box, which is why we have to resort to this complicated construct using awk to count the number of individual genotypes that pass the coverage threshold 5.\n\nBEDOUT=${VCF%.vcf.gz}.keep.bed\ncsvtk join -t ${OUT}.ldepth.mean ${OUT}.gdepth -f CHROM,POS |\\\n    csvtk filter -t -f \"MEAN_DEPTH&gt;=5\" |\\\n    csvtk filter -t -f \"MEAN_DEPTH&lt;=15\" |\\\n    awk -v FS=\"\\t\" -v OFS=\"\\t\" \\\n        'NR &gt; 1 {count=0; for (i=4; i&lt;=NF; i++)\\\n {if ($i&gt;4) count++ }; if (count&gt;=5) print $1, $2 - 1, $2}'|\\\n    bedtools merge &gt; ${BEDOUT}\nhead -n 3 $BEDOUT\n\nLG4 65  131\nLG4 281 412\nLG4 416 469\n\n\nThe BED file contains a list of regions that are accessible to analysis.\n\nIn addition to the BED output files, we can generate sequence masks. First, we set a variable to point to the reference sequence and index it.\n\nexport REF=ref/M_aurantiacus_v1.fasta\nsamtools faidx ${REF}\n\nNow, we use the command bedtools makefasta to make a sequence mask file in FASTA format consisting solely of 1’s:1\n\nawk 'BEGIN {OFS=\"\\t\"} {print $1, 0, $2}' ${REF}.fai &gt; ${REF}.bed\nbedtools maskfasta -fi ${REF} -mc 1 -fo ${REF}.mask.fa -bed ${REF}.bed\n\nWe generate a file where all positions are masked because the BED files contain regions that we want to keep. Therefore, we want to convert corresponding positions to zeros. This file will be used as a template for all mask files.\nWe then apply bedtools maskfasta again to unmask (set to 0) the positions that overlap with the BED coordinates:\n\nbedtools maskfasta -fi ${REF}.mask.fa -mc 0 -fo ${REF}.unmask.fa \\\n   -bed allsites.keep.bed\nhead -n 3 ${REF}.unmask.fa\n\n&gt;LG4\n111111111111111111111111111111111111111111111111111111111111\n111110000000000000000000000000000000000000000000000000000000\n\n\nWe can convince ourselves that this has worked by counting the number of unmasked positions in both the BED file (with bedtools genomecov) and sequence mask:\n\nbedtools genomecov -i allsites.keep.bed -g ${REF}.fai | grep genome\n# tr: -d deletes all characters not (-c, complement) in the character\n# set '0'. wc: -m option counts characters\ncat ${REF}.unmask.fa | tr -d -c '0' | wc -m\n\ngenome  0   19215   100000  0.19215\ngenome  1   80785   100000  0.80785\n80785\n\n\nNote that 0 and 1 in the bedtools genomecov output refers to coverage (i.e., absence/presence) and not unmask/mask as in the mask FASTA file.\n\nThe sequence mask file can be used with vcftools with the option --mask. Before we use, however, we need to convert the mask file to one sequence per line2. seqkit is a neat tool that allows us to do this without hassle. As an example, we then perform a genetic diversity calculation with and without mask file to highlight the difference:\n\nWIDEMASK=${REF}.unmask.wide.fa\nseqkit seq -w 0 ${REF}.unmask.fa &gt; ${WIDEMASK}\nvcftools --gzvcf allsites.vcf.gz --mask $WIDEMASK \\\n         --site-pi --stdout 2&gt;/dev/null |\\\n    csvtk summary -t --ignore-non-numbers --decimal-width 4 \\\n    --fields PI:count,PI:mean\nvcftools --gzvcf allsites.vcf.gz --site-pi --stdout 2&gt;/dev/null |\\\n    csvtk summary -t --ignore-non-numbers --decimal-width 4 \\\n    --fields PI:count,PI:mean\n\nPI:count    PI:mean\n80785   0.0186\nPI:count    PI:mean\n100000  0.0215\n\n\nClearly, filtering may have significant impact on the final outcome. You must choose your filters wisely!",
    "crumbs": [
      "Slides",
      "Exercises",
      "Variant filtering",
      "Depth filtering on invariant sites"
    ]
  },
  {
    "objectID": "exercises/variant_filtering/depth_filtering.html#references",
    "href": "exercises/variant_filtering/depth_filtering.html#references",
    "title": "Depth filtering on invariant sites",
    "section": "References",
    "text": "References",
    "crumbs": [
      "Slides",
      "Exercises",
      "Variant filtering",
      "Depth filtering on invariant sites"
    ]
  },
  {
    "objectID": "exercises/variant_filtering/depth_filtering.html#footnotes",
    "href": "exercises/variant_filtering/depth_filtering.html#footnotes",
    "title": "Depth filtering on invariant sites",
    "section": "Footnotes",
    "text": "Footnotes\n\nWe need to generate a BED file representation of the FASTA index unfortuanely as bedtools makefasta doesn’t handle FASTA indices natively.↩︎\nFor vcftools; unfortunate, but that’s the way it is↩︎",
    "crumbs": [
      "Slides",
      "Exercises",
      "Variant filtering",
      "Depth filtering on invariant sites"
    ]
  },
  {
    "objectID": "exercises/recombination_linkage/ld_decay.html",
    "href": "exercises/recombination_linkage/ld_decay.html",
    "title": "Linkage disequilibrium decay",
    "section": "",
    "text": "In this exercise we will use plink2 to calculate the linkage disequilibrium (LD) decay from a VCF. Among other things, the LD structure informs us about the choice appropriate marker density for SNP chips or window size in genome scans.\n\n\n\n\n\n\n\nCommands have been run on a subset of the data\n\n\n\n\n\nThe commands of this document have been run on a subset (a subregion) of the data. Therefore, although you will use the same commands, your results will differ from those presented here.\n\n\n\n\n\n\n\n\n\n\nIntended learning outcomes\n\n\n\n\n\n\ngenerate linkage disequilibrium plot with plink2\n\ndetermine window size for genomic scans\n\n\n\n\n\n\n\n\n\n\n\nTools\n\n\n\n\n\n\n\nListing\n PDC\n pixi\n\n\n\n\nplink\nr\n\n\n\nChoose one of Modules and Virtual environment to access relevant tools.\n\nExecute the following command to load modules:\n\n# NB: the following tools are not available as modules:\n# - plink\nmodule load \\ \n    PDC/24.11 R/4.4.2-cpeGNU-24.11\n\n\n\nRun the pgip initialization script and activate the pgip default environment:\nsource /cfs/klemming/projects/supr/pgip_2025/init.sh\npgip_activate\nThen activate the e-recombination-linkage environment:\n# pgip_shell calls pixi shell -e e-recombination-linkage --as-is\npgip_shell e-recombination-linkage\n\n\n\nCopy the contents to a file pixi.toml in directory recombination-linkage, cd to directory and activate environment with pixi shell:\n\n[workspace]\nchannels = [\"conda-forge\", \"bioconda\"]\nname = \"recombination-linkage\"\nplatforms = [\"linux-64\", \"osx-64\"]\n\n[dependencies]\nplink = \"&gt;=1.90b7.7,&lt;2\"\nr = \"&gt;=4.3,&lt;4.5\"\nr-tidyverse = \"&gt;=2.0.0,&lt;3\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nData setup\n\n\n\n\n\n\n\n PDC\n Local\n\n\n\nMake an analysis directory recombination-linkage and cd to it:\nmkdir -p recombination-linkage && cd recombination-linkage\n\nUse rsync to sync data to your analysis directory (hint: first use options -anv to run the command without actually copying data):\n# Run rsync -anv first time\nrsync -av /cfs/klemming/projects/supr/pgip_2025/data/monkeyflower/selection/large/vcftools-filter-bqsr/ .\n\npgip exercises setup e-recombination-linkage\n\n\n\nMake an analysis directory recombination-linkage and cd to it:\nmkdir -p recombination-linkage && cd recombination-linkage\nThen use wget to retrieve data to analysis directory.\nwget -r -np -nH -N --accept-regex all.variantsites.vcf* --cut-dirs=7 \\\n     https://export.uppmax.uu.se/uppstore2017171/pgip/data/monkeyflower/selection/large/vcftools-filter-bqsr/",
    "crumbs": [
      "Slides",
      "Exercises",
      "Recombination and linkage",
      "Linkage disequilibrium decay"
    ]
  },
  {
    "objectID": "exercises/recombination_linkage/ld_decay.html#about",
    "href": "exercises/recombination_linkage/ld_decay.html#about",
    "title": "Linkage disequilibrium decay",
    "section": "",
    "text": "In this exercise we will use plink2 to calculate the linkage disequilibrium (LD) decay from a VCF. Among other things, the LD structure informs us about the choice appropriate marker density for SNP chips or window size in genome scans.\n\n\n\n\n\n\n\nCommands have been run on a subset of the data\n\n\n\n\n\nThe commands of this document have been run on a subset (a subregion) of the data. Therefore, although you will use the same commands, your results will differ from those presented here.\n\n\n\n\n\n\n\n\n\n\nIntended learning outcomes\n\n\n\n\n\n\ngenerate linkage disequilibrium plot with plink2\n\ndetermine window size for genomic scans\n\n\n\n\n\n\n\n\n\n\n\nTools\n\n\n\n\n\n\n\nListing\n PDC\n pixi\n\n\n\n\nplink\nr\n\n\n\nChoose one of Modules and Virtual environment to access relevant tools.\n\nExecute the following command to load modules:\n\n# NB: the following tools are not available as modules:\n# - plink\nmodule load \\ \n    PDC/24.11 R/4.4.2-cpeGNU-24.11\n\n\n\nRun the pgip initialization script and activate the pgip default environment:\nsource /cfs/klemming/projects/supr/pgip_2025/init.sh\npgip_activate\nThen activate the e-recombination-linkage environment:\n# pgip_shell calls pixi shell -e e-recombination-linkage --as-is\npgip_shell e-recombination-linkage\n\n\n\nCopy the contents to a file pixi.toml in directory recombination-linkage, cd to directory and activate environment with pixi shell:\n\n[workspace]\nchannels = [\"conda-forge\", \"bioconda\"]\nname = \"recombination-linkage\"\nplatforms = [\"linux-64\", \"osx-64\"]\n\n[dependencies]\nplink = \"&gt;=1.90b7.7,&lt;2\"\nr = \"&gt;=4.3,&lt;4.5\"\nr-tidyverse = \"&gt;=2.0.0,&lt;3\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nData setup\n\n\n\n\n\n\n\n PDC\n Local\n\n\n\nMake an analysis directory recombination-linkage and cd to it:\nmkdir -p recombination-linkage && cd recombination-linkage\n\nUse rsync to sync data to your analysis directory (hint: first use options -anv to run the command without actually copying data):\n# Run rsync -anv first time\nrsync -av /cfs/klemming/projects/supr/pgip_2025/data/monkeyflower/selection/large/vcftools-filter-bqsr/ .\n\npgip exercises setup e-recombination-linkage\n\n\n\nMake an analysis directory recombination-linkage and cd to it:\nmkdir -p recombination-linkage && cd recombination-linkage\nThen use wget to retrieve data to analysis directory.\nwget -r -np -nH -N --accept-regex all.variantsites.vcf* --cut-dirs=7 \\\n     https://export.uppmax.uu.se/uppstore2017171/pgip/data/monkeyflower/selection/large/vcftools-filter-bqsr/",
    "crumbs": [
      "Slides",
      "Exercises",
      "Recombination and linkage",
      "Linkage disequilibrium decay"
    ]
  },
  {
    "objectID": "exercises/recombination_linkage/ld_decay.html#linkage-disequilibrium-decayspeciation",
    "href": "exercises/recombination_linkage/ld_decay.html#linkage-disequilibrium-decayspeciation",
    "title": "Linkage disequilibrium decay",
    "section": "Linkage disequilibrium decay1\n",
    "text": "Linkage disequilibrium decay1\n\nGenetic markers in close proximity are often inherited together; we say that the markers are linked. Genetic linkage creates haplotypes and haplotype structures that contain information about inheritance patterns and evolutionary processes. Linkage can be thought of as a force that keeps markers together. Recombination, on the other hand, breaks down linkage and therefore acts as an opposing force that generates new haplotypes as new combinations of alleles. The farther apart two markers are, the more likely a recombination event between them is.\nThe distance between two markers is often measured as a genetic distance. It is measured in centiMorgan (cM), defined as the average number of crossovers (recombination events) per hundred between the markers. For instance, two markers 10cM apart is equivalent to 0.1 crossovers in meiosis on average. For short distances, this can be interpreted as the percent probability of crossover.\nThe genetic distance can be related to physical distance as expressed in base pair distance through the recombination rate, measured in cM/Mb. This metric can be interpreted as the probability of crossover per Mb. For instance, in human the recombination rate is 1.2cM/Mb on average, meaning there is a 1.2% probability of crossover per Mb.\nConsequently, for longer distances recombination tends to be the dominating force, whereas linkage is stronger for shorter distances. For humans, as a rule of thumb LD is stronger for SNPs ~0.01-0.1 cM apart, whereas recombination dominates linkage for distances &gt; ~0.1cM (Pritchard, n.d., Chapter 2.3). Exactly where the transition occurs depends on the strength of recombination. Figure 1 shows the theoretical breakdown of LD for different recombination rates. This is the type of plot that we will generate next.\n\n\n\n\n\n\n\n\n\nFigure 1: Linkage disequilibrium decay for different recombination rates (r)",
    "crumbs": [
      "Slides",
      "Exercises",
      "Recombination and linkage",
      "Linkage disequilibrium decay"
    ]
  },
  {
    "objectID": "exercises/recombination_linkage/ld_decay.html#data-variables-and-r-functions",
    "href": "exercises/recombination_linkage/ld_decay.html#data-variables-and-r-functions",
    "title": "Linkage disequilibrium decay",
    "section": "Data variables and R functions",
    "text": "Data variables and R functions\nWe start by setting up variables and functions to save typing further down. First set a variable to store the VCF we’re analysing:\n\nVCF=all.variantsites.snp.biallelic.vcf.gz\n\n\n\n\n\n\n\nHow many samples, variants and linkage groups are there?\n\n\n\n\n\n\n\n\n\n\n\n\n\nHint\n\n\n\n\n\n\n\nUse bcftools query -l to list samples, bcftools stats to summarize variants, and bcftools view -h to view the header.\n\n\n\n\n\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\n\nbcftools query -l ${VCF} | wc -l\nbcftools stats ${VCF} | grep \"number of SNPs:\"\nbcftools view -h ${VCF} | grep contig\n\n37\nSN  0   number of SNPs: 136135\n##contig=&lt;ID=LG4,length=3000000&gt;\n\n\n\n\n\n\n\n\n\n\n\n\nIn R, we load libraries for plotting and data manipulation\n\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(viridis)\nbw &lt;- theme_bw(base_size = 18) %+replace% theme(axis.text.x = element_text(angle = 45,\n    hjust = 1, vjust = 1))\ntheme_set(bw)\n\nlibrary(dplyr)",
    "crumbs": [
      "Slides",
      "Exercises",
      "Recombination and linkage",
      "Linkage disequilibrium decay"
    ]
  },
  {
    "objectID": "exercises/recombination_linkage/ld_decay.html#calculate-ld-with-plink2",
    "href": "exercises/recombination_linkage/ld_decay.html#calculate-ld-with-plink2",
    "title": "Linkage disequilibrium decay",
    "section": "Calculate LD with plink2",
    "text": "Calculate LD with plink2\nFinally we can start crunching the numbers! We will use plink2 to generate the desired raw output. There are quite a few options involved and we detail them below.2\n\n\n\n\n\n\nNote\n\n\n\nFor larger datasets, to reduce output size, you may have to reduce the magnitude of the --thin option.\n\n\n\n# Set thin to a lower value to start with\nplink2 --vcf $VCF --double-id --allow-extra-chr \\\n  --set-missing-var-ids @:# \\\n  --thin 0.2 --r2-unphased zs --ld-window 999999 --ld-window-kb 100 \\\n  --mac 3 --geno 0.1 --mind 0.5 \\\n  --ld-window-r2 0 \\\n  --make-bed --out monkeyflower_ld 2&gt;&1 &gt; /dev/null\n\nLet’s look at these options.\n\n\n--vcf – the name of the VCF\n\n--double-id – set both individual ID and family ID to the input (sample) ID as some analyses need pedigree information (not relevant here)\n\n--allow-extra-chr – permit chromosome names other than those expected for human (1-22,X)\n\n--set-missing-var-ids – assign chromosome and bp-based IDs to unnamed variants according to format CHROM:BP. Necessary since model organisms often have annotated variant names\n\n--thin – randomly remove variants with probability p. You may need to tweak this variable to get the proper output (and reduce output size!)\n\n--r2-unphased – emulate plink --r2 option; calculate the squared correlation coefficient \\(r^2\\) for unphased data between markers. This is the output that is used for the plots below. The zs argument tells plink2 to compress output in zs format\n\n--ld-window – limit the number of variants between which r2 is calculated (NB: differs from plink!)\n\n--ld-window-kb – max distance in kb between markers for which r2 is calculated\n\n--mac – filter variants on minor allele count. Try out different settings for this parameter and note the difference in output.\n\n--geno – exclude variants with missing call frequencies greater than threshold\n\n--mind – exclude samples with missing call frequencies greater than threshold\n\n-ld-window-r2 – by default this sets a filter on the final output but we want to keep everything\n\n--make-bed – create the (old plink-style) binary output dataset\n\n--out – prefix for output data\n\n2&gt;&1 &gt; /dev/null – redirects errors and output to the electronic wastebin. If the command fails, remove this statement to see what is going on\n\nPhew! That’s a lot of options! The results will be written to a file with file extension .vcor.zst which we will analyse in the next step.",
    "crumbs": [
      "Slides",
      "Exercises",
      "Recombination and linkage",
      "Linkage disequilibrium decay"
    ]
  },
  {
    "objectID": "exercises/recombination_linkage/ld_decay.html#calculate-average-ld",
    "href": "exercises/recombination_linkage/ld_decay.html#calculate-average-ld",
    "title": "Linkage disequilibrium decay",
    "section": "Calculate average LD",
    "text": "Calculate average LD\nIn the previous step, we have calculated pairwise LD between individual marker pairs. However, in order to make a nice looking LD decay plot, we want average LD binned by distance. To facilitate this calculation, below you’ll find an R function that does just that!\n\n#'\n#' Calculate average linkage disequilibrium between pairs of SNPs binned by distance\n#'\ncalc_ld &lt;- function(filename, max_bin = 1e+05) {\n    ld &lt;- read.table(pipe(paste(\"zstdcat\", filename, \"| sed -e \\\"s/#//\\\"\")), header = TRUE)\n    ld$dist &lt;- ld$POS_B - ld$POS_A\n    ld$distc &lt;- cut(ld$dist, breaks = seq(from = 0, to = max_bin + 1, by = 100))\n\n    ldr2 &lt;- ld %&gt;%\n        group_by(distc) %&gt;%\n        summarise(mean = mean(UNPHASED_R2), median = median(UNPHASED_R2), count = length(UNPHASED_R2))\n\n    labs &lt;- levels(ld$distc)\n    ldr2$dist &lt;- as.numeric(sub(\"[^,]*,([^]]*)\\\\]\", \"\\\\1\", labs))\n    return(ldr2)\n}\n\nCopy-paste the function into your R session and run it on the output file:\n\nld2r &lt;- calc_ld(\"monkeyflower_ld.vcor.zst\")\nhead(ld2r, 3)\n\n# A tibble: 3 × 5\n  distc      mean median count  dist\n  &lt;fct&gt;     &lt;dbl&gt;  &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt;\n1 (0,100]   0.222 0.0302  2417   100\n2 (100,200] 0.215 0.0278  1577   200\n3 (200,300] 0.202 0.0277  1291   300\n\n\nWe use head to view the contents of the output tibble. Each row corresponds to an interval (distc column) along with mean/median \\(r^2\\) values, number of data points in interval, and a column containing the interval endpoint. We plot the mean against the endpoint below:\n\n\n\n\n\n\n\n\nIn this particular figure, we see that for short distances, LD is high, but that it decays towards the background value at around 20-25kb. That gives us a rule of thumb for how large windows to choose for genome scans, for instance. That’s it!",
    "crumbs": [
      "Slides",
      "Exercises",
      "Recombination and linkage",
      "Linkage disequilibrium decay"
    ]
  },
  {
    "objectID": "exercises/recombination_linkage/ld_decay.html#additional-things-to-try",
    "href": "exercises/recombination_linkage/ld_decay.html#additional-things-to-try",
    "title": "Linkage disequilibrium decay",
    "section": "Additional things to try",
    "text": "Additional things to try\nCalculating LD is very sensitive to small sample sizes3. Try different parameter settings (in particular --thin and --mac) and remake the plots to see what happens. The take-home message is that some fine-tuning of parameters may be needed to capture the signal from the noise.",
    "crumbs": [
      "Slides",
      "Exercises",
      "Recombination and linkage",
      "Linkage disequilibrium decay"
    ]
  },
  {
    "objectID": "exercises/recombination_linkage/ld_decay.html#footnotes",
    "href": "exercises/recombination_linkage/ld_decay.html#footnotes",
    "title": "Linkage disequilibrium decay",
    "section": "Footnotes",
    "text": "Footnotes\n\nThis exercise is inspired by and based https://speciationgenomics.github.io/ld_decay/]↩︎\nYou can always type plink2 --help followed by the option you want more information about (e.g., plink2 --help --set-missing-var-ids)↩︎\nIn fact, plink2 warns that the sample size is too small, which you can see if you remove the redirect statement (2&gt;&1 &gt; /dev/null) above.↩︎",
    "crumbs": [
      "Slides",
      "Exercises",
      "Recombination and linkage",
      "Linkage disequilibrium decay"
    ]
  },
  {
    "objectID": "exercises/genetic_diversity/landscape.html",
    "href": "exercises/genetic_diversity/landscape.html",
    "title": "Genetic diversity landscapes",
    "section": "",
    "text": "In this exercise we will look at measures that describe variation and compile statistics along a sequence. By scanning variation in windows along the sequence (a.k.a. genomic scan) we can identify outlier regions whose pattern of variation could potentially be attributed to causes other than neutral processes, such as adaptation or migration. We will use the Monkeyflower system to generate a diversity landscape.\n\n\n\n\n\n\n\nCommands have been run on a subset of the data\n\n\n\n\n\nThe commands of this document have been run on a subset (a subregion) of the data. Therefore, although you will use the same commands, your results will differ from those presented here.\n\n\n\n\n\n\n\n\n\n\nLearning objectives\n\n\n\n\n\n\ndescribe and calculate commonly used measures of variation, including nucleotide diversity \\(\\pi\\), divergence \\(d_{XY}\\) and differentiation \\(F_{ST}\\)\n\nperform genome scans of diversity and plot the results\nidentify outlier regions of interest\n\n\n\n\n\n\n\n\n\n\n\nTools\n\n\n\n\n\n\n\nListing\n PDC\n pixi\n\n\n\n\n\nbcftools (Danecek et al., 2021)\n\n\nbedtools (Quinlan & Hall, 2010)\n\ncsvtk\n\npixy (Korunes & Samuk, 2021)\n\n\nvcftools (Danecek et al., 2011)\n\n\n\n\nChoose one of Modules and Virtual environment to access relevant tools.\n\nExecute the following command to load modules:\n\n# NB: the following tools are not available as modules:\n# - csvtk\nmodule load bioinfo-tools \\ \n    bcftools/1.20 bedtools/2.31.0 pixy/1.2.5.beta1 \\ \n    vcftools/0.1.16\n\n\n\nRun the pgip initialization script and activate the pgip default environment:\nsource /cfs/klemming/projects/supr/pgip_2025/init.sh\npgip_activate\nThen activate the e-genetic-diversity environment:\n# pgip_shell calls pixi shell -e e-genetic-diversity --as-is\npgip_shell e-genetic-diversity\n\n\n\nCopy the contents to a file pixi.toml in directory genetic-diversity, cd to directory and activate environment with pixi shell:\n\n[workspace]\nchannels = [\"conda-forge\", \"bioconda\"]\nname = \"genetic-diversity\"\nplatforms = [\"linux-64\", \"osx-64\"]\n\n[dependencies]\nbcftools = \"&gt;=1.22,&lt;2\"\nbedtools = \"&gt;=2.31.1,&lt;3\"\ncsvtk = \"&gt;=0.34.0,&lt;0.35\"\npixy = \"&gt;=2.0.0.beta12,&lt;3\"\nvcftools = \"&gt;=0.1.17,&lt;0.2\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nData setup\n\n\n\n\n\n\n\n PDC\n Local\n\n\n\nMake an analysis directory genetic-diversity and cd to it:\nmkdir -p genetic-diversity && cd genetic-diversity\n\nUse rsync to sync data to your analysis directory (hint: first use options -anv to run the command without actually copying data):\n# Run rsync -anv first time\nrsync -av /cfs/klemming/projects/supr/pgip_2025/data/monkeyflower/selection/large/vcftools-filter-bqsr/ .\n\npgip exercises setup e-genetic-diversity\n\n\n\nMake an analysis directory genetic-diversity and cd to it:\nmkdir -p genetic-diversity && cd genetic-diversity\nThen use wget to retrieve data to analysis directory.\nwget -r -np -nH -N --accept-regex all* --cut-dirs=7 \\\n     https://export.uppmax.uu.se/uppstore2017171/pgip/data/monkeyflower/selection/large/vcftools-filter-bqsr/",
    "crumbs": [
      "Slides",
      "Exercises",
      "Genetic diversity",
      "Genetic diversity landscapes"
    ]
  },
  {
    "objectID": "exercises/genetic_diversity/landscape.html#about",
    "href": "exercises/genetic_diversity/landscape.html#about",
    "title": "Genetic diversity landscapes",
    "section": "",
    "text": "In this exercise we will look at measures that describe variation and compile statistics along a sequence. By scanning variation in windows along the sequence (a.k.a. genomic scan) we can identify outlier regions whose pattern of variation could potentially be attributed to causes other than neutral processes, such as adaptation or migration. We will use the Monkeyflower system to generate a diversity landscape.\n\n\n\n\n\n\n\nCommands have been run on a subset of the data\n\n\n\n\n\nThe commands of this document have been run on a subset (a subregion) of the data. Therefore, although you will use the same commands, your results will differ from those presented here.\n\n\n\n\n\n\n\n\n\n\nLearning objectives\n\n\n\n\n\n\ndescribe and calculate commonly used measures of variation, including nucleotide diversity \\(\\pi\\), divergence \\(d_{XY}\\) and differentiation \\(F_{ST}\\)\n\nperform genome scans of diversity and plot the results\nidentify outlier regions of interest\n\n\n\n\n\n\n\n\n\n\n\nTools\n\n\n\n\n\n\n\nListing\n PDC\n pixi\n\n\n\n\n\nbcftools (Danecek et al., 2021)\n\n\nbedtools (Quinlan & Hall, 2010)\n\ncsvtk\n\npixy (Korunes & Samuk, 2021)\n\n\nvcftools (Danecek et al., 2011)\n\n\n\n\nChoose one of Modules and Virtual environment to access relevant tools.\n\nExecute the following command to load modules:\n\n# NB: the following tools are not available as modules:\n# - csvtk\nmodule load bioinfo-tools \\ \n    bcftools/1.20 bedtools/2.31.0 pixy/1.2.5.beta1 \\ \n    vcftools/0.1.16\n\n\n\nRun the pgip initialization script and activate the pgip default environment:\nsource /cfs/klemming/projects/supr/pgip_2025/init.sh\npgip_activate\nThen activate the e-genetic-diversity environment:\n# pgip_shell calls pixi shell -e e-genetic-diversity --as-is\npgip_shell e-genetic-diversity\n\n\n\nCopy the contents to a file pixi.toml in directory genetic-diversity, cd to directory and activate environment with pixi shell:\n\n[workspace]\nchannels = [\"conda-forge\", \"bioconda\"]\nname = \"genetic-diversity\"\nplatforms = [\"linux-64\", \"osx-64\"]\n\n[dependencies]\nbcftools = \"&gt;=1.22,&lt;2\"\nbedtools = \"&gt;=2.31.1,&lt;3\"\ncsvtk = \"&gt;=0.34.0,&lt;0.35\"\npixy = \"&gt;=2.0.0.beta12,&lt;3\"\nvcftools = \"&gt;=0.1.17,&lt;0.2\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nData setup\n\n\n\n\n\n\n\n PDC\n Local\n\n\n\nMake an analysis directory genetic-diversity and cd to it:\nmkdir -p genetic-diversity && cd genetic-diversity\n\nUse rsync to sync data to your analysis directory (hint: first use options -anv to run the command without actually copying data):\n# Run rsync -anv first time\nrsync -av /cfs/klemming/projects/supr/pgip_2025/data/monkeyflower/selection/large/vcftools-filter-bqsr/ .\n\npgip exercises setup e-genetic-diversity\n\n\n\nMake an analysis directory genetic-diversity and cd to it:\nmkdir -p genetic-diversity && cd genetic-diversity\nThen use wget to retrieve data to analysis directory.\nwget -r -np -nH -N --accept-regex all* --cut-dirs=7 \\\n     https://export.uppmax.uu.se/uppstore2017171/pgip/data/monkeyflower/selection/large/vcftools-filter-bqsr/",
    "crumbs": [
      "Slides",
      "Exercises",
      "Genetic diversity",
      "Genetic diversity landscapes"
    ]
  },
  {
    "objectID": "exercises/genetic_diversity/landscape.html#preparation",
    "href": "exercises/genetic_diversity/landscape.html#preparation",
    "title": "Genetic diversity landscapes",
    "section": "Preparation",
    "text": "Preparation\nIn this exercise, we will be analysing the full data set for linkage group 4 (LG4), consisting of all 37 samples.\n\nCoderead_bcftools &lt;- function(fn, stat = \"SN\") {\n    x &lt;- readLines(fn)\n    cbind(fn, read.table(textConnection(x[grep(stat, x)]), sep = \"\\t\"))\n}\nvcfs &lt;- list.files(pattern = \"vcf.gz.bcftools.stats$\")\nx &lt;- tibble(do.call(\"rbind\", lapply(vcfs, read_bcftools)))\ncolnames(x) &lt;- c(\"Filename\", \"SN\", \"id\", \"key\", \"value\")\nx %&gt;%\n    mutate(across(.col = \"Filename\", .names = \"FN\", .fns = list(~(str_replace(.x,\n        \".bcftools.stats\", \"\"))))) %&gt;%\n    mutate(across(.col = \"key\", .names = \"key\", .fns = list(~str_replace(.x, \"number of \",\n        \"\")))) %&gt;%\n    mutate(across(.col = \"key\", .names = \"key\", .fns = list(~str_replace(.x, \":\",\n        \"\")))) %&gt;%\n    filter(key == \"records\" | key == \"samples\") %&gt;%\n    pivot_wider(names_from = key, values_from = value) %&gt;%\n    select(Filename, records, samples) %&gt;%\n    kable()\n\n\nTable 1: Summary of VCF files\n\n\n\n\nFilename\nrecords\nsamples\n\n\nallsites.vcf.gz.bcftools.stats\n17076\n37\n\n\n\n\n\n\n\nSome of the programs require we prepare population files. For pixy, this is a headerless, tab-separated file with sample and population columns. The sampleinfo.csv file contains the information we need; the sample names have been prefixed with a three-letter code to indicate population (apart from ssp. puniceus which also comes with a single letter R or Y indicating ecotype). Table 2 summarizes the populations and samples.\n\nCode# R code to generate sample population summary\ndata &lt;- tibble(read.csv(\"sampleinfo.csv\"))\ndata &lt;- data %&gt;%\n    mutate(Population = SampleAlias) %&gt;%\n    mutate(across(.col = \"Population\", .names = \"Population\", .fns = list(~str_replace(.x,\n        \"(.+)-.+$\", \"\\\\1\")))) %&gt;%\n    mutate(across(.col = \"Population\", .names = \"Population\", .fns = list(~str_replace(.x,\n        \"(CLV)_.+\", \"\\\\1\"))))\ndata %&gt;%\n    group_by(Population, ScientificName) %&gt;%\n    summarise(n = n(), samples = paste(SampleAlias, collapse = \", \")) %&gt;%\n    kable()\n\n\nTable 2: Summary of populations and samples.\n\n\n\n\n\n\n\n\n\n\nPopulation\nScientificName\nn\nsamples\n\n\n\nARI\nDiplacus aridus\n4\nARI-159_83, ARI-159_84, ARI-195_1, ARI-T84\n\n\nAUR\nDiplacus aurantiacus\n4\nAUR-T102, AUR-T104, AUR-T50, AUR-T92\n\n\nCAL\nDiplacus calycinus\n4\nCAL-T90, CAL-T91, CAL-T144, CAL-T150\n\n\nCLV\nDiplacus clevelandii\n3\nCLV_GH, CLV_11, CLV_4\n\n\nGRA\nDiplacus grandiflorus\n4\nGRA-T96, GRA-T101, GRA-T61, GRA-T99\n\n\nLON\nDiplacus longiflorus\n4\nLON-T33, LON-T8, LON-DPR, LON-SS\n\n\nPAR\nErythranthe parviflora\n4\nPAR-KK161, PAR-KK168, PAR-KK180, PAR-KK182\n\n\nPUN-R\nDiplacus puniceus\n5\nPUN-R-ELF, PUN-R-JMC, PUN-R-LH, PUN-R-MT, PUN-R-UCSD\n\n\nPUN-Y\nDiplacus puniceus\n5\nPUN-Y-BCRD, PUN-Y-INJ, PUN-Y-LO, PUN-Y-PCT, PUN-Y-POTR\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 1: Evolutionary relationships across the radiation\n\n\n\n\n\n\n\nFigure 2: Monkeyflower sampling locations\n\n\nWe convert the sample information with csvtk. We also add a populations file with all samples belonging to the same population:1\n\ncsvtk mutate --name Population --fields SampleAlias sampleinfo.csv |\n csvtk cut --fields SampleAlias,Population |\n csvtk replace --fields Population --pattern \"(.+)-.+$\" --replacement \"\\$1\" |\n csvtk replace --fields Population --pattern \"(CLV)_.+\" --replacement \"\\$1\" |\n csvtk del-header --out-tabs &gt; populations.txt\ncsvtk cut --fields SampleAlias sampleinfo.csv |\n csvtk mutate --name Population --fields SampleAlias |\n csvtk replace --fields Population --pattern \".+\" --replacement \"ALL\" |\n csvtk del-header --out-tabs &gt; populations.ALL.txt\n\nvcftools, on the other hand, requires that populations are specified as separate files, containing the individuals of each population. We can use the populations.txt file to quickly generate population-specific files, and we add an ALL population, treating all samples as coming from the same population:\n\nfor pop in ARI AUR CAL CLV GRA LON PAR PUN-R PUN-Y; do\n csvtk --no-header-row grep --tabs --fields 2 --pattern \"$pop\" populations.txt | \\\n  csvtk cut --tabs --fields 1 &gt; $pop.txt;\ndone\ncsvtk cut --tabs --no-header-row --fields 1 populations.txt &gt; ALL.txt\n\nWe define environment variables to make the downstream commands easier to type:\n\nVCF=allsites.vcf.gz\nPOPS=populations.txt",
    "crumbs": [
      "Slides",
      "Exercises",
      "Genetic diversity",
      "Genetic diversity landscapes"
    ]
  },
  {
    "objectID": "exercises/genetic_diversity/landscape.html#generating-and-visualising-diversity-statistics",
    "href": "exercises/genetic_diversity/landscape.html#generating-and-visualising-diversity-statistics",
    "title": "Genetic diversity landscapes",
    "section": "Generating and visualising diversity statistics",
    "text": "Generating and visualising diversity statistics\nCompiling statistics with vcftools\nCreate an output directory for the results and define some environment variables:\n\nmkdir -p 01-vcftools\nOUT=01-vcftools/allsites\n\nNucleotide diversity (\\(\\pi\\))\nNucleotide diversity can be calculated by site (--site-pi) or in windows (--window-pi)2.\n\nvcftools --gzvcf $VCF --site-pi --out $OUT 2&gt; /dev/null\ncsvtk summary $OUT.sites.pi --ignore-non-numbers --tabs \\\n   --fields PI:mean,PI:stdev\n\nPI:mean PI:stdev\n0.02    0.07\n\n\n\n# Set your window size higher, e.g., 10kb\nvcftools --gzvcf $VCF --window-pi 1000 --out $OUT 2&gt; /dev/null\n\n\n\n\n\n\n\nOn genome scans and window sizes\n\n\n\n\n\nGenetic diversity estimates can be noisy, so we often want to compute values in sliding windows across a sequence. Choosing window size can be as simple as trying out different values, often ranging from single to several hundred kilobases. As always, the appropriate size depends on the analyses.\nOne rule of thumb that can be applied is that the window size should be larger than the genomic background of linkage disequilibrium (LD). Recall, LD is the non-random co-segregation of alleles at two or more loci. Linked loci will induce correlations in window-based statistics, so by choosing a window size larger than the LD background, we ensure that our windows are, in some sense, independent.\nFor this reason, a common approach is to calculate some measure of LD between marker pairs, and generate a plot of LD decay. This is outside the scope of this exercise, but the interested reader can consult the plink documentation for ways to do this. See also Figure 3 for an example plot.\n\n\n\n\n\n\n\n\n\n\n\nFigure 3: Properties of genetic variation and inferred demographic history in sampled A. millepora. Fuller et al. (2020), Figure 2. Upper left plot illustrates LD as a function of physical distance. Here, choosing a window size 20-30kb would ensure that most windows are independent.\n\n\n\nEven though single point summary statistics can be informative, we can get an overview of the distribution over the chromosome by plotting:\n\ncsvtk plot line --tabs $OUT.windowed.pi -x BIN_START -y PI \\\n   --point-size 0.01 --xlab \"Position (bp)\" \\\n   --ylab \"Diversity\" --title LG4 --width 9.0 --height 3.5 \\\n   &gt; $OUT.png\n\n\n\n\n\n\nFigure 4: Nucleotide diversity across LG4 for all populations.\n\n\nFigure 4 shows the diversity for all populations. We would also be interested in comparing the diversity for different populations. This can be achieved by passing a population file to bcftools view and piping (|) the output to vcftools:\n\nbcftools view -S PAR.txt $VCF |\\\n vcftools --vcf - --window-pi 1000 --out $OUT.PAR 2&gt; /dev/null\nbcftools view -S ARI.txt $VCF |\\\n vcftools --vcf - --window-pi 1000 --out $OUT.ARI 2&gt; /dev/null\n\nWith some csvtk magic we can combine the measures and plot:\n\n# When assigning a constant must enclose it in single quotes within double quotes\ncsvtk mutate2 --tabs --name Population --expression \" 'ARI' \" \\\n   $OUT.ARI.windowed.pi &gt; $OUT.ARI.wpi\ncsvtk mutate2 --tabs --name Population --expression \" 'PAR' \" \\\n   $OUT.PAR.windowed.pi &gt; $OUT.PAR.wpi\ncsvtk concat --tabs $OUT.ARI.wpi $OUT.PAR.wpi |\\\n csvtk plot --tabs line - -x BIN_START -y PI \\\n    --group-field Population \\\n    --point-size 0.01 --xlab \"Position (bp)\" \\\n    --ylab \"Diversity\" --title \"LG4:PAR and ARI\" \\\n    --width 9.0 --height 3.5 \\\n    &gt; $OUT.ARI.PAR.png 2&gt;/dev/null\n\n\n\n\n\n\nFigure 5: Nucleotide diversity across LG4 comparing populations ARI and PAR.\n\n\n\\(F_{ST}\\)\nSince \\(F_{ST}\\) is a statistic that compares populations, we must supply two or more of the population files we defined above. A population file name is passed to the --weir-fst-pop option. Calculations are done by site per default, but let’s calculate \\(F_{ST}\\) for a comparison of two populations in 100kb windows:\n\n# Set your window size higher, e.g., 100000\nvcftools --gzvcf $VCF --weir-fst-pop ARI.txt \\\n   --weir-fst-pop PAR.txt \\\n   --fst-window-size 1000 \\\n   --out $OUT.ARI-PAR\n\n\ncsvtk plot line --tabs $OUT.ARI-PAR.windowed.weir.fst \\\n   -x BIN_START -y MEAN_FST \\\n   --point-size 0.01 --xlab \"Position (bp)\" \\\n   --ylab \"Fst\" --title \"LG4:ARI vs PAR\" \\\n   --width 9.0 --height 3.5 \\\n   &gt; $OUT.ARI-PAR.windowed.weir.fst.mean.png\n\n\n\n\n\n\nFigure 6: Mean \\(F_{ST}\\) across LG4, comparing ARI and PAR populations.\n\n\nCompiling statistics with pixy\nThe vcftools statistics that we just calculated have a couple of issues:\n\nthey have been calculated on unfiltered data; this can be somewhat remediated by applying a depth-based filter\na more concerning problem is that even if we did apply a filter, all missing sites would be treated as invariant sites, when in reality the windows would need to be adjusted to the number of accessible sites within a window. This number could be calculated from a mask file, but adds some complexity to the calculations.\n\nInstead of applying filters, let’s first try out an alternative solution. pixy is a program that facilitates the calculation of nucleotide diversity within \\(\\pi\\) and between \\(d_{XY}\\) populations from a VCF, as well as differentiation (\\(F_{ST}\\)). It also takes invariant sites and missing data into consideration. Another nice feature is that by providing a population file with all samples, every population comparison is done on the fly, so only one run is needed!\nCalculating per-site statistics takes too long time, so we will only generate windowed output here. This may still take a couple of minutes though.\n\nmkdir -p 02-pixy\n# Set your window size higher, e.g., 100kb\npixy --stats pi fst dxy \\\n  --vcf $VCF \\\n  --populations populations.txt \\\n  --window_size 1000 \\\n  --output_folder 02-pixy \\\n  --n_cores 4\n\n\nhead -n 3 02-pixy/pixy_pi.txt\n\npop chromosome  window_pos_1    window_pos_2    avg_pi  no_sites    count_diffs count_comparisons   count_missing\nLON LG4 1   1000    0.0019674355495251  616 29  14740   3544\nPAR LG4 1   1000    0.0008201763379126  625 12  14631   3653\n\n\nFor windowed output, the pixy output files contain information on the windows, the number of missing sites, number of snps, and more. The first column corresponds to the population, which means we can easily select lines matching population(s) of interest. For a full description, consult the documentation. Note that because we provided a population file defining two populations, diversity is calculated per population.\nWe conclude by plotting diversity for ARI and PAR\n\n# Possibly remove NA values that otherwise would throw error\ncsvtk filter2 --tabs \\\n   --filter '$avg_pi != \"NA\" && ($pop == \"ARI\" || $pop == \"PAR\") ' \\\n   02-pixy/pixy_pi.txt | \\\n csvtk plot line --tabs - -x window_pos_1 -y avg_pi \\\n    --group-field pop \\\n    --point-size 0.01 --xlab \"Position (bp)\" \\\n    --ylab \"Diversity\" --title \"LG4:ARI and PAR\" \\\n --width 9.0 --height 3.5 \\\n    &gt; 02-pixy/pixy_pi.ARI-PAR.txt.png\n\n\n\n\n\n\nFigure 7: Mean diversity across LG4 for ARI and PAR.\n\n\nand \\(F_{ST}\\) comparing ARI and PAR\n\ncsvtk filter2 --tabs \\\n   --filter '$avg_wc_fst != \"NA\" && $pop1 == \"PAR\" && $pop2 == \"ARI\" ' \\\n   02-pixy/pixy_fst.txt | \\\n csvtk plot line -t - -x window_pos_1 -y avg_wc_fst \\\n    --point-size 0.01 --xlab \"Position (bp)\" \\\n    --ylab \"Fst\" --title \"LG4:ARI vs PAR\" --width 9.0 --height 3.5 \\\n    &gt; 02-pixy/pixy_fst.ARI-PAR.txt.png\n\n\n\n\n\n\nFigure 8: Mean \\(F_{ST}\\) across LG4 for ARI vs PAR.\n\n\nComparing Figure 8 to Figure 6 shows a stark contrast, so clearly, how you filter and handle invariant/missing data will strongly affect the outcome.\n\n\n\n\n\n\nOPTIONAL: Apply filters to pixy and vcftools output and compare\n\n\n\n\n\n\n\nGenerate depth filters, utilizing the knowledge from the variant filtering lab, and apply them to the VCF file. Rerun a couple of pixy and vcftools stats to see how it affects the outcome. Provided you use identical window sizes, you could make a scatter plot of a statistic of the two tools against oneanother.",
    "crumbs": [
      "Slides",
      "Exercises",
      "Genetic diversity",
      "Genetic diversity landscapes"
    ]
  },
  {
    "objectID": "exercises/genetic_diversity/landscape.html#genome-scans-and-genomic-features",
    "href": "exercises/genetic_diversity/landscape.html#genome-scans-and-genomic-features",
    "title": "Genetic diversity landscapes",
    "section": "Genome scans and genomic features",
    "text": "Genome scans and genomic features\n\n Working with Z-transformed data\nTransforming raw data to Z-scores can facilitate the scan for outlier regions. However, there is no easy way to do this with csvtk, so here is some template R code to do this from pixy data.\n\npi &lt;- read.table(\"pixy_pi.txt\", header = TRUE)\n# Select population PAR\ndata &lt;- data[data$pop == \"PAR\", ]\nx &lt;- data$avg_pi\nz &lt;- (x - mean(x, na.rm = TRUE))/sd(x, na.rm = TRUE)\n# Plot data along chromosome and identify region by eye plot(x =\n# data$window_pos_1, y = z, xlab = 'Position (bp)')\n\nStratifying by genomic feature\npixy accepts as input a BED file that defines coordinates of genome features. Here is an example of how to extract CDS regions and then compile results with pixy:\n\ncsvtk filter2 --tabs annotation.gff --filter ' $3 == \"CDS\" ' |\\\n csvtk cut --tabs --fields 1,10,11 | bedtools sort | bedtools merge \\\n    &gt; CDS.bed 2&gt;/dev/null\n\n\npixy --vcf allsites.vcf.gz --stats pi \\\n --populations populations.txt \\\n --output_prefix cds --bed_file CDS.bed",
    "crumbs": [
      "Slides",
      "Exercises",
      "Genetic diversity",
      "Genetic diversity landscapes"
    ]
  },
  {
    "objectID": "exercises/genetic_diversity/landscape.html#monkeyflower-diversity-landscape",
    "href": "exercises/genetic_diversity/landscape.html#monkeyflower-diversity-landscape",
    "title": "Genetic diversity landscapes",
    "section": "Monkeyflower diversity landscape",
    "text": "Monkeyflower diversity landscape\nDrawing on what you learned earlier today about filtering, and with the help of the command examples above, you can now start exploring the Monkeyflower diversity landscape. Try different population comparisons, perform outlier analyses, and see if you can find candidate regions of interest. If you want inspiration, take a look at the methods section of Stankowski et al. (2019).\nHere are some suggested actions that you can take, but feel free to look at the data in any way you want.\n\n\n\n\n\n\nApply depth filter to VCF\n\n\n\n\n\n\n\nCreate a VCF subset of all samples and generate a depth filter, following the guidelines in the filtering exercise.\n\n\n\n\n\n\n\n\n\n\n\nRun an outlier analysis and investigate significant loci\n\n\n\n\n\n\n\nZ-transform a statistic and try to identify outliers. You can compare the coordinates of any significant locus with those in the provided annotation file MAUR_annotation_functional_submission.gff.\n\n\n\n\n\n\n\n\n\n\n\nCompile data by genome feature\n\n\n\n\n\n\n\nUse the annotation file MAUR_annotation_functional_submission.gff to generate BED files that define the regions of some features of interest, e.g., genes, introns, or UTRs. Do the results make sense?\n\n\n\n\n\n\n\n\n\n\n\nReproduce distributions of diversity statistics for different population comparisons\n\n\n\n\n\n\n\n\nSee if you can reproduce some of the results in Stankowski et al. (2019), Fig. 2\n\n\n\n\n\n\n\n\n\n\n\n\nInvestigate a known adaptive locus on LG4\n\n\n\n\n\n\n\n\nInvestigate more closely the known adaptive locus on LG4, as illustrated in Stankowski et al. (2019), Fig. 4",
    "crumbs": [
      "Slides",
      "Exercises",
      "Genetic diversity",
      "Genetic diversity landscapes"
    ]
  },
  {
    "objectID": "exercises/genetic_diversity/landscape.html#footnotes",
    "href": "exercises/genetic_diversity/landscape.html#footnotes",
    "title": "Genetic diversity landscapes",
    "section": "Footnotes",
    "text": "Footnotes\n\nWhenever you see a large number of commands strung together with pipe (|) characters and you are unsure what is going on, I suggest you build the command from scratch, one statement at a time. So, begin with csvtk mutate up until the first pipe character, and once you understand what is going on, add the next statement up until the next pipe character, and so on.↩︎\nRecall; the dataset used to render these pages is much smaller, which is why we use a smaller window size below. Consequently, your plot will look different.↩︎",
    "crumbs": [
      "Slides",
      "Exercises",
      "Genetic diversity",
      "Genetic diversity landscapes"
    ]
  }
]