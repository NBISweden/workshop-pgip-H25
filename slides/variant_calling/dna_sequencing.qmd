---
title: DNA sequencing data
subtitle: DNA sequencing approaches and data
author:
  - "Per Unneberg"
format:
  nbis-quarto-revealjs:
    footer: DNA data
---

## Setup {visibility="hidden" .hidden .unnumbered .unlisted}

{{< include /slides/_knitr.qmd >}}

{{< include /slides/_rlibs.qmd >}}

```{r libs}
#| echo: false
#| eval: true
#| cache: false
library(readxl)
library(curl)
```

## Sequencing technologies

:::: {.columns}

::: {.column width="90%"}

![](https://ngisweden.scilifelab.se/wp-content/uploads/2023/06/tech3-1024x171.png){width=80%
fig-align=center}

:::

::: {.column width="10%" fig-align=left}

![](https://ngisweden.scilifelab.se/wp-content/themes/ngisweden/img/NGI-logo.svg){width=100%}

:::

::::

:::: {.columns}

::: {.column width="50%"}

##### Illumina NovaSeq 600

:::{.smallr}

> Scale up and down with a tunable output of up to 6 Tb and 20B single
> reads in < 2 days.

:::

Up to 2X250 bp read length. Price example: 8,000 SEK total for
resequencing 3Gbp genome to 30X

::: {.flushright .smallest}

<https://www.illumina.com/systems/sequencing-platforms/novaseq.html>

:::

:::

::: {.column width="50%"}

##### PacBio Revio

:::{.smallr}

> Up to 360 Gb of HiFi reads per day, equivalent to 1,300 human whole
> genomes per year.

:::

Tens of kilobases long HiFi reads. Price example (Sequel II): ~35kSEK
per library and SMRT cell

::: {.flushright .smallest}

<https://www.pacb.com/revio/>

:::

:::

::::

## Sequencing approaches

:::: {.columns}

::: {.column width="50%"}

<!-- markdownlint-disable MD013 -->

```{r }
#| label: fig-sequencing-cost
#| echo: false
#| eval: true
#| fig-width: 12
#| fig-height: 8
#| fig-cap: DNA sequencing costs [@wetterstrandka_DNASequencingCosts]
#| out-width: 90%
url <- "https://www.genome.gov/sites/default/files/media/files/2023-05/Sequencing_Cost_Data_Table_May2022.xls"
if (!file.exists(basename(url)))
    download.file(url, destfile=basename(url))
data <- read_excel(basename(url))
colnames(data) <- c("Date", "Mb", "Genome")
ggplot(data, aes(x=as.Date(Date), y=Mb)) + geom_line(size=2) +
  xlab("Year") +
  ylab("Cost (USD)") +
  scale_y_continuous(trans="log10", labels=comma, n.breaks=6) +
  scale_x_date(breaks="year", labels=date_format("%Y")) +
  theme(axis.text=element_text(size=24), text=element_text(size=24))
```

<!-- markdownlint-enable MD013 -->

Despite price drop, still need to make choices regarding depth and
breadth of sequencing coverage and number of samples.

:::

::: {.column width="50%" .fragment}

:::{#fig-sequencing-approaches}

![Sequencing approaches](assets/images/sequencing_approaches_lou_2021.webp){width=60% fig-align=center}\

Comparison of common sequencing approaches. Restriction
site-associated DNA sequencing (RAD-seq, top), targets regions
flanking given restriction sites, but misses much of genome. Pooled
sequencing (Pool-seq, middle) is cost-effective, but loses information
about individuals. Low-coverage whole genome sequencing (lcWGS,
bottom) is increasing in popularity, but genotyping low coverage data
is problematic.

:::

::: {.flushright .smallest}

@lou_BeginnerGuideLowcoverage_2021

:::

:::{.fragment}

Our focus will be on Whole Genome reSequencing (WGS), mostly
high-coverage.

:::

:::

::::

::: {.notes}

Despite the fact that sequencing costs have dropped dramatically
(left), there still are choices to be made regarding the distribution
of costs along 1) sequencing coverage depth, i.e., the mean depth of
sequencing 2) sequencing coverage breadth, i.e., whether or not to do
targeted or whole-genome resequencing or 3) sample size; how many
individuals to sample. Whole-genome resequencing of individuals from
populations to sufficient depth (30X) is still very expensive, but
often needed to understand mechanisms of adaptation
[@lou_BeginnerGuideLowcoverage_2021 p.5967]. Various protocols have
been developed to meet the challenges that cost imposes:

1. RAD-seq, restriction site-associated DNA sequencing, targets
   regions flanking given restriction sites. Downside: much of genome
   is missed
2. pool-seq, pooled sequencing. Cost-effective, but loses information
   about individuals
3. lcWGS, low-coverage whole genome sequencing increasing in
   popularity. Genotyping low coverage is problematic however.

Our focus here is WGS (whole-genome resequencing), primarily
high-coverage, despite the cost it may incur.

:::

## Genome assembly and population resequencing

:::: {.columns}

::: {.column width="50%"}

#### Genome assembly

:::{#fig-genome-assembly}

![Genome assembly overview](assets/images/oso-genome-assembly.webp){width=70%}\

Schematic overview of genome assembly and annotation. Population
resequencing often requires a *reference assembly*. Assembly quality
impacts downstream analyses

:::

::: {.flushright .smallest .translatey50}

@allendorf_PopulationGenomics_2022

:::

:::

::: {.column width="50%" .fragment}

#### Population resequencing

:::{#fig-pop-reseq}

![Population resequencing](assets/images/population-resequencing.webp){}\

Overview of short reads mapped to a reference sequence. Reads have
been colored according to population (red or yellow). There are three
individuals from each population. Note the variation in sequence
coverage. Mismatches in reads are highlighted as different colors with
respect to population color.

:::

:::

::::

::: {.notes}

DNA sequences are generated from DNA fragments, often as paired-end
reads, or long reads. For population genomics, it is often necessary
to generate a *reference sequence* through *genome assembly*, the
quality of which will impact the types of downstream analyses that can
be done. Reads are assembled into *contigs* (contiguous sequences)
that with the aid of genetic maps are pieced together into
*scaffolds*. In the left figure, note that the scaffolds contain areas
of unknown sequence.

Once a reference sequence has been produced, (short) reads from
individuals are mapped to the reference (right).

:::

## DNA sequences in FASTQ format {.smaller}

```{bash }
#| label: list-fastq-files
#| echo: true
#| eval: false
ls --long --human fastq/*.fastq.gz
```

```{bash }
#| label: list-fastq-files-dereference
#| echo: false
#| eval: true
ls -lLh fastq/PUN-Y*.fastq.gz
```

::: {.fragment}

Count number of lines:

```{bash }
#| label: count-entries-fastq-file
#| echo: true
#| eval: true
zcat fastq/PUN-Y-INJ_R1.fastq.gz | wc --lines
```

:::

:::{}

::: {.fragment}

:::: {.columns}

::: {.column width="30%"}

Format:

1. sequence id (prefixed by `@`)
2. DNA sequence
3. separator (`+`)
4. Phred base quality scores

:::

::: {.column width="70%"}

```{bash }
#| label: show-fastq
#| echo: true
#| eval: true
zcat fastq/PUN-Y-INJ_R1.fastq.gz | head --lines 8 | cut --characters -30
```

:::

::::

:::

:::

::: {.notes}

First data encounter is usually FASTQ files from sequencing center.
Files contain **sequence reads** that are generated by the sequencing
machine. They correspond to short stretches of DNA that have been
sequentially read by the machine, resulting in a string of **base
calls** that constitute the reads. Every DNA base has an associated
so-called **Phred-scaled quality score** from 0 to 93 that are encoded
using ASCII 33 to 126.

The format consists of 1. @ title with id 2. raw sequence 3. +: a
separator with optional description 4. the quality scores

:::

## DNA sequence quality control

```{bash }
#| label: fastqc-plot
#| echo: false
#| eval: false
mkdir -p fastqc
fastqc --extract --outdir fastqc fastq/PUN-Y-INJ_R1.fastq.gz
```

Quality values represent the probability $P$ that the call is
*incorrect*. They are coded as **Phred** quality scores $Q$. Here,
$Q=20$ implies 1% probability of error, $Q=30$ implies 0.1% and so on.
Typically you should not rely on quality values below $20$.

$$
Q = -10 \log_{10} P
$$

:::: {.columns}

::: {.column width="50%"}

A common way to do QC is with `fastqc`:

```{bash }
#| label: fastqc-example
#| echo: true
#| eval: false
fastqc --outdir fastqc --extract fastq/*fastq.gz
```

::: {.fragment}

- For Illumina paired-end sequencing, the **second** read pair usually
  shows a larger drop in quality towards ends
- **Trimming** the sequences for adapter sequence and quality is good
  practice (e.g., with CutAdapt [@martin_CutadaptRemovesAdapter_2011])

:::

:::

::: {.column width="50%"}

![](results/PUN-Y-INJ_R1_fastqc/Images/per_base_quality.svg){width=80%}

:::

::::

## Bibliography {.smaller}
